<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>稚昂长</title>
  
  <subtitle>幼稚园园长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yzyyz.top/"/>
  <updated>2022-10-08T06:51:04.578Z</updated>
  <id>https://yzyyz.top/</id>
  
  <author>
    <name>幼稚园园长</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NVS:node版本管理工具</title>
    <link href="https://yzyyz.top/archives/a18c7649.html"/>
    <id>https://yzyyz.top/archives/a18c7649.html</id>
    <published>2022-10-08T01:26:53.000Z</published>
    <updated>2022-10-08T06:51:04.578Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在学习过程中，对我的 node 进行了更新，这是必要的，但我的博客环境要求 更低版本的 node, 可使用NVS、 NVM、PM2 等工具。</p><a id="more"></a><h2 id="NVM"><a href="#NVM" class="headerlink" title="NVM"></a>NVM</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>查看<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="external nofollow noopener noreferrer">官方windows仓库</a></p><ul><li><p>nvm-noinstall.zip： 这个是绿色免安装版本，但是使用之前需要配置</p></li><li><p>nvm-setup.zip：这是一个安装包，下载之后点击安装，无需配置就可以使用，方便。</p></li><li><p>Source code(zip)：zip压缩的源码</p></li><li><p>Sourc code(tar.gz)：tar.gz的源码，一般用于*nix系统</p></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><strong>nvm list</strong>：查看当前本机使用 nvm 已安装的nodejs的版本列表</p><p><strong>nvm arch</strong>：查看当前本机是 32 bit 还是 64 bit</p><p><strong>nvm install node@版本号</strong>：安装指定版本的 nodejs</p><p><strong>nvm install latest</strong>：安装最新版本的 nodejs</p><p><strong>nvm install 14.15.1</strong>：安装 14.15.1 版本的 nodejs</p><p><strong>nvm uninstall node@版本号</strong>：卸载指定版本的 nodejs</p><p><strong>nvm uninstall 14.15.1</strong>：卸载 14.15.1 版本的 nodejs</p><p><strong>nvm use node@版本号</strong>：使用指定版本的 nodejs(该版本是已经安装过后的)</p><p><strong>nvm use 14.15.1</strong>：使用已安装的 14.15.1 版本的 nodejs</p><blockquote><p> 如果出现：</p><p>exit status 5: �ܾ����ʡ�</p><p>exit status 1: ���ļ��Ѵ���ʱ���޷��������ļ���</p><p>使用管理员模式打开命令窗口即可</p></blockquote><p><strong>nvm root</strong>：查看本机安装的 nvm 的安装目录地址</p><h2 id="NVS"><a href="#NVS" class="headerlink" title="NVS"></a>NVS</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>查看 <a href="https://github.com/jasongin/nvs#setup" target="_blank" rel="external nofollow noopener noreferrer">官方文档</a></p><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><h4 id="全部命令文档"><a href="#全部命令文档" class="headerlink" title="全部命令文档"></a><a href="(https://github.com/jasongin/nvs#command-refrence)">全部命令文档</a></h4><h4 id="查看-NVS-版本"><a href="#查看-NVS-版本" class="headerlink" title="查看 NVS 版本"></a>查看 NVS 版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvs --version</span><br><span class="line"></span><br><span class="line">nvs -v</span><br></pre></td></tr></table></figure><h4 id="列出所有可用-NVS-版本"><a href="#列出所有可用-NVS-版本" class="headerlink" title="列出所有可用 NVS 版本"></a>列出所有可用 NVS 版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可供下载</span></span><br><span class="line">nvs ls-remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地已下载</span></span><br><span class="line">nvs ls</span><br></pre></td></tr></table></figure><h4 id="下载指定版本"><a href="#下载指定版本" class="headerlink" title="下载指定版本"></a>下载指定版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvs add &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nvs add 16、nvs add lts</span></span><br></pre></td></tr></table></figure><h4 id="删除指定版本"><a href="#删除指定版本" class="headerlink" title="删除指定版本"></a>删除指定版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvs rm &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nvs rm 16、nvs rm lts</span></span><br></pre></td></tr></table></figure><h4 id="切换指定版本"><a href="#切换指定版本" class="headerlink" title="切换指定版本"></a>切换指定版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvs use &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nvs use 16、nvs use lts</span></span><br></pre></td></tr></table></figure><h4 id="指定默认版本"><a href="#指定默认版本" class="headerlink" title="指定默认版本"></a>指定默认版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nvs link &lt;version&gt;</span><br><span class="line"><span class="comment"># nvs link 16、nvs link lts</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用默认版本</span></span><br><span class="line">nvs use default</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">nvs use</span><br></pre></td></tr></table></figure><h4 id="查看当前版本"><a href="#查看当前版本" class="headerlink" title="查看当前版本"></a>查看当前版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvs <span class="built_in">which</span></span><br></pre></td></tr></table></figure><h4 id="自动切换版本"><a href="#自动切换版本" class="headerlink" title="自动切换版本"></a>自动切换版本</h4><p>在windows以及wsl上测试，只会在当前命令行生效，重新打开命令行后失效<br>想要使用需要再次运行 <code>nvs auto on</code></p><p>在项目目录下创建一个.node-version 文件或者 .nvmrc 文件，内容为需要使用的node版本，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16.14.2</span><br></pre></td></tr></table></figure><p>然后运行以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvs auto on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可手动切换，此时直接运行</span></span><br><span class="line">nvs use</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习过程中，对我的 node 进行了更新，这是必要的，但我的博客环境要求 更低版本的 node, 可使用NVS、 NVM、PM2 等工具。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="node" scheme="https://yzyyz.top/tags/node/"/>
    
      <category term="教程" scheme="https://yzyyz.top/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>TS笔记</title>
    <link href="https://yzyyz.top/archives/76d35dd2.html"/>
    <id>https://yzyyz.top/archives/76d35dd2.html</id>
    <published>2022-09-12T01:53:52.000Z</published>
    <updated>2022-09-12T11:31:57.069Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://static001.geekbang.org/infoq/a9/a9f81b3b24d5f5d86826908213c1ca02.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="JS"><img src="https://static001.geekbang.org/infoq/a9/a9f81b3b24d5f5d86826908213c1ca02.png"></a></p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g typescript</span><br></pre></td></tr></table></figure><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><h3 id="TS中的类型"><a href="#TS中的类型" class="headerlink" title="TS中的类型"></a>TS中的类型</h3><table><thead><tr><th align="center">类型</th><th align="center">例子</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">number</td><td align="center">1, 2, 3.5</td><td align="center">任意数字</td></tr><tr><td align="center">string</td><td align="center">“hi”</td><td align="center">字符串</td></tr><tr><td align="center">boolean</td><td align="center">true、false</td><td align="center">布尔值</td></tr><tr><td align="center">字面量</td><td align="center">字面量本身</td><td align="center"></td></tr><tr><td align="center">any</td><td align="center">/</td><td align="center">任意类型</td></tr><tr><td align="center">unknow</td><td align="center">/</td><td align="center">类型安全的 any</td></tr><tr><td align="center">void</td><td align="center">空值 （undefined）</td><td align="center"></td></tr><tr><td align="center">never</td><td align="center">没有值</td><td align="center">不能是任何值 (可用于抛出异常的函数)</td></tr><tr><td align="center">object</td><td align="center">{a: “a”}</td><td align="center">任意 js 对象</td></tr><tr><td align="center">array</td><td align="center">[1, 2, 3]</td><td align="center">任意 js 数组</td></tr><tr><td align="center">tuple</td><td align="center">[123, 456]</td><td align="center">元组（固定长度的数字）</td></tr><tr><td align="center">enum</td><td align="center">xx.xx</td><td align="center">枚举</td></tr></tbody></table><h3 id="联合类型"><a href="#联合类型" class="headerlink" title="联合类型"></a>联合类型</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a: <span class="string">"hhh"</span> | <span class="string">"ddd"</span></span><br></pre></td></tr></table></figure><h2 id="类型断言"><a href="#类型断言" class="headerlink" title="类型断言"></a>类型断言</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> str = <span class="built_in">string</span>;</span><br><span class="line"><span class="keyword">let</span> a: unknown</span><br><span class="line"><span class="keyword">let</span> b: str</span><br><span class="line">b = a <span class="keyword">as</span> str</span><br><span class="line">b = &lt;str&gt;a</span><br></pre></td></tr></table></figure><h2 id="数组类型的定义"><a href="#数组类型的定义" class="headerlink" title="数组类型的定义"></a>数组类型的定义</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a: <span class="built_in">number</span>[]</span><br><span class="line"><span class="keyword">let</span> a: <span class="built_in">Array</span>&lt;<span class="built_in">number</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> Test &#123;</span><br><span class="line">    readonly id: <span class="built_in">number</span>  <span class="comment">//报错，只读、确定、可选属性，必须是任意属性的子类</span></span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    age?: <span class="built_in">string</span>; <span class="comment">//可选</span></span><br><span class="line">    [propName: <span class="built_in">string</span>]: <span class="built_in">string</span> ; <span class="comment">// 任意</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> t: Test = &#123; <span class="comment">// true</span></span><br><span class="line">    id: <span class="number">666</span>,</span><br><span class="line">    name: <span class="string">'YuanZhang'</span>,</span><br><span class="line">    gender: <span class="string">'male'</span> <span class="comment">// 添加的任意属性 gender</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> Animal &#123;</span><br><span class="line">    <span class="keyword">abstract</span> makeSound(): <span class="built_in">void</span>;</span><br><span class="line">    move(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'moving...'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Dog <span class="keyword">extends</span> Animal &#123;</span><br><span class="line">    makeSound() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'woof! woof!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Test&#123;</span><br><span class="line">    <span class="keyword">public</span> name: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">private</span> _id: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name: <span class="built_in">string</span>, id: <span class="built_in">number</span></span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>._id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">get</span> id()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">set</span> id(id: <span class="built_in">number</span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>._id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>&lt;<span class="title">T</span>, <span class="title">K</span>&gt;(<span class="params">a: T, b:K</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">fn(<span class="number">1</span>, <span class="string">"HELLO"</span>);</span><br><span class="line">fn&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;(<span class="string">'1'</span>, <span class="string">"HELLO"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> In&#123;</span><br><span class="line">    length: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 泛型T 应为 In 的实现类（子类）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn2</span>&lt;<span class="title">T</span> <span class="title">extends</span> <span class="title">In</span>&gt;(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="tsconfig-json"><a href="#tsconfig-json" class="headerlink" title="tsconfig.json"></a>tsconfig.json</h2><p><a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html" target="_blank" rel="external nofollow noopener noreferrer">tsconfig.json (tslang.cn)</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"ES6"</span>,</span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"ES6"</span>,</span><br><span class="line">    <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"outDir"</span>: <span class="string">"./dist"</span>,</span><br><span class="line">    <span class="attr">"removeComments"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"noEmitOnError"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"alwaysStrict"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"include"</span>: [</span><br><span class="line">    <span class="string">"src/**/*"</span></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://static001.geekbang.org/infoq/a9/a9f81b3b24d5f5d86826908213c1ca02.png&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;JS&quot;&gt;&lt;img src=&quot;https://static001.geekbang.org/infoq/a9/a9f81b3b24d5f5d86826908213c1ca02.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="https://yzyyz.top/tags/JavaScript/"/>
    
      <category term="TypeScript" scheme="https://yzyyz.top/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记</title>
    <link href="https://yzyyz.top/archives/js_notes.html"/>
    <id>https://yzyyz.top/archives/js_notes.html</id>
    <published>2022-09-05T15:08:26.000Z</published>
    <updated>2022-09-12T01:55:29.873Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="JS"><img src="https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b"></a></p><a id="more"></a><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><ul><li>嵌套的函数</li><li>内部函数要引用外部函数</li></ul><h3 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h3><ul><li>访问到外部函数作用域中的变量</li><li>延长局部变量的生命周期</li><li>应用：JS模块</li></ul><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li><p>产生：在嵌套内部函数的定义执行时产生</p></li><li><p>死亡：内部函数成为垃圾对象时销毁</p></li></ul><h3 id="常见闭包"><a href="#常见闭包" class="headerlink" title="常见闭包"></a>常见闭包</h3><h4 id="函数作为另一函数的返回值"><a href="#函数作为另一函数的返回值" class="headerlink" title="函数作为另一函数的返回值"></a>函数作为另一函数的返回值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span> <span class="comment">// 闭包产生（函数提升）</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">        a++</span><br><span class="line">        <span class="built_in">console</span>.log(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fn2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> test = fn()</span><br><span class="line">test = <span class="literal">null</span> <span class="comment">// 闭包死亡</span></span><br></pre></td></tr></table></figure><h4 id="函数作为实参"><a href="#函数作为实参" class="headerlink" title="函数作为实参"></a>函数作为实参</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">a,time</span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(a)</span><br><span class="line">    &#125;,time)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">show(<span class="string">"hahaha"</span>, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><ul><li><code>JSON.stringify()</code></li><li><code>JSON.parse()</code></li></ul><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><ul><li><code>event.target</code> 触发事件的对象</li><li><code>event.currentTarget</code> 绑定事件的对象， 同this</li><li><code>event.stopPropagation()</code> 停止事件的传播</li><li><code>event.preventDefault()</code> 取消默认行为</li></ul><h3 id="事件传播"><a href="#事件传播" class="headerlink" title="事件传播"></a>事件传播</h3><p>时间的传播机制</p><ol><li>捕获阶段 （由外向内捕获）</li><li>目标阶段 </li><li>冒泡阶段 （由内向外冒泡）</li></ol><ul><li><p><code>event.eventPhase</code>  事件的阶段</p><p>返回<code>1</code>, <code>2</code>, <code>3</code></p></li></ul><p>将 <code>addEventListener</code> 的第三个参数设置为 <code>true</code></p><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    #a = "a"</span><br><span class="line">    <span class="keyword">static</span> b = <span class="string">"b"</span></span><br><span class="line">    #foo</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>(foo)&#123;</span><br><span class="line">        <span class="keyword">this</span>.foo = foo </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    say()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.foo)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> fn()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"fn"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">set</span> a(a)&#123;</span><br><span class="line">        this.#a = a</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">get</span> a()&#123;</span><br><span class="line">        return this.#a</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">T</span> <span class="keyword">extends</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>(foo, foo2)&#123;</span><br><span class="line">        <span class="keyword">super</span>(foo)</span><br><span class="line">        <span class="keyword">this</span>.foo2 = foo2</span><br><span class="line">    &#125;</span><br><span class="line">    say()&#123;</span><br><span class="line">        <span class="keyword">super</span>.say() <span class="comment">// 可调用父类的 say()</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"T"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> T()</span><br><span class="line"><span class="built_in">console</span>.log(a.a) <span class="comment">// "a"</span></span><br><span class="line"><span class="built_in">console</span>.log(a.b) <span class="comment">// undefind</span></span><br><span class="line"><span class="built_in">console</span>.log(a.foo) <span class="comment">// undefind</span></span><br><span class="line"><span class="built_in">console</span>.log(T.b) <span class="comment">// "b"</span></span><br></pre></td></tr></table></figure><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><p>当在学习 JS 过程中，我在想 JS 中怎样进行 Python 中的如下操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(a: int, b:str)</span> -&gt; str:</span></span><br><span class="line">    <span class="keyword">return</span> str(a) + b</span><br></pre></td></tr></table></figure><p>也就是类型注解，嗷，看课过程中隐隐觉得 TS 应该是干这个的，原来真是 <img src="https://api.isoyu.com/uploads/ARU/GIF_S/8000.gif" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;JS&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="https://yzyyz.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS初探，给博客首页添加一个贪吃蛇热力图</title>
    <link href="https://yzyyz.top/archives/js_snake.html"/>
    <id>https://yzyyz.top/archives/js_snake.html</id>
    <published>2022-09-01T18:52:44.000Z</published>
    <updated>2022-09-12T05:04:04.622Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><a href="https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="JS"><img src="https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b"></a><a id="more"></a><p>得益于 <a href="https://github.com/Platane/snk" target="_blank" rel="external nofollow noopener noreferrer">Platane/snk</a>，在我的Github仓库就生成了这样一张图片</p><p><img src="https://cdn.staticaly.com/gh/yzyyz1387/yzyyz1387/main/assets/github-contribution-grid-snake.svg" alt></p><p>(由于不可抗力原因，使用了<a href="https://cdn.staticaly.com/" target="_blank" rel="external nofollow noopener noreferrer">staticaly</a>对其进行了加速)</p><p>有了这样一张图片，便可以使用JS将其添加在博客首页</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2022/9/2</span></span><br><span class="line"><span class="comment">// add_snake.js</span></span><br><span class="line"><span class="comment">// Author: 幼稚园园长</span></span><br><span class="line"><span class="comment">// SoftWare: WebStorm</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.location.pathname === <span class="string">'/'</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> div = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"cover-wrapper"</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">let</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        newDiv.className = <span class="string">"snake"</span>;</span><br><span class="line">        newDiv.style.marginTop = <span class="string">"110px"</span>;</span><br><span class="line">        newDiv.innerHTML = <span class="string">"&lt;a href='https://github.com/yzyyz1387/' target='_blank'&gt;&lt;img src=\"https://cdn.staticaly.com/gh/yzyyz1387/yzyyz1387/main/assets/github-contribution-grid-snake.svg\" alt=\"\" style=\"display: block; margin: 0 auto;background: #fff;\"&gt;&lt;/a&gt;"</span>;</span><br><span class="line">        div.insertAdjacentElement(<span class="string">"afterend"</span>, newDiv);</span><br><span class="line">        <span class="keyword">let</span> width = <span class="built_in">window</span>.screen.width;</span><br><span class="line">        <span class="keyword">if</span> (width &lt; <span class="number">580</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> postDiv = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"l_body"</span>)[<span class="number">0</span>];</span><br><span class="line">            postDiv.style.margin = <span class="string">"0 auto"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;JS&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-25182ac6197d798d6d8b22d3b0710cbf_1440w.jpg?source=172ae18b&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://yzyyz.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>窝在家做饭指南-水煮牛肉</title>
    <link href="https://yzyyz.top/archives/boiled-beef.html"/>
    <id>https://yzyyz.top/archives/boiled-beef.html</id>
    <published>2022-08-19T18:44:06.000Z</published>
    <updated>2022-08-19T20:34:50.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/boiled-beef.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/boiled-beef.jpg"></a></p><a id="more"></a><h1 id="配料食材"><a href="#配料食材" class="headerlink" title="配料食材"></a>配料食材</h1><h2 id="食材"><a href="#食材" class="headerlink" title="食材"></a>食材</h2><ul><li><p>牛肉少许，够吃就行</p></li><li><p>配菜：喜欢的配菜，比如豆腐丝、金针菇、豆芽之类的，我这里没加配菜</p></li><li><p>大葱、姜、蒜 切好备用</p></li><li><p>小葱切碎备用</p></li><li><p>小米辣、花椒</p></li></ul><h2 id="调料"><a href="#调料" class="headerlink" title="调料"></a>调料</h2><p>生抽、料酒、淀粉、火锅底料、鸡精、豆瓣酱、</p><p>图片中未列出的还有：<strong>白糖</strong>、<strong>盐</strong>、<strong>胡椒粉</strong>、<strong>胡椒粉</strong>、</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/1.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/1.jpg"></a></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p><strong>如果没有开水，就先把开水烧着</strong></p><ol><li><p>牛肉切片备用，肥牛肉单独取出</p></li><li><p>将牛肉放在盆中准备腌制，加入</p><ul><li><p>一小勺胡椒粉</p></li><li><p>一大勺生抽</p></li><li><p>一大勺料酒</p></li><li><p>一大勺淀粉</p></li><li><p>在盆中拌匀，再加一大勺油</p></li></ul></li></ol><p>​    3. 腌制15min，腌制快十来分钟就进行下面的<strong><a href="#开始">开始</a></strong></p><p><strong>这里说的勺是一种经验，并不是真的勺，读者自辨</strong></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ol><li><p>小米辣和花椒下锅炒，不用加油</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/2.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/2.jpg"></a></p></li><li><p>浅炒香后倒出，切碎备用</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/3.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/3.jpg"></a></p></li><li><p>起锅烧油，将切下的肥牛肉炒出油脂</p></li><li><p>加入葱姜蒜炒出香味</p> <p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/4.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/4.jpg"></a></p></li><li><p>倒入适量豆瓣酱，炒出红油</p></li><li><p>加入适量火锅底料，炒匀</p></li><li><p>加入烧好的开水</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/6.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/6.jpg"></a></p></li><li><p>加入喜欢的配菜，简单煮一下捞出，放入盆中备用（我这里没配菜）</p></li><li><p>这会儿牛肉也腌好了，下入牛肉，记得及时把牛肉打散，打均匀</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/7.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/7.jpg"></a></p></li><li><p>煮熟即可</p><p><strong>熟时有空余的锅可以在这时烧点热油</strong></p></li><li><p>煮熟后将牛肉和汤汁倒入有配菜的盆中</p><ol><li>加入之前切碎的小米辣</li><li>再加点花椒</li><li>上面撒上葱花</li><li>撒上胡椒粉、孜然等</li><li>用热油泼于其上</li><li>完成！</li></ol></li></ol><p style="text-align:center;"><a href="https://cdn.yzyyz.top/cooking/boiled-beef/8.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="cooking"><img src="https://cdn.yzyyz.top/cooking/boiled-beef/8.jpg"></a></p><p>结果还是挺不错的，受到了父上母上的一致好评，(老弟只会吃)<img src="https://api.isoyu.com/uploads/ARU/GIF_S/7113.gif" alt="7113.gif (54×44) (isoyu.com)"></p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/cooking/boiled-beef/boiled-beef.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;cooking&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/cooking/boiled-beef/boiled-beef.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="干货" scheme="https://yzyyz.top/tags/%E5%B9%B2%E8%B4%A7/"/>
    
      <category term="下厨房" scheme="https://yzyyz.top/tags/%E4%B8%8B%E5%8E%A8%E6%88%BF/"/>
    
  </entry>
  
  <entry>
    <title>JS入门笔记</title>
    <link href="https://yzyyz.top/archives/start_with_JS.html"/>
    <id>https://yzyyz.top/archives/start_with_JS.html</id>
    <published>2022-08-17T12:28:58.000Z</published>
    <updated>2022-09-05T15:09:26.923Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>废档</p><blockquote style="background: #f4433678;color: #fff;border-left: 4px solid #f44336;">  <p>  此文为废档  </p></blockquote><a id="more"></a><div class="button readmore"><a href="javascript:;" rel="external nofollow noreferrer" id="change-dom">点击查看</a></div><div id="code0" style="visibility:collapse"><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="var"><a href="#var" class="headerlink" title="var"></a>var</h3><p><code>var</code> 声明全局或函数级别作用域的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="number">0</span>, d = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解构</span></span><br><span class="line"><span class="keyword">var</span> li = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> [n1,n2,n3,n4,n5] = li;</span><br><span class="line"><span class="built_in">console</span>.log(n1,n2,n3,n4,n5)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="literal">undefined</span></span><br></pre></td></tr></table></figure><h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><p><code>let</code> 声明块级别作用域的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 申明同var</span></span><br></pre></td></tr></table></figure><p>在块级作用域中申明的变量，在外不能访问到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a)  <span class="comment">//报错</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Uncaught <span class="built_in">ReferenceError</span>: f is not defined</span><br></pre></td></tr></table></figure><p>相同作用域下不能用<code>let</code>重置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> a = <span class="number">2</span>; <span class="comment">//不合法</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Uncaught <span class="built_in">SyntaxError</span>: Identifier <span class="string">'a'</span> has already been declared</span><br></pre></td></tr></table></figure><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p><code>const</code> 在块级作用域声明一个或多个常量，声明时必须进行初始化，且初始化后值不可再修改，与<code>let</code>一样不能重置变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">666</span>;</span><br><span class="line"><span class="keyword">const</span> a = <span class="number">777</span>;  <span class="comment">//报错</span></span><br></pre></td></tr></table></figure><p>但其实<code>const</code>申明的对象可以被修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a)</span><br><span class="line">&gt;&gt;&gt; [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>函数和变量的声明都将被提升到函数的最前面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">var</span> a;</span><br></pre></td></tr></table></figure><p>函数申明形式创建的函数，在执行前会被创建</p><p>函数表达式不会被提前</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fun();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">666</span>);</span><br><span class="line">&#125;</span><br><span class="line">&gt;&gt;&gt; <span class="number">666</span></span><br><span class="line"></span><br><span class="line">fun2();</span><br><span class="line"><span class="keyword">var</span> fun2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">777</span>);</span><br><span class="line">&#125;</span><br><span class="line">&gt;&gt;&gt;Uncaught <span class="built_in">TypeError</span>: fun2 is not a <span class="function"><span class="keyword">function</span></span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><code>typeof</code> 用于检查类型</p><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.MAX_VALUE)  <span class="comment">// js可以表示的最大值,大于其则返回 Infinity</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">1.7976931348623157e+308</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.MIN_VALUE)  <span class="comment">// js可以表示的最小正值</span></span><br><span class="line"><span class="number">5e-324</span></span><br></pre></td></tr></table></figure><p><code>Infinity</code> 正无穷</p><p><code>-Infinity</code>负无穷</p><p><code>NaN</code>   not a number</p><p>浮点型运算结果可能不精确</p><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h3><h3 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h3><p><code>null</code>空对象</p><h3 id="Undefined"><a href="#Undefined" class="headerlink" title="Undefined"></a>Undefined</h3><p><code></code>undefine 未定义</p><h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line">a = a.toString();  <span class="comment">// null 和 undefined 没有这个方法</span></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">String</span>(a);</span><br><span class="line"></span><br><span class="line">a = a + <span class="string">""</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"123"</span>;</span><br><span class="line">a = <span class="built_in">Number</span>(a); <span class="comment">// 123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="string">"12abc"</span>;</span><br><span class="line">b = <span class="built_in">Number</span>(b); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = <span class="literal">null</span>;</span><br><span class="line">c = <span class="built_in">Number</span>(c); <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"100px"</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseInt</span>(a) <span class="comment">// 100 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"0.5em"</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseFloat</span>(b) <span class="comment">// 0.5</span></span><br></pre></td></tr></table></figure><p><code>0</code>、<code>NaN</code>、<code>&quot;&quot;</code>、<code>null</code>、<code>undefined</code> 被转为false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0</span>;</span><br><span class="line">a = <span class="built_in">Boolean</span>(a); <span class="comment">// false</span></span><br><span class="line">a = !!a  <span class="comment">// 使用两次非运算将其转为布尔值</span></span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>16进制 ： 0x10</p><p>8进制： 010  ， 有些浏览器当做10进制</p><p>2进制：0b10   ，兼容性差</p><p>Unicode: \u100  (网页中使用&amp;#9856;)</p><p style="text-align:center;"><a href="https://nimg.ws.126.net/?url=http://dingyue.ws.126.net/2021/1129/0e2396c4j00r3be2k003yc000u0019dm.jpg&thumbnail=1280x2147483647&quality=75&type=webp" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="JS"><img src="https://nimg.ws.126.net/?url=http://dingyue.ws.126.net/2021/1129/0e2396c4j00r3be2k003yc000u0019dm.jpg&thumbnail=1280x2147483647&quality=75&type=webp"></a></p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><code>+</code>    <code>-</code>   <code>*</code>    <code>/</code>   <code>%</code>  </p><h3 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h3><p><code>-a</code>    <code>+a</code>   </p><h3 id="自增自减"><a href="#自增自减" class="headerlink" title="自增自减"></a>自增自减</h3><p><code>a++</code> 原值 ，<code>++a</code>新值</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><code>！</code> 非</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">true</span>;</span><br><span class="line">a = !a; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p><code>&amp;&amp;</code> 与</p><p><code>||</code>或</p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p><code>a += 1;</code>……</p><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>比较字符串数字一定要转型</p><h3 id="相等运算符"><a href="#相等运算符" class="headerlink" title="相等运算符"></a>相等运算符</h3><p><code>==</code>   <code>===</code></p><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><p><code>条件表达式？语句1:语句2;</code></p><p>true执行1，false执行2</p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>…</p><h2 id="循环判断"><a href="#循环判断" class="headerlink" title="循环判断"></a>循环判断</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>()&#123;</span><br><span class="line">   ...;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">   ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a == <span class="number">1</span>)&#123;</span><br><span class="line">    ...;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a == <span class="number">2</span>)&#123;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(a == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        ...;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        ...;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        ...;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 死循环</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="number">1</span>; a&lt;<span class="number">10</span>; a++)&#123;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 死循环</span></span><br><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// label</span></span><br><span class="line">name_test:</span><br><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    <span class="keyword">break</span> name_test;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象-Object"><a href="#对象-Object" class="headerlink" title="对象 Object"></a>对象 Object</h2><h3 id="内建对象"><a href="#内建对象" class="headerlink" title="内建对象"></a>内建对象</h3><p>ES标准定义的对象</p><p><code>function</code>   <code>Math</code>  <code>String</code> …….</p><h3 id="宿主对象"><a href="#宿主对象" class="headerlink" title="宿主对象"></a>宿主对象</h3><p>浏览器提供的对象</p><p>BOM、DOM里的对象</p><h4 id="window"><a href="#window" class="headerlink" title="window"></a>window</h4><h5 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h5><ul><li><p>document</p><p>文档对象</p></li><li><p>console</p></li><li><p>location</p><p>地址对象，读取网页链接或控制跳转</p></li><li><p>localStorage</p><p>本地储存</p></li><li><p>screen</p><p>获取屏幕分辨率</p></li><li><p>scrollX、scrollY</p><p>X、Y滚动条位置</p></li></ul><h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><ul><li><p>alert  </p></li><li><p>confirm</p></li><li><p>blur</p><p>将焦点移出当前窗口</p></li><li><p>close</p><p>关闭窗口</p></li><li><p>eval</p><p>执行字符串形式的js语句</p></li><li><p>focus</p><p>激活当前窗口</p></li><li><p>open</p><p>打开新窗口（标签页）</p></li><li><p>openDialog</p><p>打开新对话框窗口</p></li><li><p>print</p><p>显示打印功能的对话框</p></li><li><p>prompt</p><p>弹出输入框（会阻塞js）</p></li><li><p>scroll</p><p>控制滚动条到指定位置</p></li><li><p>stop</p><p>停止加载</p></li></ul><h3 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// new关键字调用的是constructor构造函数</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">obj.name = <span class="string">"小庄"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj.name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> obj.name;  <span class="comment">//删除</span></span><br><span class="line"></span><br><span class="line">obj[<span class="string">"123"</span>] = <span class="number">456</span>; <span class="comment">//此形式定义要用同样的方法取</span></span><br><span class="line"><span class="built_in">console</span>.log(obj[<span class="string">"123"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"age"</span> <span class="keyword">in</span> obj);  <span class="comment">//检查，返回布尔值</span></span><br></pre></td></tr></table></figure><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/start_with_js/obj.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="JS"><img src="https://cdn.yzyyz.top/img/start_with_js/obj.png"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象字面量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> b = &#123;</span><br><span class="line">    name:<span class="string">"小庄"</span>,</span><br><span class="line">    age:<span class="number">19</span>,</span><br><span class="line">    skills:&#123;<span class="attr">shoot</span>:<span class="number">100</span>;&#125;</span><br><span class="line">&#125;；</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"console.log('6666')"</span>)  <span class="comment">// 不常用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func_name</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匿名函数</span></span><br><span class="line"><span class="keyword">var</span> fun1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 立即执行</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fun() <span class="comment">// 调函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = &#123;</span><br><span class="line">    say:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"hi"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">b.() <span class="comment">// 调方法</span></span><br></pre></td></tr></table></figure><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><p>在js中直接写的代码，页面打开时创建，关闭时销毁；</p><p>在全局作用域中有一个对象<code>window</code>,创建的变量都会作为<code>window</code>的属性保存；创建的函数作为<code>window</code>的方法保存；</p><p>全局作用域中的变量都是全局变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"6"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.a)</span><br><span class="line"><span class="built_in">window</span>.fun()</span><br><span class="line">&gt;&gt;&gt; <span class="number">123</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h3><p>函数调用时创建，执行完毕销毁，每调一次创建一个，互相独立；</p><p>全局作用域中无法访问其中的变量；</p><p>在函数作用域中操作一个变量时，先在自身作用域找，没有就找上一级，直到全局作用域，如果没找到就<code>ReferenceError</code></p><h2 id="隐含参数"><a href="#隐含参数" class="headerlink" title="隐含参数"></a>隐含参数</h2><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><p>解析器在调用函数时向内部传递的一个隐含参数，<code>this</code>根据函数调用方法的不同指向不同对象;</p><ul><li><p>以函数形式调用其指向<code>window</code></p></li><li><p>以方法调用则指向对象</p></li><li><p>以构造函数调用，指向新创造的对象</p></li><li><p>使用<code>call()</code>和<code>apply()</code>时，指向被指定的对象</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">    name:<span class="string">"小庄"</span>,</span><br><span class="line">    say:fun</span><br><span class="line">&#125;;</span><br><span class="line">fun();</span><br><span class="line">obj.say()</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;Window &#123;<span class="attr">window</span>: Window, <span class="attr">self</span>: Window, <span class="attr">document</span>: <span class="built_in">document</span>, <span class="attr">name</span>: <span class="string">''</span>, <span class="attr">location</span>: Location, …&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&#123;<span class="attr">name</span>: <span class="string">'小庄'</span>, <span class="attr">say</span>: ƒ&#125;</span><br></pre></td></tr></table></figure><h4 id="call-和-apply"><a href="#call-和-apply" class="headerlink" title="call() 和 apply()"></a>call() 和 apply()</h4><p><code>call()</code>和<code>apply()</code>都是函数对象的方法，调用时都会执行函数</p><p>调用时，可以将一个对象指定为第一个参数，此时对象会成为函数执行时的<code>this</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;<span class="attr">name</span>:<span class="string">"杏花"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line">fun.call(a);</span><br><span class="line">&gt;&gt;&gt; 杏花</span><br></pre></td></tr></table></figure><p><code>call()</code>和<code>apply()</code>传参方式不同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name+a+<span class="string">","</span>+b);</span><br><span class="line">&#125;</span><br><span class="line">obj = &#123;<span class="attr">name</span>:<span class="string">"杏花"</span>&#125;;</span><br><span class="line"></span><br><span class="line">fun.call(obj,<span class="number">1</span>,<span class="number">2</span>);  <span class="comment">//依次传递</span></span><br><span class="line">fun.apply(obj,[<span class="number">1</span>,<span class="number">2</span>]) <span class="comment">// 封装为数组传递</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; 杏花<span class="number">1</span>，<span class="number">2</span></span><br><span class="line">&gt;&gt;&gt; 杏花<span class="number">1</span>，<span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h3><p>同样是被传入的隐含参数，是一个类数组对象</p><ul><li>调用函数传递的实参都会储存在<code>arguments</code>中，<code>arguments.length</code>可以用来获取实参的长度</li><li>即使不定义形参，也能用它取到</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="string">"haha"</span>,<span class="number">123</span>);</span><br><span class="line">&gt;&gt;&gt; haha</span><br></pre></td></tr></table></figure><ul><li><code>arguments</code>有一个<code>callee</code>属性，就是当前正在执行的函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.callee);</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="string">"haha"</span>,<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;ƒ fun()&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.callee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工厂函数"><a href="#工厂函数" class="headerlink" title="工厂函数"></a>工厂函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createSth</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    obj.name = name;</span><br><span class="line">    <span class="keyword">return</span> obj; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = createSth(<span class="string">"小庄"</span>)；</span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>构造函数通过<code>new</code>关键字创建</p><ul><li><p>会立刻创建一个新的对象</p></li><li><p>将新建对象设为函数中的<code>this</code></p></li><li><p>执行代码 </p></li><li><p>返回对象</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Preson</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">"丁"</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Plants</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">"plant"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Plants();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// instanceof 检查一个对象是否是一个类的实例， 注意所有对象都是`Object`的后代</span></span><br><span class="line"><span class="built_in">console</span>.log(p2 <span class="keyword">instanceof</span> Person);</span><br><span class="line">&gt;&gt;&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>看下面这段代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.run = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name+<span class="string">"润了"</span>)；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1 = Perso(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">var</span> p2 = Person（<span class="string">"b"</span>）；</span><br><span class="line"><span class="built_in">console</span>.log(p1.run == p2.run)  </span><br><span class="line">&gt;&gt;&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>如果使用该构造函数构造n个对象，就会创建n个新<code>run</code>方法，这是没必要的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.run = run;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">run</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name+<span class="string">"润了"</span>)；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1 = Perso(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">var</span> p2 = Person（<span class="string">"b"</span>）；</span><br><span class="line"><span class="built_in">console</span>.log(p1.run == p2.run)  </span><br><span class="line">&gt;&gt;&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>但是上方这种将函数定义在全局作用域中，会污染全局作用的的命名空间，也不安全，这就要说到<strong>原型对象</strong></p><h2 id="原型对象-prototype"><a href="#原型对象-prototype" class="headerlink" title="原型对象 prototype"></a>原型对象 prototype</h2><p>创建的每个函数，解析器都会向其中添加<code>prototype</code>属性，通过<code>__proto__</code>访问</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">MyClass.prototype.a = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mc = <span class="keyword">new</span>  MyClass();</span><br><span class="line"><span class="keyword">var</span> mc2 = <span class="keyword">new</span>  MyClass();</span><br><span class="line"><span class="keyword">var</span> mc3 = <span class="keyword">new</span>  MyClass();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mc.a) <span class="comment">// mc.__proto__.a</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">123</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查mc中是否有a属性，自己没有，原型有，也会返回true</span></span><br><span class="line"><span class="built_in">console</span>.log(a <span class="keyword">in</span> mc)  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时可以使用 hasOwnProperty()来检查对象自身中有没有</span></span><br><span class="line"><span class="built_in">console</span>.log(mc.hasOwnProperty(<span class="string">"a"</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/start_with_js/proto.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="JS"><img src="https://cdn.yzyyz.top/img/start_with_js/proto.png"></a></p><p>Object对象的原型没有原型</p><h2 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h2><p><code>console.log()</code>打印对象时，实际上就是输出了对象的<code>toString()</code>的返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">P</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">"A"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a =<span class="keyword">new</span> P();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// [object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(a.toString()); <span class="comment">// [object Object]</span></span><br><span class="line"><span class="comment">// 但是我在edge上这俩显示的不一样</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.prototype.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"666"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// [object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(a.toString()); <span class="comment">// [object Object]</span></span><br></pre></td></tr></table></figure><h2 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h2><p>当一个对象没有任何变量或属性对它引用，此时永远无法操作它，它就是个垃圾；</p><p>JS有自动的垃圾回收机制，会自动将其销毁，我们只需将其引用设为<code>null</code></p><h2 id="数组-Array"><a href="#数组-Array" class="headerlink" title="数组 Array"></a>数组 Array</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> arr2 = [];</span><br><span class="line">arr[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(arr1.length) <span class="comment">//3</span></span><br><span class="line">arr2.length = <span class="number">4</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2.length) <span class="comment">//4</span></span><br></pre></td></tr></table></figure><p>方法 <a href="https://www.w3school.com.cn/jsref/jsref_obj_array.asp" target="_blank" rel="external nofollow noopener noreferrer">JavaScript 数组参考手册 (w3school.com.cn)</a></p><h2 id="时间-Date"><a href="#时间-Date" class="headerlink" title="时间 Date"></a>时间 Date</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">// 直接用构造函数创建，会封装当前代码执行的时间</span></span><br><span class="line"><span class="built_in">console</span>.log(d);</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Wed Aug <span class="number">17</span> <span class="number">2022</span> <span class="number">06</span>:<span class="number">26</span>:<span class="number">05</span> GMT+<span class="number">0800</span> (中国标准时间)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建指定对象</span></span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"08/08/2021 12:00:30"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日</span></span><br><span class="line"><span class="keyword">var</span> d3 = d2.getDate();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 周几(0是周日)</span></span><br><span class="line"><span class="keyword">var</span> day = d2.getDay();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 月(0是一月)</span></span><br><span class="line"><span class="keyword">var</span> month = d2.getMonth();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 年(4位)</span></span><br><span class="line"><span class="keyword">var</span> year = d2.getFullYear();</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 时间戳 (1970/1/1 00:00:00)</span></span><br><span class="line"><span class="keyword">var</span> time = d2.getTime();</span><br></pre></td></tr></table></figure><p><a href="https://www.w3school.com.cn/jsref/jsref_obj_date.asp" target="_blank" rel="external nofollow noopener noreferrer">JavaScript Date 参考手册 (w3school.com.cn)</a></p><h2 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h2><p>它不是一个构造函数，属于一个工具类，无需创建</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.PI);</span><br><span class="line">&gt;&gt;&gt; <span class="number">3.141592653589793</span></span><br></pre></td></tr></table></figure><p><a href="https://www.w3school.com.cn/jsref/jsref_obj_math.asp" target="_blank" rel="external nofollow noopener noreferrer">JavaScript Math 参考手册 (w3school.com.cn)</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="number">1.4</span>)); <span class="comment">// 上舍入</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="number">1.4</span>)); <span class="comment">// 下舍入</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">1.4</span>)) <span class="comment">// 四舍五入</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.random()); <span class="comment">// 0-1的随机数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 0-x之间的随机数</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*x));</span><br><span class="line">&gt;&gt;&gt; <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成 x-y 的随机数</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*(y-x))+x);</span><br></pre></td></tr></table></figure><h2 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h2><p>JS中提供了三个包装类，通过其可将基本数据类型转为对象:</p><ul><li>String()</li><li>Number()</li><li>Boolean()</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> num);</span><br><span class="line">&gt;&gt;&gt; object</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(num == num2); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>开发中基本不用包装类</p><p>当对基本数据类型的值调用属性和方法时，浏览器会临时使用包装类将其转换为对象，再调用属性和方法</p><p>调用完后再转换为基本数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a =<span class="number">132</span>;</span><br><span class="line">a = a.toString();</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">&gt;&gt;&gt; <span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="字符串-String"><a href="#字符串-String" class="headerlink" title="字符串 String"></a>字符串 String</h2><h3 id="一些方法"><a href="#一些方法" class="headerlink" title="一些方法"></a>一些方法</h3><p>在底层字符串以数组形式保存 [“H”, “e”, …….]</p><p><a href="https://www.w3school.com.cn/jsref/jsref_obj_string.asp" target="_blank" rel="external nofollow noopener noreferrer">JavaScript String 参考手册 (w3school.com.cn)</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"Hello YZYYZ"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.length); <span class="comment">// 空格也算</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.charAt(<span class="number">0</span>);  <span class="comment">// H</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.charCodeAt(<span class="number">0</span>);  <span class="comment">// 72  (Unicode字符编码)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="built_in">String</span>.formCharCOde(<span class="number">72</span>); <span class="comment">// H</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str.concat(<span class="string">"哈哈"</span>); <span class="comment">// str + "哈哈" </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.indexOf(<span class="string">"H"</span>);  <span class="comment">// 0 查找指定字符第一次出现处的索引，没有返回 -1</span></span><br><span class="line"></span><br><span class="line">lastIndexOf() <span class="comment">// 从后往前</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.slice(<span class="number">0</span>,<span class="number">5</span>);  <span class="comment">// Hello 截取祖字符串 第二个参数可省略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.subString(<span class="number">1</span>);  <span class="comment">// 和slice一样，但参数不能接受负数，如果第二个参数小于第二个，会自动交换参数位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.split(<span class="string">" "</span>) <span class="comment">//拆为数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = str.toUperCase() <span class="comment">// 转换大小写</span></span><br><span class="line"><span class="keyword">var</span> a = str.toLowerCase()</span><br></pre></td></tr></table></figure><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'abc'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(re.test(tel));  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> re = <span class="regexp">/^1[3-9]\d&#123;9&#125;$/</span>;</span><br><span class="line"><span class="keyword">var</span> tel = <span class="string">"13009985544"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(re.test(tel))  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>支持正则的String对象的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"123qqq345www456eee567ABCDEFG"</span>;</span><br><span class="line"><span class="keyword">var</span> re = <span class="regexp">/[a-z]+/ig</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = str.search(re);</span><br><span class="line"><span class="built_in">console</span>.log(result); <span class="comment">// 返回第一次出现的位置的索引</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">3</span></span><br><span class="line"></span><br><span class="line">result = str.match(re);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line">&gt;&gt;&gt; [<span class="string">'qqq'</span>, <span class="string">'www'</span>, <span class="string">'eee'</span>, <span class="string">'ABCDEFG'</span>]</span><br><span class="line"></span><br><span class="line">result = str.replace(re,<span class="string">"*"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line">&gt;&gt;&gt; <span class="number">123</span>*<span class="number">345</span>*<span class="number">456</span>*<span class="number">567</span>*</span><br><span class="line">    </span><br><span class="line">result = str.split(re);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line">&gt;&gt;&gt; [<span class="string">'123'</span>, <span class="string">'345'</span>, <span class="string">'456'</span>, <span class="string">'567'</span>, <span class="string">''</span>]</span><br></pre></td></tr></table></figure><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><h3 id="Document-Object-Model-文档对象模型"><a href="#Document-Object-Model-文档对象模型" class="headerlink" title="Document Object Model 文档对象模型"></a>Document Object Model 文档对象模型</h3><p>JS通过DOM对HTML文档进行操作</p><ul><li>文档：HTML 网页</li><li>对象：网页的每个部分转为一个对象</li><li>模型：表示对象间的关系</li></ul><h3 id="节点-Node"><a href="#节点-Node" class="headerlink" title="节点 Node"></a>节点 Node</h3><p>节点是构成网页的最基本组成部分，网页中每部分都可称为一个节点</p><table><thead><tr><th></th><th>nodeName</th><th>nodeType</th><th>nodeValue</th></tr></thead><tbody><tr><td>文档节点</td><td>#document</td><td>9</td><td>null</td></tr><tr><td>元素节点</td><td>标签名</td><td>1</td><td>null</td></tr><tr><td>属性节点</td><td>属性名</td><td>2</td><td>属性值</td></tr><tr><td>文本节点</td><td>#text</td><td>3</td><td>文本内容</td></tr></tbody></table><p>浏览器提供  文档节点  对象，其是<code>window</code>属性，可以在页面直接使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>).innerHTML)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><p><a href="https://www.w3school.com.cn/jsref/dom_obj_event.asp" target="_blank" rel="external nofollow noopener noreferrer">HTML DOM 事件 (w3school.com.cn)</a></p><ul><li>addEventListener &emsp;&emsp;添加事件监听器</li><li>dispatchEvent&emsp;&emsp;手动触发指定事件</li><li>getAttribute&emsp;&emsp;获取标签的指定属性</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"haha"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line">btn.onclick = fun</span><br></pre></td></tr></table></figure><p>文档的加载</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload()&#123;</span></span><br><span class="line"><span class="javascript">        btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="actionscript">        btn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span></span><br><span class="line">    alert(btn.innerHTML)</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="DOM查询"><a href="#DOM查询" class="headerlink" title="DOM查询"></a>DOM查询</h3><h4 id="获取元素节点"><a href="#获取元素节点" class="headerlink" title="获取元素节点"></a>获取元素节点</h4><ul><li>getElementById()</li><li>getElementsByTagName()</li><li>getElementsByName()</li></ul><h4 id="获取子节点"><a href="#获取子节点" class="headerlink" title="获取子节点"></a>获取子节点</h4><ul><li><p>childNodes</p><p>文本属性也会当做节点</p></li><li><p>children</p><p>推荐</p></li><li><p>firstChild</p></li><li><p>firstElementChild</p><p>第一个子元素 虽然IE已死，但是它只兼容IE9+</p></li><li><p>lastChild</p></li></ul><h4 id="获取父节点和兄弟节点"><a href="#获取父节点和兄弟节点" class="headerlink" title="获取父节点和兄弟节点"></a>获取父节点和兄弟节点</h4><ul><li><p>parentNode</p><p>父节点</p></li><li><p>previousSibling </p><p>前一个兄弟节点</p></li><li><p>nextSibling</p></li></ul><h4 id="根据class"><a href="#根据class" class="headerlink" title="根据class"></a>根据class</h4><ul><li><p>getElementsByClassName</p><p>包括自身的所有元素</p></li></ul><h4 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h4><ul><li><p>document.querySelector()</p><p>只找第一个</p></li><li><p>document.querySelectorAll()</p><p>返回数组</p></li></ul><h3 id="DOM增删改"><a href="#DOM增删改" class="headerlink" title="DOM增删改"></a>DOM增删改</h3><p><a href="https://www.w3school.com.cn/jsref/dom_obj_all.asp" target="_blank" rel="external nofollow noopener noreferrer">HTML DOM Element 对象 (w3school.com.cn)</a></p><ul><li><p>document.createElement()</p><p>需要一个标签名作为参数，并返回这个对象</p></li><li><p>document.createTextNode()</p><p>创建文本节点，参数为文本，并返回节点</p></li><li><p>appendChild()</p><p>父元素 . appendChild(子元素)</p></li><li><p>insertBefore()</p><p>父节点 . insertBefore(新节点，旧节点)</p></li><li><p>repleaceChild()<br>repleaceChild(新节点，旧节点)</p></li><li><p>removeChild()<br>父节点 . removeChild(子节点)<br>父节点：子节点 . parentNode</p></li></ul><h3 id="样式操作"><a href="#样式操作" class="headerlink" title="样式操作"></a>样式操作</h3><h4 id="操作内联样式"><a href="#操作内联样式" class="headerlink" title="操作内联样式"></a>操作内联样式</h4><p>obj.style.xxx = “xxx”</p><p>obj.style[“xxx”] = “xxx”</p><h4 id="查询样式"><a href="#查询样式" class="headerlink" title="查询样式"></a>查询样式</h4><p>getComputedStyle(obj,null)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> body = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"body"</span>)[<span class="number">0</span>];</span><br><span class="line">  body.onpagehide = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  localStorage.removeItem(<span class="string">"created"</span>);</span><br><span class="line">&#125;;</span><br><span class="line">  <span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"change-dom"</span>);</span><br><span class="line">  <span class="keyword">const</span> code0 = <span class="built_in">document</span>.getElementById(<span class="string">"code0"</span>);</span><br><span class="line">  <span class="keyword">const</span> block = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"blockquote"</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">const</span> block2 = <span class="built_in">document</span>.createElement(<span class="string">"blockquote"</span>);</span><br><span class="line">  <span class="keyword">const</span> after_btn = btn.parentNode;</span><br><span class="line"></span><br><span class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(localStorage[<span class="string">"created"</span>]);</span><br><span class="line">    <span class="keyword">if</span> (localStorage[<span class="string">"created"</span>]===<span class="string">"0"</span> || localStorage[<span class="string">"created"</span>] ===<span class="literal">undefined</span>)&#123;</span><br><span class="line">      btn.innerHTML = <span class="string">"点击收起"</span>;</span><br><span class="line">      code0.style.visibility = <span class="string">""</span>;</span><br><span class="line">      block2.innerHTML = <span class="string">"你正在查看的是废弃的文章"</span>;</span><br><span class="line">      block2.style.background = <span class="string">"#f4433678"</span>;</span><br><span class="line">      block2.style.color = <span class="string">"#fff"</span>;</span><br><span class="line">      block2.style[<span class="string">"border-left"</span>] = <span class="string">"4px solid #f44336"</span>;</span><br><span class="line">      after_btn.appendChild(block2);</span><br><span class="line">      localStorage.setItem(<span class="string">"created"</span>,<span class="string">"1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(localStorage[<span class="string">"created"</span>]===<span class="string">"1"</span>)&#123;</span><br><span class="line">      after_btn.removeChild(<span class="built_in">document</span>.querySelector(<span class="string">"#post &gt; section.article.typo &gt; div.article-entry &gt; div.button.readmore &gt; blockquote"</span>));</span><br><span class="line">      code0.style.visibility = <span class="string">"collapse"</span>;</span><br><span class="line">      btn.innerHTML = <span class="string">"点击查看"</span>;</span><br><span class="line">      localStorage[<span class="string">"created"</span>]=<span class="string">"0"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><script type="text/javascript">  window.onload = function(){  const body = document.getElementsByTagName("body")[0];  body.onpagehide = function(){    localStorage.removeItem("created");  };  const btn = document.getElementById("change-dom");  const code0 = document.getElementById("code0");  const block = document.getElementsByTagName("blockquote")[0];  const block2 = document.createElement("blockquote");  const after_btn = btn.parentNode;  btn.onclick = function(){    console.log(localStorage["created"]);    if (localStorage["created"]==="0" || localStorage["created"] ===undefined){      btn.innerHTML = "点击收起";      code0.style.visibility = "";      block2.innerHTML = "你正在查看的是废弃的文章";      block2.style.background = "#f4433678";      block2.style.color = "#fff";      block2.style["border-left"] = "4px solid #f44336";      after_btn.appendChild(block2);      localStorage.setItem("created","1");     }    else if(localStorage["created"]==="1"){      after_btn.removeChild(document.querySelector("#post > section.article.typo > div.article-entry > div.button.readmore > blockquote"));      code0.style.visibility = "collapse";      btn.innerHTML = "点击查看";      localStorage["created"]="0";    }    }  }</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;废档&lt;/p&gt;
&lt;blockquote style=&quot;background: #f4433678;color: #fff;border-left: 4px solid #f44336;&quot;&gt;
  &lt;p&gt;
  此文为废档
  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://yzyyz.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>你好，NWAFU</title>
    <link href="https://yzyyz.top/archives/hi_nwawfu.html"/>
    <id>https://yzyyz.top/archives/hi_nwawfu.html</id>
    <published>2022-07-29T19:01:51.000Z</published>
    <updated>2022-08-17T12:49:38.500Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/new-nwafu/no3building.webp" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="hi-nwafu"><img src="https://cdn.yzyyz.top/new-nwafu/no3building.webp"></a></p><p>本文记叙了西农新生的常见问题以及老生想对新生说的话，<strong>手机用户右上角有目录哦</strong></p><a id="more"></a><h1 id="西农新生攻略"><a href="#西农新生攻略" class="headerlink" title="西农新生攻略"></a>西农新生攻略</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><h3 id="这是我觉得应该注意的问题："><a href="#这是我觉得应该注意的问题：" class="headerlink" title="这是我觉得应该注意的问题："></a>这是我觉得应该注意的问题：</h3><ul><li><p>大学学习为主！大学学习为主！大学学习为主！</p></li><li><p>随录取通知书附带的各类通知都是毋庸置疑的，一般不会有变动，就不用在各个群问问问了</p></li><li><p>带好通知书里要求带的东西，各种照片复印件之类的</p></li><li><p>除了经管，大一新生报道都在北校</p></li><li><p>如果你选择火车/动车出行，使用官方的 <strong>铁路12306</strong> app就够了，没必要使用“飞猪、携程”等第三方软件，（有的还要手续费）</p><ul><li>高铁站（杨陵南）火车站（杨陵站）都有志愿者和校车接你们，其他地方没有。（有幸在火车站当过志愿者，建议大家懂点事，听安排，行李自己往行李仓放）</li><li>开学来坐火车也是可以买学生票的，<strong>需要拿录取通知书到车站窗口购买</strong></li><li>学生票优惠规则为：<ul><li>硬座半价，硬卧优惠后价格 = 硬卧原价-  硬座半价，软卧无优惠；</li><li>高铁二等座7.5折</li><li>飞机没有学生票，有的航空公司有时候对学生有活动（也说不好，不绝对）</li></ul></li></ul></li><li><p>疫情以来，家长一般在开学时进不了校园</p></li><li><p>教务系统的密码建议更改</p></li></ul><h2 id="来之前问不完的问题"><a href="#来之前问不完的问题" class="headerlink" title="来之前问不完的问题"></a>来之前问不完的问题</h2><h3 id="西农好不好"><a href="#西农好不好" class="headerlink" title="西农好不好"></a>西农好不好</h3><p>&emsp;&emsp;既然你已经选择了这里，那你应该已经有了一部分答案，只能说既来之则安之，个人觉得除了宿舍一般都挺好的，你也可以来看看，不满意再来一年<img src="https://api.isoyu.com/uploads/ARU/GIF_S/6131.gif" alt="6131.gif (69×37) (isoyu.com)"></p><h3 id="西农在西安吗"><a href="#西农在西安吗" class="headerlink" title="西农在西安吗"></a>西农在西安吗</h3><p>不在，行政区划属于杨凌示范区（乘坐交通工具时，站名应为杨<strong>陵</strong>），离西安（市中心）80公里</p><p style="text-align:center;">    <a href="https://cdn.yzyyz.top/new-nwafu/location.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="hi-nwafu"><img src="https://cdn.yzyyz.top/new-nwafu/location.png"></a></p><p><strong>杨陵–西安</strong></p><table><thead><tr><th>交通方式</th><th>花费</th><th>坐席</th><th>时间</th><th>抵达</th></tr></thead><tbody><tr><td>高铁</td><td>￥27.5</td><td>二等</td><td>半小时</td><td>西安北（高铁站）可乘地铁4号线</td></tr><tr><td>火车</td><td>￥14.5</td><td>硬座</td><td>一小时</td><td>西安站（火车站）位于市中心</td></tr><tr><td>大巴</td><td>谁没事坐大巴</td><td></td><td></td><td></td></tr></tbody></table><p><strong>杨陵–机场</strong></p><ul><li>06:50 – 18:00期间有车，具体上网查，买汽车票一般在微信 <strong>出行365</strong> 购票，或者现场购票，应该是￥35，</li></ul><p><strong>杨陵–机场</strong></p><ul><li>下了飞机出来就能看到大巴售票窗口</li><li>或者打车 [狗头]</li></ul><p style="text-align:center;">    <a href="https://cdn.yzyyz.top/new-nwafu/bus.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="hi-nwafu"><img src="https://cdn.yzyyz.top/new-nwafu/bus.jpg"></a></p><p>​    </p><h3 id="西农宿舍好不好"><a href="#西农宿舍好不好" class="headerlink" title="西农宿舍好不好"></a>西农宿舍好不好</h3><ul><li><p>好问题，宿舍内景见 <a href="https://mp.weixin.qq.com/s/C9uNqkTFhgbtGZtlD--cHg" target="_blank" rel="external nofollow noopener noreferrer">点我查看</a>，其实这些就是拍给你们看的，真实情况就比较一般，习惯就好。</p><p style="font-size:14px">注意，该文章所属公众号运营者非学校官方组织</p></li><li><p>床的尺寸是0.9*2的</p></li><li><p>夏天有风扇、有空调</p><ul><li>宿舍照明电理论上免费额度用不完，空调电的话，用风扇应该没多废，空调贵一点，具体的说不上，反正今年（2022）我们宿舍缴了空调费吹不了特别久</li></ul></li><li><p>冬天有暖气（是暖气片，不是地暖，南方不懂的孩子可以搜搜）</p></li><li><p><strong>没有独立卫浴</strong>，洗澡要去浴室，单间有隔板有门（不是大澡堂子）</p></li></ul><h3 id="洗衣服"><a href="#洗衣服" class="headerlink" title="洗衣服"></a>洗衣服</h3><p>水房有洗衣机，你要有自己的洗衣桶，开学应该有卖的，一人一桶，通过微信小程序<strong>浣熊先生洗衣</strong>下单</p><p>西区小卖部也有洗衣房</p><h3 id="床上用品"><a href="#床上用品" class="headerlink" title="床上用品"></a>床上用品</h3><p>&emsp;&emsp;被子这些，建议邮寄或者网购，开学学校里卖的肯定贵，地址 <strong>陕西省咸阳市杨凌区西北农林科技大学北校区西区</strong> , 南校区看着改，不用几号几号那么具体，能寄过来的。东西到了之后由于东西比较多，驿站放不下，大件行李会在田径场那边，不知道路的话找个工具人学长带过去，还能帮你扛</p><h3 id="行李物品"><a href="#行李物品" class="headerlink" title="行李物品"></a>行李物品</h3><p>带点想带的就完了，懒得带的过来买</p><h3 id="食堂伙食好不好（吃）"><a href="#食堂伙食好不好（吃）" class="headerlink" title="食堂伙食好不好（吃）"></a>食堂伙食好不好（吃）</h3><p>还是不错的，北校有6个餐厅</p><table><thead><tr><th align="center">西区（离宿舍楼近）</th><th align="center">东区（离教学楼近）</th></tr></thead><tbody><tr><td align="center">6餐、8餐、5餐、清餐  （餐厅比较大）</td><td align="center">3餐、4餐 （两个小餐厅）</td></tr></tbody></table><ul><li>低价：我曾经没钱的时候俩馒头+特价菜才3元不到</li><li>高价：我舍友曾一顿香锅花了￥40</li><li>其他还有火锅、串串、纸包鱼，西超下面也有吃的，新修的西超我没怎么转过不知道有啥</li><li>西北农林白嫖大学：逢年过节投喂很多吃的</li><li>吃腻了校外馆子也多，杨村也没多大，出去改善一下还是可以的，大一一般比较忙，改善伙食常在周末</li></ul><h3 id="饮水（喝）"><a href="#饮水（喝）" class="headerlink" title="饮水（喝）"></a>饮水（喝）</h3><p>&emsp;&emsp;每层楼都有饮水机，不过比较鸡肋，要支付宝扫码才能出水，曾今写过一个软件可以不用扫码，见<a href="https://yzyyz.top/archives/eae69302.html">接水自由–方便同学的小项目 | 稚昂长 (yzyyz.top)</a>，后来由于接口漏洞被修复了就没维护这个项目了。</p><p>或者也可以买饮水机，卖水的会给你们送（到宿舍楼下）</p><h3 id="娱乐（玩）"><a href="#娱乐（玩）" class="headerlink" title="娱乐（玩）"></a>娱乐（玩）</h3><p>虽然杨村地方不大，外面玩的地方挺全的，美团搜一下就有了</p><h3 id="交通（行）"><a href="#交通（行）" class="headerlink" title="交通（行）"></a>交通（行）</h3><p>&emsp;&emsp;校园该说不说也挺大，校内有共享单车（7MA），也可以自己买自行车（或者电动车），（我买自行车的同学后来都换了电动车），主要是电动车下山也方便。</p><ul><li><p>电动车</p><ul><li><p>超标电动车（就是那种大的）怎么说呢，交警想起来了会管一下</p></li><li><p>新国标车（小的）一般没啥事</p></li></ul></li><li><p>除了这些，出去的话可以打车</p><ul><li>万顺叫车，一般这个平台的司机是可以把车开进学校的（但有时候司机态度不好，还会拼车）</li><li>其他平台，一般车不能进学校，你得去校门口乘车</li><li>出租车，出校门拦出租车也行</li></ul></li><li><p>步行（那还用说吗）</p></li></ul><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://aisite.wejianzhan.com/site/wjzwjogs/05eeb0d7-47a5-4fbe-bf53-6a8392fdddae?ch=45&bd_vid=nHDdn1m1njm4P1RYn16vrHckPWwxPH6vPj9xnNtsg1nvg1msnjnsPWn3rHm&bd_bxst=EiaKw7OBX9czAp0m4fDb07OUMfAqYQrd1xQQ_sWPt_81EIa1Vf00000000000aKarj63nYc1wHDdnjTLwWmkfW01wDNKwHb4nH9Kf1nzwM9mNsK2KGt00000079t1vRK0000TosR0000000X0QT000000jQtQLD" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://www.zp515.com/data/upload/company/20190609/15600490767679.jpeg" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">点击下载 万顺叫车</p></a></div><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://a.app.qq.com/o/simple.jsp?pkgname=cn.qimate.bike" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://images.liqucn.com/mini/120x120/img/h23/h33/img_localize_56917add627ca07c1548cde27ecc13e1_512x512_120x120.png" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">点击下载 7MA出行(共享单车)</p></a></div><h3 id="军训相关"><a href="#军训相关" class="headerlink" title="军训相关"></a>军训相关</h3><ul><li>由于疫情原因你们的军训时间也说不好，大学的军训还是很有意思的，可以参与一下，毕竟算学分（军训分+后续军事理论课成绩），21届的学生军训教官是训练过西农学生，学长学姐还是很好的<ul><li>伤病连：我们（19届）军训的时候有，就收些病号，几乎不练，也不影响你军训的分</li><li>不用剃头</li><li>统一服装，鞋子不合脚可以穿自己的</li></ul></li></ul><h3 id="作息时间、熄灯"><a href="#作息时间、熄灯" class="headerlink" title="作息时间、熄灯"></a>作息时间、熄灯</h3><ul><li><p>上课</p><ul><li>标准课表是上午5节下午5节，晚上3节，一节课40分钟（但你的课不一定每节都有），这就是大学生的“我下午没课”</li><li>最早的课在08:00，有的学院有早自习的话可能早点</li><li>中午 14:00（冬）14：30（夏）上课</li><li>下午的课18:00（冬）18:30（夏）结束</li><li>晚上常规来说你们都没课，不过应该都有晚自习，晚自习21:40下自习（没记错的的话）</li></ul></li><li><p>熄灯</p><ul><li>晚上23:00（冬）23:30（夏）断电，周五周六晚延后30分 （空调风扇校园网不断电）</li><li>早上6:00来电</li><li>如果你运气好，会分到不断电的宿舍（北校很少），</li><li>等个别学院的大三搬到南校，会发现南校宿舍由于电路里的什么模块问题，维修人员短接了很多宿舍的电路，晚上不会断电</li></ul></li><li><p>早卡</p><ul><li>忘了是不是每个学院都有了，有的话早上7点10之前打，就是拿着你的小本本去特定的地方给你盖个章</li></ul></li></ul><h3 id="入学考试"><a href="#入学考试" class="headerlink" title="入学考试"></a>入学考试</h3><p>&emsp;&emsp;考英语，没啥影响，好的去英语A班，略次于A的去B班，因为没啥影响所以没啥好说的，我们（2019届）那会AB班还影响能否在12月报名四级考试，后来大一就都不能报名了。</p><h3 id="校园网、办手机卡"><a href="#校园网、办手机卡" class="headerlink" title="校园网、办手机卡"></a>校园网、办手机卡</h3><ul><li>办本地手机卡，<strong>没有必要</strong></li><li>学校有校园网（<strong>WIFI</strong> 和 <strong>有线</strong>），校园内几乎所有地方都有覆盖，价格还行，教学楼图书馆免费，而且教学楼应该是WIFI6设备，很快，宿舍楼不清楚，但是也不差<br> 校园网套餐价格如下</li></ul><table><thead><tr><th align="center">价格</th><th align="left">内容</th></tr></thead><tbody><tr><td align="center">0.5</td><td align="left">0.5元/G</td></tr><tr><td align="center">8</td><td align="left">30G 30天 超出0.5元/G</td></tr><tr><td align="center">16</td><td align="left">80G 30天 超出0.5元/G</td></tr><tr><td align="center">24</td><td align="left">120G 30天 超出0.5元/G</td></tr><tr><td align="center">32</td><td align="left">200G 30天 超出0.5元/G</td></tr></tbody></table><ul><li><p>连接上校园网后，会弹出认证界面，输入你的学号和密码登录就可以用了，如果你的设备不弹出认证页面，你可以在浏览器打开 <a href="http://172.26.8.11/" target="_blank" rel="external nofollow noopener noreferrer">172.26.8.11</a> 进行认证</p></li><li><p>宿舍想办宽带的话，学校里有电信营业厅，价格应该有变动，近两年不知道啥价，宿舍均摊不会很贵</p><p>这句话说给懂的，不懂可以不管：不过严格意义上那个不算宽带，算一个校园网套餐（是电信的套餐名，区别于上方的校园网），所以你拿不到公网ip</p></li><li><p>其实不办宽带也可以，宿舍墙上有网口，可以直连电脑，但只有两个口</p></li><li><p>如果宿舍校园网WIFI信号太差，你们可以买根网线买个路由器，用网线链接网口和路由器，达到中继校园网的效果</p></li><li><p>（不重要）由于宿舍断电，你的路由器也会断电，如果想要不断电可以购置  <a href="https://baike.baidu.com/item/%E4%B8%8D%E9%97%B4%E6%96%AD%E7%94%B5%E6%BA%90/271297?fromtitle=UPS&fromid=2734349&fr=aladdin" target="_blank" rel="external nofollow noopener noreferrer">UPS(不间断电源)</a>  ，淘宝就可以，要注意电压匹配</p></li></ul><h3 id="让不让带电脑"><a href="#让不让带电脑" class="headerlink" title="让不让带电脑"></a>让不让带电脑</h3><p>原则上不让带，除了班长支书用的其实不算多。但是你带伤也没关系，如果没买电脑的你可以来了再看情况，买的话京东很快的，晚上下单第二天早上就到了（西安仓库）</p><h3 id="成绩相关"><a href="#成绩相关" class="headerlink" title="成绩相关"></a>成绩相关</h3><p>具体的自己慢慢了解，因为改革年年都有，新的政策规定我不了解，你们应该会用到 <strong>到梦空间</strong>，来参与第二课堂，我记得是四年要积累<strong>20分</strong>，具体的可以来了之后再了解</p><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://h5.5idream.net/download/index.html" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="http://5b0988e595225.cdn.sohucs.com/images/20190713/1709f8f4ed134fe680c439fad9c24ca9.jpeg" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">点击下载 到梦空间</p></a></div><h3 id="进学生会有必要吗"><a href="#进学生会有必要吗" class="headerlink" title="进学生会有必要吗"></a>进学生会有必要吗</h3><p>&emsp;&emsp;可以加，大一加学生会算志愿者，也就是白打工，大二留在学生会才算加入学生会，有聘书（可以写在简历里）仅此而已。怎么才能留下呢，对成绩和工作水平有要求，但成绩这东西只是表面上这么说，只要你肯干活还和老师混的熟留下来应该没啥问题，当然了，留部之前会有竞选和投票（有的内定选手只是走个形式）。</p><p>依我看别去打工</p><h3 id="当班干部有必要吗"><a href="#当班干部有必要吗" class="headerlink" title="当班干部有必要吗"></a>当班干部有必要吗</h3><p>有，可以写进简历，其中班长、支书最重要，平时事儿也多（也不至于超级多）。</p><p>其他班委还有：</p><ul><li>组织委员、宣传委员（这两个和支书都是属于团组织里的比较重要的职务）</li><li>社践委员（管社会实践）</li><li>学习委员（首先学习好，其次收作业）</li><li>生纪委员（一般管班费，并通知你们什么时候查宿舍（卫生））</li><li>科创委员（科创、比赛相关）</li><li>权益委员（基本没用）、心理委员（应该有吧）</li><li>体育委员，文艺委员（这两个有时候是一个人，一个人的话可能有时候会很累）</li></ul><p>&emsp;&emsp;班长支书呢就是班里的主心骨，那怎么当上呢，反正我们军训时会选联络员（军训时负责传达通知和照顾同学的人），竞选产生，但是一般大家都不太熟，腼腆的也比较多，有人上基本就选上了，之后这二位便有很大可能成为班长支书（参与竞选的话）。</p><p>&emsp;&emsp;我就是这样过来的，这方面我还想说的是，如果你是为了当班委有利于你的前途，并且你没把握服务好大家，那我建议你别祸害班里人，因为班长支书怎么处理班级事务，怎样处理同学之间关系，进行怎样的团队建设，这些会直接影响一个班整体的面貌。（我自视我做的还不错）。</p><p>&emsp;&emsp;对于那些不选班干部的人，平时尽量服从安排（安排合理的情况下），因为大多时候他们也没办法，比如班委的领导通知班委什么活动要多少人，几点之前必须报名字，而班里没人报名他们只能随机安排之类的</p><h3 id="转专业相关"><a href="#转专业相关" class="headerlink" title="转专业相关"></a>转专业相关</h3><p>&emsp;&emsp;大学可以转专业，不要问xx专业可以转xx专业吗，要知道，转不转取决于你，转不转的进去取决于转入学院<br>也就是说，转出学院没有要求，也不会管你，能不能转成得看你是否符合转入学院的要求，不同学院要求不同，有的学院有考试面试，有的学院只有面试<br>详情加群 ：<a href="https://qm.qq.com/cgi-bin/qm/qr?k=hp1cOh77X_hWVMqA3xXn1YZFEYXgm9fF&authKey=EQrs48i1/Rh2KuIwE16sqG6VNWNMgaJ3ZWxm9Hf9bMR+iQO3KiPo0chwOz4nytjn&noverify=0" target="_blank" rel="external nofollow noopener noreferrer">485496634</a></p><p>一部分人考虑的是就业，也有一部分人是因为喜欢，我的建议是想干就去干</p><h3 id="社团相关"><a href="#社团相关" class="headerlink" title="社团相关"></a>社团相关</h3><p>&emsp;&emsp;学校社团很多，大家可以按兴趣参加，如果真的是喜欢，可以加一下，如果觉得无关紧要就算了，因为大一貌似挺忙的，不是为了自己喜欢的事情会很浪费时间。</p><p>&emsp;&emsp;社团列表见 ：<a href="https://54youth.nwsuaf.edu.cn/xstt/dxsstlhk/sldt/cxcyl/index.htm" target="_blank" rel="external nofollow noopener noreferrer">大学生社团指导中心-西北农林科技大学 (nwsuaf.edu.cn)</a></p><p>&emsp;&emsp;除此之外，学校的<strong>党宣新媒体</strong>有能力的大家可以去试试，如果没记错主要有微博组（我之前就在）、抖音组、B站组、摄影组、微信组之类的，不仅在学校官媒工作，干活还有工资（准确的来说是绩效）。等他们招新时会去教室宣传或者校园里有海报宣传，关注着就行了。</p><h3 id="工训相关"><a href="#工训相关" class="headerlink" title="工训相关"></a>工训相关</h3><p>地点在北校机电学院东边工程训练中心，分布有各种车间例如车削、自动化、工图、电焊等，要求穿军训服（为了不弄脏自己衣服、安全）</p><p>成果是功勋完你会得到一把小锤子，如果是机电则要接受系统训练，其他工科两周，非工科一般一周。</p><p>感受工厂车间制造</p><p>现场照片及小锤子见 <a href="https://mp.weixin.qq.com/s/_S7kuM5PHcxBMBzUdnCk1Q" target="_blank" rel="external nofollow noopener noreferrer">号外！请看记者在工训现场发回的报道！ (qq.com)</a></p><p>（是我们班当时的工训记录）</p><h3 id="大学渣男可以有多渣-这也要问-）"><a href="#大学渣男可以有多渣-这也要问-）" class="headerlink" title="大学渣男可以有多渣(这也要问..）"></a>大学渣男可以有多渣(这也要问..）</h3><p>…..</p><h3 id="大学女的可以有多浪"><a href="#大学女的可以有多浪" class="headerlink" title="大学女的可以有多浪"></a>大学女的可以有多浪</h3><p>…..</p><h3 id="没写到的评论区留言"><a href="#没写到的评论区留言" class="headerlink" title="没写到的评论区留言"></a>没写到的评论区留言</h3><hr><h2 id="需要用到的软件"><a href="#需要用到的软件" class="headerlink" title="需要用到的软件"></a>需要用到的软件</h2><p>​<br>​   </p><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://a.app.qq.com/o/simple.jsp?pkgname=com.lptiyu.tanke&channel=0002160650432d595942&fromcase=60001" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://images.liqucn.com/mini/120x120/img/h14/h09/img_localize_841df17d52adda0b97e3d578828a3691_512x512_120x120.png" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">步道乐跑 </p></a></div><p>校园跑app每学期20次   </p><p>​        </p><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://a.app.qq.com/o/simple.jsp?pkgname=com.jhj.cloudman&channel=0002160650432d595942&fromcase=60001" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://img.xuetianli.com/imgse/webp/logo/comjhjcloudman.png" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">云达人</p></a></div><p>洗澡要用到    </p><p>​        </p><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://dl002.liqucn.com/upload/2021/313/e/com.sangfor.vpn.client.phone_7.6.9.1_liqucn.com.apk" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://images.liqucn.com/mini/120x120/img/h04/h56/img_localize_c1fd4c1f717b6b67cad60b59c84b43a4_512x512_120x120.png" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">easyConnect </p></a></div><p>校园网VPN代理，校外访问校内资源用 </p><p>代理服务器地址：vpn.nwafu.edu.cn<br>账号密码为学号和密码  </p><br><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://h5.5idream.net/download/index.html" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="http://5b0988e595225.cdn.sohucs.com/images/20190713/1709f8f4ed134fe680c439fad9c24ca9.jpeg" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">点击下载 到梦空间</p></a></div><p>第二课堂学分认证</p><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://www.coolapk.com/apk/com.suda.yzune.wakeupschedule" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="http://pp.myapp.com/ma_icon/0/icon_52528981_1626526229/256" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">wakeup课程表 </p></a></div>个人推荐，不是必须的，可以导入课表并将课表添加为桌面部件 <br><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://aisite.wejianzhan.com/site/wjzwjogs/05eeb0d7-47a5-4fbe-bf53-6a8392fdddae?ch=45&bd_vid=nHDdn1m1njm4P1RYn16vrHckPWwxPH6vPj9xnNtsg1nvg1msnjnsPWn3rHm&bd_bxst=EiaKw7OBX9czAp0m4fDb07OUMfAqYQrd1xQQ_sWPt_81EIa1Vf00000000000aKarj63nYc1wHDdnjTLwWmkfW01wDNKwHb4nH9Kf1nzwM9mNsK2KGt00000079t1vRK0000TosR0000000X0QT000000jQtQLD" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://www.zp515.com/data/upload/company/20190609/15600490767679.jpeg" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">点击下载 万顺叫车</p></a></div>能进校内的网约车<br><div style="height: 110px;background:#f1f1f1;box-shadow: 14px 9px 6px 0px #cecece;display:flex;align-items: center;">    <a href="https://a.app.qq.com/o/simple.jsp?pkgname=cn.qimate.bike" target="_blank" style="display: flex; flex-direction: row;text-decoration: none" rel="external nofollow noopener noreferrer">        <img src="https://www.7mate.cn/statics/new/images/zesql4.png" alt width="100px" height="100px style=" margin-left: 1px;margin-top:5px">        <p style="line-height: 80px;margin-left: 10px;font-size: 16px">点击下载 7MA出行</p></a></div>共享单车<br><p><strong>其他的就不在这里放详细内容了,自己去商店下载</strong></p><ul><li><p><strong>企业微信</strong>  通知书里应该有说 </p></li><li><p><strong>批改网</strong> 有的英语课写作文会用，用电脑也可用网页版</p></li><li><p><strong>U校园</strong> 英语教材配套软件</p></li><li><p><strong>中国大学MOOC</strong> 部分课程网课要用</p></li><li><p><strong>超星学习通</strong> 课程号为ey开头的通识选修网课网课要用（前段时间信息泄露的那个软件）</p></li><li><p><strong>知到</strong> 课程号为ZH开头的通识选修课网课要用</p></li></ul><p>什么是通识选修课呢，相比于专业选修课，通识课是大家都要学的，所以选课范围是全校选，分8个方面，每个方面要修1分，上面提到的课程号，在你们选课时会看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/new-nwafu/txxx.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="hi-nwafu"><img src="https://cdn.yzyyz.top/new-nwafu/txxx.png"></a></p><p>选课的时候注意时间，一般是先预选再正选，预选完了就算你选上也有可能落选，不过应该是先到先得（不太清楚）</p><p>选网课比较容易，刷网课就行了，不用去教室上课，如果你真的喜欢，也可以去上线下课</p><ul><li><p><strong>体适能</strong> 查体育成绩用</p></li><li><p><strong>中国银行</strong></p></li><li><p><strong>智慧杨凌</strong> 坐公交用</p></li><li><p><strong>菜鸟</strong> 网购懂得都懂</p></li><li><p><strong>志愿汇</strong> 志愿服务相关，跟社会实践有关系</p></li><li><p>好像没啥了，想起来再加</p></li></ul><hr><h2 id="来之后应该明白的事"><a href="#来之后应该明白的事" class="headerlink" title="来之后应该明白的事"></a>来之后应该明白的事</h2><p>晚点写</p><h2 id="学长学姐说的话"><a href="#学长学姐说的话" class="headerlink" title="学长学姐说的话"></a>学长学姐说的话</h2><p>还没收集</p><h2 id="各老乡群"><a href="#各老乡群" class="headerlink" title="各老乡群"></a>各老乡群</h2><p>没写错的话群号都是对的，有问题底部评论区提出（评论时记得写邮箱，这样可以及时得到通知）</p><table><thead><tr><th align="center">地区</th><th>群号</th></tr></thead><tbody><tr><td align="center">新疆（欢迎阿达西）</td><td>219367751</td></tr><tr><td align="center">河南开封</td><td>31882126</td></tr><tr><td align="center">河南</td><td>45744620</td></tr><tr><td align="center">河南（这个人多）</td><td>1108649397</td></tr><tr><td align="center">河北</td><td>831152343</td></tr><tr><td align="center">河北正定中学</td><td>58451765</td></tr><tr><td align="center">河北廊坊</td><td>24448089</td></tr><tr><td align="center">河北邯郸</td><td>72968716</td></tr><tr><td align="center">河北衡水</td><td>23368542</td></tr><tr><td align="center">河北沧州</td><td>2931686</td></tr><tr><td align="center">河北邢台</td><td>46057762</td></tr><tr><td align="center">河北张家口</td><td>173788365</td></tr><tr><td align="center">山东</td><td>120063776</td></tr><tr><td align="center">山东</td><td>513394039</td></tr><tr><td align="center">山东菏泽</td><td>60810132</td></tr><tr><td align="center">山东菏泽曹县（牛皮666）</td><td>107334081</td></tr><tr><td align="center">山西</td><td>912330233</td></tr><tr><td align="center">陕西</td><td>821250882</td></tr><tr><td align="center">陕西汉中</td><td>693958907</td></tr><tr><td align="center">陕西延安</td><td>316543358</td></tr><tr><td align="center">四川</td><td>642526820</td></tr><tr><td align="center">湖南</td><td>105969038</td></tr><tr><td align="center">湖南</td><td>365063542</td></tr><tr><td align="center">辽宁</td><td>251071545</td></tr><tr><td align="center">云南</td><td>123508429</td></tr><tr><td align="center">天津</td><td>708588527</td></tr><tr><td align="center">内蒙古</td><td>317363884</td></tr><tr><td align="center">安徽（人多）</td><td>7096003</td></tr><tr><td align="center">安徽</td><td>2099385</td></tr><tr><td align="center">安徽滁州</td><td>172674199</td></tr><tr><td align="center">江苏（人多）</td><td>125226099</td></tr><tr><td align="center">江苏</td><td>7418615</td></tr><tr><td align="center">宁夏</td><td>478736682</td></tr><tr><td align="center">甘肃</td><td>251863618</td></tr><tr><td align="center">福建漳州</td><td>261843535</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/new-nwafu/no3building.webp&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;hi-nwafu&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/new-nwafu/no3building.webp&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文记叙了西农新生的常见问题以及老生想对新生说的话，&lt;strong&gt;手机用户右上角有目录哦&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="在西农" scheme="https://yzyyz.top/tags/%E5%9C%A8%E8%A5%BF%E5%86%9C/"/>
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>网络究竟带来了什么</title>
    <link href="https://yzyyz.top/archives/c900777c.html"/>
    <id>https://yzyyz.top/archives/c900777c.html</id>
    <published>2022-07-01T19:01:30.000Z</published>
    <updated>2022-07-08T05:02:55.957Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;我时常想起我的儿时生活，想起山间清晨的浓雾和傍晚稀落的炊烟。</p><p>&emsp;&emsp;现在是凌晨3点，深夜写文的规律大抵是不会变了，最近很长一段时间我都在想一个问题：互联网究竟带来了什么？  </p><p>&emsp;&emsp;一千个人眼中有一千个哈姆雷特，你们想你们的，我说我的。</p><a id="more"></a><p>&emsp;&emsp;诚然，它的带来的便利是肯定的，我也不会赘述，否则便和网上的内容千篇一律了。那么它还带来了什么呢，行文至此我没有一个总结，现在的状态就是想到哪儿写到哪儿。  </p><p>&emsp;&emsp;恶心是网络带给我的感觉之一。<br>&emsp;&emsp;最早出现这种感觉还是在高中，那也是段很好的时光。高一我学习还是很努力的，用现在的话说就是挺「卷」的，高二跑校时天天熬夜玩手机冲浪，白天听课打瞌睡，现在对高二数学课的记忆只有我坐在靠墙，老郑的ppt是绿色的，还有熊猫图案。不是我因为拉低了我的成绩之类的我才觉得网络恶心，而是因为另有原因。  </p><p>&emsp;&emsp;不出意外地，高二我谈恋爱了，度过了人生中第一段会没事儿偷着乐的时光、会为了女朋友干什么干什么的时光，青涩懵懂。那会儿是懂得不多，感情问题可能不会处理太好，但是那时的她好像深受「网络之害」，算下来高二是2018年，已经有抖音一段时间了，我感觉她时常对我提出的类似于「你就不能xxxxx吗」的要求，全是抖音上看来的，因为有些视频我也刷到过，跟她提的要求如出一辙。可是我就是我，每当被提要求的时候我就会不爽，我认为她对爱情对另一半都太理想化了，大半都是抖音学的。跟她也如高中老师后来在饭桌上说的：「其实结局我们都猜得到，只是一个时间问题」。  </p><p>&emsp;&emsp;由点到面，网络正在影响人的价值观等很多观念，没有恶意，也不是大多数，我见到的大多是女性，在现在的日常中我经常被这些公主平时所表达出的思想而震惊。再者就是所谓的网络流行语如「真的会谢」「栓Q」。还有就是某互以联网从业者为主的社群里，这里说的是男性，抛开他们可能是行业大牛不谈，他们的信仰可能只有金钱，金钱固然重要，但是除了金钱我看不出其他东西，能看到的只有戾气与跋扈，所谓的热爱生活无非是炫耀自己的自行车有多贵。他们自以为是，看谁都不爽，在群里除了口嗨就是色情和没有营养的内容。倒是这些社群的群主，多表现出不常在线与和善，对我有一定影响。 </p><p>&emsp;&emsp;亦或是什么网络拳师、独分子，思想这个东西是比较可怕的，但其实不影响人的独立思考能力也无妨，别最终导致「娱乐至死」。</p><p>&emsp;&emsp;可能并不是网络改变了人的观念，而是在算法下人只会去吸收和自己想法相同的内容，从而导致了这种现象的产生。</p><p>&emsp;&emsp;网络在某些方面让人退步也不言而喻。<br>&emsp;&emsp;我上大学之后最想上的课除了信工学院的课外就是语文了，可能会有人有疑问为什么想上信工的课，解释一下，我出于兴趣志愿报的是计算机，因为太菜被调剂了。高中语文算是比较拿手的，对诗歌文言的学习感到轻松自如，有种如鱼得水的感觉。说到这里，不知在其他文章中写到过没有：大三的某一门课，老师点到我读两句文言，记得是关于种子贮藏的文言，其中有「一石」一词，明显是度量读作「dan」，当我读完翻译完后，老师纠正说：「一shi」。我没有反驳只是默默坐下了。扯远了，也不远。</p><p>&emsp;&emsp;不远是因为这里本来我也想说关于阅读的问题，以前看到某一阅读网站在其关于页面中写道：</p><blockquote><p> 每天花10分钟阅读一篇文章，一个月可以有大约50000字的阅读量，一年有近60万字的阅读量，专注、执着，每天阅读。</p></blockquote><p>&emsp;&emsp;感觉挺不错的，而后就想到，在现在我所处的环境，所为人处世之中，阅读仿佛是不存在的，当然身边也有同学的在读书，但是极少。中学时学的课文，试卷上的阅读题，我觉得是有趣的，即使会出现「作者自己也不知道这种情感」，但也是有趣的，那是文字的乐趣。那时由于学业我们都在阅读，现在由于学业的阅读恐怕是浏览、研读文献。所谓书中自有黄金屋，那些学满腹经纶的人肯定是跟喜欢上网这类人不一样的，整天离不开手机，一会儿不看手机就会想拨弄两下，遇到什么只会「卧槽」，网络时代肯来就已经很快，短视频这个潮流出现之后变得更快了，在这里我想问一句，刷视频笑呵呵那是快乐吗？</p><p>&emsp;&emsp;答案是肯定的，在短视频上获得的快乐也是快乐，你都笑那么开心了当然快乐。</p><blockquote><p>对快乐的分类<br>第一类快乐，人体新陈代谢带来的乐趣，例如吃，喝，睡，等等<br>第二类进行肌肉力量带来的乐趣，例如跑步，跳舞，撸铁等等<br>第三类感观能力与精神创作的乐趣，例如阅读，思考，冥想，写作等等<br>                         ——叔本华《人生的智慧》</p></blockquote><p>&emsp;&emsp;而且这种快乐会让你上瘾，科学的解释是由于多巴胺疯狂分泌，我们会认为下一条短视频会让我们感到快乐，于是不知疲倦地刷下去，这也就是我们所说的上瘾性行为。你上网去搜索「刷视频上瘾怎么办？」居然真的有人问这种问题，那提问者都这样问了，无疑是自己已经知道答案了，却等人来戳破，显得有些愚钝了。  </p><p>&emsp;&emsp;网络或许还会带来更多的焦虑。<br>&emsp;&emsp;因为它给的真的太多了，你知道的越多，你的欲望就越多，你得不到的也多，那种得不到的焦虑缠绕全身。你刷视频上瘾，偶然刷到励志视频，幡然醒悟，在一个无人的深夜思考你的前半生和后半生，对你荒废了的昨天和不确定今天感到焦虑。昨天那个晒自拍，今天这个赚了钱，明天那个有了offer这些信息时刻都在让你焦虑…所有的信息几秒内在你脑海里电影般闪过，你叹一口气，扣下手机，正在为明天踌躇满志。然后日复一日。网络助长的金钱、容貌、事业焦虑等已经显而易见了，当然我说的是助长，因为或许你不通过网络，也会产生这些焦虑，只不过网络会让你更早产生。</p><p>&emsp;&emsp;曾赠导演的《你好，再见》想表达什么。<br>&emsp;&emsp;一对学生恋人新鲜感过去了，天气又热，所以现在每天除了吃饭时间出来，其他时间就是在微信戳几个表情包；你偶尔回想起给家里打个电话，但大多时候总是在生活费花完了的时候；很久不见的老同学，想起来联系了却又不知道说什么，草草几句，感觉对方也很忙；你和陌生人的沟通大多是「你好」「不好意思」「放楼下吧」「扫个码」。好像你们之间总隔着点什么，又好像合乎常理，我直到初中才见过并使用智能手机，我想在那之前，我是经常能见到人与人的社交，邻里街坊在过年时的那种感觉，真的找不到了。</p><p>&emsp;&emsp;其实这就跟很多事情的客观规律一样，是社会发展的必然结果(怎么样，这样一说是不是有政治理论的味道了)。无论如何，我喜欢那种理想化的世界，也怀念我童年时的世界。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;我时常想起我的儿时生活，想起山间清晨的浓雾和傍晚稀落的炊烟。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;现在是凌晨3点，深夜写文的规律大抵是不会变了，最近很长一段时间我都在想一个问题：互联网究竟带来了什么？  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;一千个人眼中有一千个哈姆雷特，你们想你们的，我说我的。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>为什么这么久没写文了</title>
    <link href="https://yzyyz.top/archives/966e91b.html"/>
    <id>https://yzyyz.top/archives/966e91b.html</id>
    <published>2022-06-25T18:19:00.000Z</published>
    <updated>2022-07-08T05:02:30.774Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;某网友在QQ的匿名提问道：多久没更博客了？看到后感觉挺诧异：</p><a id="more"></a><ul><li>还有人看我博客</li><li>我确实好久没写了</li></ul><p>&emsp;&emsp;关于没写的原因，我想了想，大概是因为宿舍晚上开始断电了吧。接下来准备讲个故事：<br>算了不讲了，写了很多都删掉了，总结一下就是宿舍由于线路问题被维修工短接了，所以宿舍晚上不断电(这栋楼很常见)，过了一个学期。新学期开始，某经常在宿舍半夜给女朋友打电话的舍友，觉得不断电我们太吵了，所以背着我们暗箱操作，让维修工给我们照常断电，不断电不行，而后被我发现了(偶然联系维修工)，宿舍群里就议论起来了，他直表达了：“你们怎么样，关我什么事”。关于这件事我真不想再多评价了，作为团支书，大一大二我都很照顾他，没想到是个这么自私的人，现在我在宿舍不仅要忍受他满屋子的臭气，还要为这种人在我身边发出声音而反感，所以现在在不经常在宿舍，在宿舍我也基本不理会什么事，只是带着耳机，做自己的事。</p><p>&emsp;&emsp;安静的晚上是我最有灵感的时光，我的很多文字都是在深夜堆砌的，晚上断电的话，我的游戏本坚持不了多久，我也没那心情，故写的就少了。还是要多写写的，这么久写的博文算下来还没中学写的作文多，最近愈发觉得互联网对大多数青少年的冲击太大了，特别能影响到一个人怎样去吸收知识，吸收什么样的知识，形成怎样的知识素养和储备，从而影响到这个人生活的方方面面，这部分内容我会详细写写，这篇算是对提问的回复，以上。  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;某网友在QQ的匿名提问道：多久没更博客了？看到后感觉挺诧异：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>当那一天来临</title>
    <link href="https://yzyyz.top/archives/81192.html"/>
    <id>https://yzyyz.top/archives/81192.html</id>
    <published>2022-05-05T18:58:09.000Z</published>
    <updated>2022-07-08T05:07:17.892Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img%2F81192.jpeg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="81192"><img src="https://cdn.yzyyz.top/img%2F81192.jpeg"></a></p><hr><br><div style="text-"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&id=281979&auto=0&height=66"></iframe><p style="text-align: center;">这是一个晴朗的早晨，鸽哨声伴着起床号音……  </p><a id="more"></a><hr><p>&emsp;&emsp;《当那一天来临》，是我比较喜欢的一首军歌，即使词还没记下。</p><p>&emsp;&emsp;这是个深夜，又想到了所谓「军人情结」，我确实是有的。提起军人会让你想到什么？强者、帅气、有组织有纪律的感觉。我觉得这可能是刻在某些人DNA里的，不然我真不好解释为什么我在山里的时候砍根小竹子背着齐步走，或者为什么小学毕业初中那会儿拉着朋友玩真人「枪战」，又或者为什么我喜欢玩FPS游戏……大一军训，印象最深的是我们营的汇报项目，反恐演练，我有幸作为乘坐猛虎车的突击队队长2，手持03式突破窗户后中弹牺牲的就是我[捂脸]</p><p>&emsp;&emsp;我敢说我在军训中每一个军礼都是带着敬意的，每一个动作我都认真做了，在学校领导讲完话问我们「准备好了吗？」别人说「准备好了」的时候而我喊出「时刻准备着」，因为这些时候是我离部队、离军人最近的时候。</p><p>&emsp;&emsp;我大抵是不会再有机会了。</p><p>&emsp;&emsp;大一军训结束，我给我们的连长小乔写了封信，用纸折了个信封，再贴上学院的院徽（仪式感还是很强的），内容记不清了，大概是敬佩他感谢他夸夸他、敬畏军人和部队什么的。信当然是以连队的名义干了我想干的，最后让大家都签上名，在他们要走那天早上，我们正准备集合，我双手递过信，并敬一个军礼，那是我见他最后一面了，那天在项目结束后，他们就在主席台上列队，敬礼，然后走了，当时那氛围我都快落泪了，几秒后全场都在鼓掌，我在想他们为什么不回礼，如果是那样的话便更好了。<br>&emsp;&emsp;当然除了小乔，我们的营长，一个瘦高个；还有带大方阵训练的「卧槽哥」，还有一个教官忘了名字了，样子还记得:黑黑的，嘴唇比较厚，大概是，隐约记得貌似是女生的教官吧。他们我都记得，现在想想这么久了还有印象也挺不错。</p><p>&emsp;&emsp;军人，这个词在大一军训结束后就不仅仅是军人了，小乔思想教育搞得好啊。他问我们愿不愿意为战友挡子弹，第一反应大家都是愿意，而后他让我们闭眼，给我们模拟战场的环境，前面是敌人后面是我们的家人，当子弹飞过来你愿不愿意为战友挡子弹，你还有家人，还有爱的人，你们扛着枪上去，子弹飞过来打人身上，人就没了，不是游戏里挨两下还活蹦乱跳的……很多人犹豫了，我可能比较固执，我愿意。当子弹飞过来，我想我必然会为我的战友挡子弹的。</p><p>&emsp;&emsp;除了这次「思想教育」，后来通过影视片，通过一些文章等的内容，对这个词有了更深的见解，这让我愈发的想成为他们的一员了。</p><p>&emsp;&emsp;我大抵是不会再有机会了，我说的不是军训。</p><p>&emsp;&emsp;2020年在家上网课的那段时间，那是我最想当兵的时候，很多消息我都打听好了，就等着适时报名了。可能去了也不见得能过但是去和不去是不一样的，可惜到现在还没去，也不会再去了，对我而言算是一个缺憾。</p><p>&emsp;&emsp;偶尔会想到「去了后悔两年不去后悔一辈子」</p><p>&emsp;&emsp;当那一天来临</p><p><code>2022-05-06  02:58</code></p></div>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img%2F81192.jpeg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;81192&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img%2F81192.jpeg&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;hr&gt;&lt;br&gt;

&lt;div style=&quot;text-&quot;&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;100%&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=281979&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;这是一个晴朗的早晨，鸽哨声伴着起床号音……  &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>记一次B站播放过10万</title>
    <link href="https://yzyyz.top/archives/becb15dd.html"/>
    <id>https://yzyyz.top/archives/becb15dd.html</id>
    <published>2022-04-23T01:52:48.000Z</published>
    <updated>2022-09-01T19:08:14.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>内设空调，↓戳此进入</p><a id="more"></a><div style="position: relative; padding: 30% 45%;"><iframe src="//player.bilibili.com/player.html?aid=810534277&bvid=BV1v34y1x7C4&cid=572428354&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内设空调，↓戳此进入&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="UP" scheme="https://yzyyz.top/tags/UP/"/>
    
      <category term="资源" scheme="https://yzyyz.top/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>资源链接汇总</title>
    <link href="https://yzyyz.top/archives/4ed97ea8.html"/>
    <id>https://yzyyz.top/archives/4ed97ea8.html</id>
    <published>2022-04-23T01:23:28.000Z</published>
    <updated>2022-04-23T02:00:11.770Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="lep"> 解放双腿？校园跑步路线模拟刷圈教程</h3><p>link：<a href="https://www.bilibili.com/video/BV1v34y1x7C4/" target="_blank" rel="external nofollow noopener noreferrer">https://www.bilibili.com/video/BV1v34y1x7C4/</a></p><ul><li>三个软件：<a href="https://wwp.lanzouy.com/i1zoO02xummf" target="_blank" rel="external nofollow noopener noreferrer">蓝奏云</a></li><li>vmos：<a href="https://wwp.lanzouy.com/ia7Ui02xupcd" target="_blank" rel="external nofollow noopener noreferrer">蓝奏云</a><br>密码:yzyyz</li><li>MT管理器：<a href="http://m.itmop.com/downinfo/245823.html" target="_blank" rel="external nofollow noopener noreferrer">在线下载</a>  <br><br></li></ul><hr><h3 id="lep">懒人福音：视频跳过神器</h3><p>link: <a href="https://space.bilibili.com/361119581" target="_blank" rel="external nofollow noopener noreferrer">https://space.bilibili.com/361119581</a></p><ul><li><a href="https://wwp.lanzouy.com/iarzsch" target="_blank" rel="external nofollow noopener noreferrer">Tampermonkey 油猴</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/381682-html5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A2%9E%E5%BC%BA%E8%84%9A%E6%9C%AC" target="_blank" rel="external nofollow noopener noreferrer">HTML5视频播放器增强脚本</a></li><li><a href="http://via-app.cn" target="_blank" rel="external nofollow noopener noreferrer">via-app</a></li><li><a href="http://via-app.cn/#/pluginDetail/26" target="_blank" rel="external nofollow noopener noreferrer">via 播放器增强</a>  <br><br></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="UP" scheme="https://yzyyz.top/tags/UP/"/>
    
      <category term="资源" scheme="https://yzyyz.top/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>保持清醒</title>
    <link href="https://yzyyz.top/archives/447f259f.html"/>
    <id>https://yzyyz.top/archives/447f259f.html</id>
    <published>2022-04-14T16:53:27.000Z</published>
    <updated>2022-05-06T02:26:13.298Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/20220415bcqx.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="bcqx"><img src="https://cdn.yzyyz.top/img/20220415bcqx.jpg"></a></p><hr><br>  &nbsp;&nbsp;最近一些事情闹的满城风雨，学校女寝楼进了个男扮女装的人，暂且称为人<a id="more"></a>，进入寝室翻箱倒柜，被发现后仓皇逃离。女生报警后，警方因未有物品被盗，也没有其他情况，转交给校保卫处处理，该宿舍楼管理员抱怨报警女生未上报就直接报警以及女生晚上睡觉为什么没栓门，女生导员问女生为什么要把事情闹大，并让女生删除各平台发布的相关内容（网传）。<p>  &nbsp;&nbsp;事发不久此事被挂在校园墙上，好友圈低年级的女生基本都在转，高年级的可能比较理性，也可能比较忙。朋友圈里，个别认识的女的几天后也在发。这类人表达的观点是：</p><ul><li>发生这样的事感到很恶心，作为女性应该发声</li><li>学校想吧事情压下去，并默不作声，不处理，不作为  </li></ul><p>&nbsp;&nbsp;而在较短时间后，几个大群里、校园墙上、微博上就都出现了这件事，群内、评论区「百家争鸣」，提及一些无从考证的事，甚至上升到所谓「女权」，刚好近期「极端女权」也沸沸扬扬的。</p><p>  &nbsp;&nbsp;关于此事，我想说的是：</p><ul><li>相信组织</li><li>保持理性</li><li>提升涵养</li><li>小心入侵      </li></ul><p>  &nbsp;&nbsp;首先试想，作为管理者，很大组织的管理者，你的组织发生了这样的事，你会怎么办？把事情压下去，让受害者受委屈；还是彻查此事，声张正义？如果你选择前者，那么很遗憾，你可能是少数的「坏人」，我相信学校会做后者。拿去年放假行程码的问题来说，学校是正常的在学生有需求的情况下，默默地去解决了问题，无声息的在放假前几天将证明材料发到学生手中，并联系运营商解决问题。而不是一些人想的，学校能办就不给办，反映的人多了没办法了才去解决。所以说，学校是值得信赖的，我的举例固然没什么说服力，但信不信由你。我总不能说学校是你在你们自己的转动下转动的，那不是顺其自然的事，而是在管理层的管理下运行的。故，我会选择相信组织。<br>  &nbsp;&nbsp;其次，能极大挑动你情绪的事，让你感到特别气愤、特别爽或者特别解气，都需要等一等，看清虚实、想一想发这条消息的人要达到什么目的，你的这种情绪会不会被人利用，再做判断。不同的情绪混在一起，才造就了平庸，和真实世界，如果什么消息只由一种情绪垄断，那可能是有人故意掩盖了什么。当然用这件事这样说是不到位的，这本是「如何识别假新闻」的观点，我这里断章取义了，单纯的学生还是受害者能掩盖什么。保持理性，把保持理性，还  是保持理性。<br>  &nbsp;&nbsp;再者，可能存在这样的「愣头青」们，我是说可能，并不是指谁，就是那些有点风吹草动就有「舌战群儒」的勇气的人，他们爱钻牛角尖、认为自己认为的、觉得有理声高的、优越感极强的、激进的人，我愿称他们为「愣头青」。他们要么是受过创，心理有问题，要么是压力大，要么是爱显摆，是老一辈人口中的「人来疯」，要么就是无聊。窃以为网络把这类人教坏了，带坏了，所谓人言可畏，0和1是可以杀人的。希望人们都能有自己的知识体系、思维体系、三观，遇事有自己客观的看法，不要做墙头草，被人当枪使。<br>  &nbsp;&nbsp;最后，关于「女权」，这么说吧，我觉得中国女性是好的，网上打拳的，很大部分屏幕后面都不一定是女的，它们发表挑动部分女性网民的言论，带节奏，扰团结，这背后极大可能就是政治，这是入侵。它们看到我们不稳定了，割裂了，就高兴了，达到目的了。认清现实吧<br>  &nbsp;&nbsp;保持清醒</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/20220415bcqx.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;bcqx&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/20220415bcqx.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;hr&gt;&lt;br&gt;
  &amp;nbsp;&amp;nbsp;最近一些事情闹的满城风雨，学校女寝楼进了个男扮女装的人，暂且称为人
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>山</title>
    <link href="https://yzyyz.top/archives/mountain.html"/>
    <id>https://yzyyz.top/archives/mountain.html</id>
    <published>2022-03-05T03:06:18.000Z</published>
    <updated>2022-04-14T17:01:12.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/psb_sxlj.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="mountain"><img src="https://cdn.yzyyz.top/img/psb_sxlj.jpg"></a></p><p>&nbsp;&nbsp;想找一个合适的意象来做标题，选了很多，什么小路、茅草、杏子、李子、水井啊诸如此类的……终究是太多了，干脆用山算了。<br>&nbsp;&nbsp;聊聊最近吧，最近，这是2022年的3月初，我感觉这个月我会很水逆。何出此言呢：</p><a id="more"></a><ul><li>时常感觉头晕</li><li>我们专业一周五天课，别人一周四节</li><li>跟班重修老师由于一些原因让我退课（好在教务处老师帮我选了重修班）</li><li>嘴上长了个痘，抠了几下，肿了一周</li><li>宿舍开始断电了  </li></ul><p>嗯，可以说是很倒霉的，好的方面：</p><ul><li><p>作息上比以前好了</p></li><li><p>确定了考研目标</p></li><li><p>春天来了  </p></li></ul><p>&nbsp;&nbsp;这种情况下的人半夜（12点）躺在床上会想什么？胡思乱想呗，跟平常一样。<br>&nbsp;&nbsp;我是喜欢写作的，小学到中学我的作文在班里经常会被念出来，明白什么意思了吧。大学以后不学语文了，写的就少了，博客算是主阵地，但毕竟是随笔，也有可能写出来没什么手法，没什么逻辑，写到某些地方会有一点小心思罢了。大学以后读的也少了，但其实我是很想读的，刚刚打开之前关注的公众号，点开一篇《来与回》，作者注的是牛大壮。<br>&nbsp;&nbsp;牛大壮，粗犷的名字，文笔倒挺细腻，看到「在大山里，集市是最美好的事了。不论老人还是小孩，更不用说男人和女人了……都充满了向往！」这句，思绪万千，久久不能回神。<br>&nbsp;&nbsp;这句话，不是说对与错，只是激起了我的共鸣。在大山里，集市是最美好的事了。三年级以前我也在大山里，那时可以说是个留守儿童，可能之前的文章里也提过，爸妈在外打工，这期间我在外婆家度过了一段时光，在奶奶家也度过了一段时光。<br>&nbsp;&nbsp;在外婆家那会儿，最喜欢的是用弯刀砍竹子玩，外婆家的小竹林是真绝，砍小竹子当抢，砍大柱子做弓；最怕的是路边各种落叶很多堆起来的地方，因为里面可能有蛇。在外婆家呀，娃哈哈和爽歪歪是少不了的，只记得我喝出来很多瓶子，最印象深刻的吃的有鸡爪、一种木头上长出的白色菌子、朋友家的油饼（方言好像叫油子，朋友们会走很远送到外婆家），小姨带回去的巧克力。  （还有大姨带回去的布鞋，隐约记得，不过不算吃的）<br>&nbsp;&nbsp;差点没收住，说太多了，关于赶集，不算去公社，外婆家赶集就是在「逢场」的时候（也就是赶场，赶集的意思）去镇上，山路很远，我应该只走过一次，记得走了很久，有一段路还特别陡，我那时候小，应该没觉得陡，忘记买了啥了，估计没有好吃的，所以没记住。好像一般都是外公去，背个背篓把要买的东西背回来。背篓我们叫背篼，都是自己编的，这下知道为啥外婆家有竹林了吧，用处大着呢。嗯现在想想，背着一背篓东西走那么远，外公是真的厉害，平时种的土豆，魔芋，玉米，啥不是用背篓背，那会外公还去外地下过煤矿呢。现在外公老了，上次去机场接他，他从出口出来，我见他佝偻着背，也或许是背了个迷彩的大背包的缘故，反正觉得他瘦小了很多，写到这儿鼻子有点酸，不过外公在我心中的形象就依然高大威猛啦。</p><p>(不得不中断了，改天继续写)</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/gm_home.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="mountain"><img src="https://cdn.yzyyz.top/img/gm_home.png"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/psb_sxlj.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;mountain&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/psb_sxlj.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;想找一个合适的意象来做标题，选了很多，什么小路、茅草、杏子、李子、水井啊诸如此类的……终究是太多了，干脆用山算了。&lt;br&gt;&amp;nbsp;&amp;nbsp;聊聊最近吧，最近，这是2022年的3月初，我感觉这个月我会很水逆。何出此言呢：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>新-基于Nonebot2和go-cqhttp的机器人搭建</title>
    <link href="https://yzyyz.top/archives/nb2b1.html"/>
    <id>https://yzyyz.top/archives/nb2b1.html</id>
    <published>2022-01-24T06:57:39.997Z</published>
    <updated>2022-08-17T13:01:11.831Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><p style="text-align:center;width=200px">    <a href="https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logo.png" style="width:200px"></a><br>QQ机器人保姆级平民搭建方法(新)<br> <font color="red">本文内容及部分所用图片来自上一篇教程，与文章内容可能有偏差但不影响部署<br>如果在阅读时发现了我的错误 烦请在<a href="#comments">评论区</a>提出<br>本人技术不佳 还希望来访大佬指教</font></p><a id="more"></a><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>nb2a16文章原址<a href="https://yzyyz.top/archives/nb2.html">基于Nonebot2和go-cqhttp的机器人搭建 | 稚昂长 (yzyyz.top)</a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文将叙述如何在linux（deepin）下使用Nonebot2（下称nb）和go-cqhttp（下称gocq）创建QQ机器人<img src="https://api.isoyu.com/uploads/ARU/GIF_S/0540.gif" style="    margin: 0;    display: inline;">，若你想使用nb和gocq创建机器人，你需要：</p><ol><li>Python环境（3.7.3以上）</li><li>Python能力</li><li>读文档能力</li><li>Linux能力（部署于linux）</li><li>…</li></ol><p>windows下部署也是一样的，</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><strong>什么是nb？什么是gocq？</strong><br>关于这部分内容，你可以从他们的官网找到：  </p><blockquote><p>nb文档: <a href="https://v2.nonebot.dev/" target="_blank" rel="external nofollow noopener noreferrer">https://v2.nonebot.dev</a><br>gocq文档: <a href="https://docs.go-cqhttp.org/" target="_blank" rel="external nofollow noopener noreferrer">https://docs.go-cqhttp.org/</a><br>你需要记住他们，因为你需要随时查阅文档</p></blockquote><p><del>简单</del><strong>粗暴</strong>来说，gocq就是一个QQ，即你需要用它来登录，接收消息，发送消息；而nb则用来实现机器人的各种功能。<br>如下是他们的项目地址，记得去点个star哦~  </p><blockquote><p>nb：<a href="https://github.com/nonebot/nonebot2" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nonebot/nonebot2</a><br>gocq：<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Mrs4s/go-cqhttp</a>  </p></blockquote><p><strong><font color="red">创作本文时，nb最新版本为<code>2.0.0b1</code>，gocq最新版本为`v1.0.0-beta8-fix2，请注意内容时效！</font></strong></p><hr><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="安装nb"><a href="#安装nb" class="headerlink" title="安装nb"></a>安装nb</h2><ul><li><p><strong>安装脚手架</strong><br> 通过脚手架安装(官方推荐)：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nb-cli</span><br></pre></td></tr></table></figure><p>安装脚手架时会自动安装nb </p><p>安装时出现错误：</p><ul><li>python版本不对</li><li>缺少Microsoft Visual C++ 环境 </li><li>…（请仔细看报错）</li></ul></li><li><p><strong>安装适配器</strong>(使用脚手架安装时已经安装)</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot-adapter-onebot</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装gocq"><a href="#安装gocq" class="headerlink" title="安装gocq"></a>安装gocq</h2><h3 id="deepin"><a href="#deepin" class="headerlink" title="deepin"></a>deepin</h3><p>我们打开工作路径（这里我新建一个<code>bot</code>文件夹，<code>bot</code>下新建<code>cq</code>文件夹并打开  </p><p>前往<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer"><i class="fas fa-link fa-fw"></i> Release</a>下载最新版，注意与你的操作系统匹配 </p><p>我这里下载 <code>go-cqhttp_1.0.0-beta8-fix2_linux_amd64.deb</code>, 并安装。</p><ul><li>在<code>cq</code>目录下执行<code>go-cqhttp</code></li><li>选择<code>反向WebSocket</code>回车</li><li>此时目录下会生成配置文件<code>config.yml</code></li><li>对其进行配置：<ul><li>QQ号及密码</li><li>反向ws地址</li></ul></li></ul><p>使用任何适宜的编辑器对配置文件进行编辑，在<code>行4、5</code>填写要用来做机器人的QQ账号与密码。<code>行96</code> 内容进行修改：</p><blockquote><p>universal: ws://your_websocket_universal.server</p></blockquote><p>修改为</p><blockquote><p>universal: ws://127.0.0.1:8080/onebot/v11/ws</p></blockquote><p>8080是端口号，根据实际需求填写，修改完保存即可，再次执行<code>./go-cqhttp</code>，即可登录成功（有的账号需要扫码登录，根据提示即可）</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqlogin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqlogin.png"></a></p><p>如图代表登陆成功，下方黄色提示暂且放下不管。</p><br><h3 id="其他Linux发行版"><a href="#其他Linux发行版" class="headerlink" title="其他Linux发行版"></a>其他Linux发行版</h3><p>下载对应release后：</p><ul><li>使用<code>tar -xzvf [文件名]</code>解压</li><li><code>cd</code>设置工作目录为解压后的文件夹</li><li>再执行 <code>./go-cqhttp</code></li><li>按照提示配置<code>config.yml</code>与上方配置相同</li></ul><h2 id="创建nb项目"><a href="#创建nb项目" class="headerlink" title="创建nb项目"></a>创建nb项目</h2><p>返回<code>bot</code>，在此处打开终端并运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb create</span><br></pre></td></tr></table></figure><p>此时按照如下步骤创建项目</p><ul><li>输入<code>项目名称</code> 我这里输入了robot</li><li>使用 <code>↓</code> 选择<code>src</code>文件夹</li><li>选择一款预置插件，我按下<font color="red" size="25px">空格</font>选择echo，回车</li><li>按下<font color="red" size="25px">空格</font>键选择<code>noebot v11</code>回车<br>(很多人这里不注意空格)</li></ul><p>请使用任何适宜的软件（如记事本(不推荐)）打开<code>env.dev</code>并做出修改，保证你在前面的步骤中对gocq配置的端口与此文件中的端口保持一致</p><blockquote><p>PORT=8080</p></blockquote><p>修改为</p><blockquote><p>PORT=你使用的端口</p></blockquote><p>那么现在在robot下打开终端,输入以下命令运行nonebot2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run</span><br></pre></td></tr></table></figure><p>此外，在pycharm中运行bot.py也是可行的</p><p><strong><font color="#3898fc">注意，需要让gocq和nb都运行，linux可使用进程守护一类的工具让他们后台运行，我个人是宝塔面板中的进程守护来解决这个问题</font></strong></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbrun.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbrun.png"></a></p><p>如图表示运行成功，你会发现gocq中的黄色提示变成了：</p><blockquote><p>已连接到反向Web…..</p></blockquote><p>也就是说，nb与gocq之间可以通信了</p><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>现在，向你的机器人发送 <code>/echo 123</code> 看看会发生什么吧，不出意外地，你的机器人向你回复了<code>123</code></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/echo123.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/echo123.png"></a></p><hr><h1 id="nonebot2机器人的配置"><a href="#nonebot2机器人的配置" class="headerlink" title="nonebot2机器人的配置"></a>nonebot2机器人的配置</h1><h2 id="env-的配置"><a href="#env-的配置" class="headerlink" title=".env.*的配置"></a>.env.*的配置</h2><p>.env.*文件为配置文件，可在任何插件中加载，官方示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HOST&#x3D;0.0.0.0  # 配置 NoneBot 监听的 IP&#x2F;主机名</span><br><span class="line">PORT&#x3D;8080  # 配置 NoneBot 监听的端口</span><br><span class="line">SUPERUSERS&#x3D;[&quot;123456789&quot;, &quot;987654321&quot;]  # 配置 NoneBot 超级用户</span><br><span class="line">NICKNAME&#x3D;[&quot;awesome&quot;, &quot;bot&quot;]  # 配置机器人的昵称</span><br><span class="line">COMMAND_START&#x3D;[&quot;&#x2F;&quot;, &quot;&quot;]  # 配置命令起始字符</span><br><span class="line">COMMAND_SEP&#x3D;[&quot;.&quot;]  # 配置命令分割字符</span><br><span class="line"></span><br><span class="line"># Custom Configs</span><br><span class="line">CUSTOM_CONFIG1&#x3D;&quot;config in env file&quot;</span><br><span class="line">CUSTOM_CONFIG2&#x3D;  # 留空则从系统环境变量读取，如不存在则为空字符串</span><br></pre></td></tr></table></figure><p>你可以将其复制到<code>.env.dev</code>中</p><ul><li><p>其中<code>COMMAND_START=[&quot;/&quot;, &quot;&quot;]</code>是对命令起始字符进行配置，当你遇到 <code>怎么让命令没有/也能被机器人识别</code>这个问题时，请对它进行配置。这样，你的命令前就不同加<code>/</code>了</p></li><li><p>形如custom这样的配置，你可以自定义,只要确保为JSON格式即可，且大小写不敏感，<br>你可以配置如：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BAN&#x3D;[&quot;123456&quot;]</span><br></pre></td></tr></table></figure><p>  则在插件中可通过以下方式来调用（后续使用插件会讲）</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line">myconfig = nonebot.get_driver().config.ban</span><br></pre></td></tr></table></figure></li></ul><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><p>就我个人而言，使用.env.*是最常使用的，此外还可通过系统环境变量、bot.py来配置，参见官方：[基本配置](<a href="https://v2.nonebot.dev/docs/tutorial/configuration" target="_blank" rel="external nofollow noopener noreferrer">配置 | NoneBot</a> “基本配置”)</p><hr><h1 id="nonebot2机器人的使用"><a href="#nonebot2机器人的使用" class="headerlink" title="nonebot2机器人的使用"></a>nonebot2机器人的使用</h1><p>相信你再<a href="#env">前面的章节中</a>,已经对 <code>.env.dev</code>做出了修改，这里不再赘述</p><p>bot.py中默认生成的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom your logger</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># from nonebot.log import logger, default_format</span></span><br><span class="line"><span class="comment"># logger.add("error.log",</span></span><br><span class="line"><span class="comment">#            rotation="00:00",</span></span><br><span class="line"><span class="comment">#            diagnose=False,</span></span><br><span class="line"><span class="comment">#            level="ERROR",</span></span><br><span class="line"><span class="comment">#            format=default_format)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can pass some keyword args config to init function</span></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter)</span><br><span class="line"></span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">"echo"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please DO NOT modify this file unless you know what you are doing!</span></span><br><span class="line"><span class="comment"># As an alternative, you should use command `nb` or modify `pyproject.toml` to load plugins</span></span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify some config / config depends on loaded configs</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># config = driver.config</span></span><br><span class="line"><span class="comment"># do something...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>阅读注释后（看不懂请使用翻译）我们大可去掉其中的注释，改为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter</span><br><span class="line"></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter)</span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">"echo"</span>)</span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>这里的 <code>nonebot.load_builtin_plugins(&quot;echo&quot;)</code> 是加载此前选择的预置插件，我们暂时搁置，现在讲讲如何使用别人写好的插件</p><h2 id="使用商店中的插件"><a href="#使用商店中的插件" class="headerlink" title="使用商店中的插件"></a>使用商店中的插件</h2><p>(<code>2022年1月24日16:24:05</code>部分插件未适配最新版nb,请参考：<a href="https://github.com/Lancercmd/nonebot2-store-test/issues/1" target="_blank" rel="external nofollow noopener noreferrer">📝 NoneBot2 商店插件兼容性报告 </a>)</p><p>在<a href="https://v2.nonebot.dev/store" target="_blank" rel="external nofollow noopener noreferrer">nb的商店</a>中，有很多插件，比如这个黑丝插件</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore2.png"></a></p><ul><li><p>安装方法一</p><p> 点击复制安装命令，你的剪贴板会复制这段命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot_plugin_heisi</span><br></pre></td></tr></table></figure><p> 这段命令你需要在 <code>robot</code> 文件夹下，打开终端执行，他会安装插件并将配置写进 <code>pyproject.toml</code> 中，这样你无需修改 <code>bot.py</code> 即可在nb运行的时候加载这个插件</p></li><li><p>安装方法二<br>  若你在方法一中遇到了安装问题，一般情况下，你可以将上述命令视作</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot_plugin_heisi</span><br></pre></td></tr></table></figure><p> 在任何打开的终端中都可以执行这段命令，而值得注意的是：<br> <font color="red">如果你使用了方法二，你需要在 <code>bot.py</code>中的 <code>nonebot.load_from_toml(&quot;pyproject.toml&quot;)</code>前添加一句：</font></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonebot.load_plugin(&quot;nonebot_plugin_heisi&quot;)</span><br></pre></td></tr></table></figure><p> 此时你的<code>bot.py</code>应该是：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter</span><br><span class="line"></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter)</span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">"echo"</span>)</span><br><span class="line">nonebot.load_plugin(<span class="string">"nonebot_plugin_heisi"</span>)</span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p> 即加载 “nonebot_plugin_heisi” 这一插件</p><p> 注意：这是方法二才需要的，一般情况下你不用这样做</p></li></ul><p>tips: 多数情况下，在插件右上角的图标中进入他的仓库页面，你可以找到插件的详细用法</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore2.png"></a></p><p>完成安装后，重启nb，你会看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginsu2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginsu2.png"></a></p><p>表示 “nonebot_plugin_heisi” 插件已经成功导入，在<a href="https://github.com/yzyyz1387/nonebot_plugin_workscore" target="_blank" rel="external nofollow noopener noreferrer">插件的仓库页面</a>我们可以看到它的用法：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginuse2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginuse2.png"></a></p><p>故我们在.env.dev中做出配置，再重启nb，在群内发送<code>.黑丝</code>即可</p><h2 id="编写插件"><a href="#编写插件" class="headerlink" title="编写插件"></a>编写插件</h2><h3 id="须知"><a href="#须知" class="headerlink" title="须知"></a>须知</h3><p>我们回顾一下我们的目录结构</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bot</span><br><span class="line">├── cq</span><br><span class="line">├── robot</span><br><span class="line">│   └── ...</span><br><span class="line">│   └── src</span><br><span class="line">│        └── plugins</span><br><span class="line">│   └── bot.py</span><br><span class="line">│   └── ...</span><br></pre></td></tr></table></figure><p>gocq在之前的操作中已经完成了他的使命，不再讨论。</p><p><code>robot</code>下的<code>src</code>文件夹是你你再进行 <code>nb create</code> 的操作时自动生成的，若没有 <code>src</code> 文件夹，那必定会有一个 与项目名相同的文件夹，按照我的教程来说，在 <code>robot</code>下还有一个 <code>robot</code>文件夹。</p><p>继续拿 <code>src</code> 文件夹来说，在它下面有一个 <code>plugins</code> 文件夹，是插件目录，文件夹里的插件会在 nb启动时被加载。</p><p>这是在<code>nb create</code> 时配置好的，你可以在 <code>pyproject.toml</code> 看到：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nonebot.plugins]</span></span><br><span class="line"><span class="attr">plugins</span> = []</span><br><span class="line"><span class="attr">plugin_dirs</span> = [<span class="string">"src/plugins"</span>]</span><br></pre></td></tr></table></figure><p>表示这个nb项目的插件目录是 <code>src/plugins</code> </p><p>接下来我将演示一个简单的插件编写，仅提供入门nb的一个思路，其他操作将写在后面，或另撰新文。</p><h3 id="开始-1"><a href="#开始-1" class="headerlink" title="开始"></a>开始</h3><p>官方推荐使用python包文件形式创建插件，即 ：一个插件为一个文件夹，文件夹名即插件名，下含 <code>__init__.py</code>的文件以及其他文件，为一个合法的python包。我们创建一个名为 <code>first_plugin</code> 的插件，欲用它来调用一个每日早报的接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">│   └── plugins</span><br><span class="line">│        └── first_plugin</span><br><span class="line">│                 └── __init__.py</span><br><span class="line">│                 └── askjson.py</span><br></pre></td></tr></table></figure><p>以pycharm为例，在创建插件时，可选择新建下的 python包，该操作会自动生成 <code>__init__.py</code>：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/createplugin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/createplugin.png"></a></p><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><p><strong>&gt; askjson.py</strong></p><p>我们先对<code>askjson.py</code> 进行编写（其实这种简单地操作没必要独立出来一个askjson文件，这里只是示例）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Optional</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span> -&gt; Optional[str]:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :return: 早报图片链接</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    url=<span class="string">"https://api.iyk0.com/60s"</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">        r = (<span class="keyword">await</span> client.get(url=url)).json()</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure><p>上述代码中使用了异步的httpx而不是requests：数据获取应尽量使用<strong>异步</strong>处理。我们访问 <code>https://api.iyk0.com/60s</code>这个接口，该接口会返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"Success"</span>,</span><br><span class="line">    <span class="attr">"imageUrl"</span>: <span class="string">"https://img01.sogoucdn.com/app/a/200692/621_2416_feedback_f1971058fc5c40eabc885fa7a18dba28.png"</span>,</span><br><span class="line">    <span class="attr">"tips"</span>: <span class="string">"注意:新闻数据是在每天凌晨一点更新，如设定定时任务请在凌晨一点后调用本接口！谢谢配合！"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>故我们在调用 <code>get_url()</code>时，会返回早报的图片链接（接口正常的情况下）</p><p><strong>&gt; __init__.py</strong> </p><p>在该文件中编写各类事件响应及处理逻辑。</p><p>我通常默认阅读本文的宁具有一定python基础，故某些点不做解释</p><p>通常，最常见的开始姿势如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command,logger</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Bot, MessageEvent, MessageSegment</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> askjson</span><br><span class="line"></span><br><span class="line">sixty=on_command(<span class="string">"60s"</span>,aliases=&#123;<span class="string">"早报"</span>,<span class="string">"六十"</span>&#125;,priority=<span class="number">2</span>,block=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">@sixty.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(bot:Bot,event:MessageEvent)</span>:</span></span><br><span class="line">    img_url=(<span class="keyword">await</span> askjson.get_url())</span><br><span class="line">    <span class="keyword">if</span> img_url:</span><br><span class="line">        <span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url[<span class="string">"imageUrl"</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        logger.info(<span class="string">'获取时出现错误'</span>)</span><br></pre></td></tr></table></figure><ul><li>第2行导入的<code>on_command</code> 注册一个消息类型的命令处理器，也就是说，让机器人识别你的命令需要用到他。<code>logger</code>是nb 日志记录器对象。详见： <a href="https://v2.nonebot.dev/docs/next/api/log" target="_blank" rel="external nofollow noopener noreferrer">NoneBot.log 模块</a></li></ul><ul><li><p>第7行中的写法中：</p><ol><li><code>60s</code>表示命令名</li><li><code>aliases</code> 表示命令别名，即 <code>60s</code>、<code>早报</code>、<code>六十</code> 都会响应这个事件</li><li><code>priority</code>表示优先级，数值越小越优先</li></ol></li><li><p>第8行，紧接着<code>@sixty.handle()</code> sixty被事件响应器的装饰器装饰从而成为事件响应器的事件处理函数,<code>handle()</code>是简单的为事件响应器添加一个事件处理函数，这个函数将会在上一个处理函数正常返回执行完毕后立即执行。</p></li></ul><p><del><strong>事件处理函数中，除<code>bot</code>外都是可选的</strong></del></p><p><strong>b1中,按需传入参数，bot也可以不传，反正这里可以这样写，读者日后慢慢会理解</strong></p><ul><li><p>第10行调用我们编写的函数获取到链接，12行中<code>send()</code>函数根据<code>event</code>向触发事件的主体发送消息。<a href="https://v2.nonebot.dev/docs/next/tutorial/plugin/matcher-operation#send" target="_blank" rel="external nofollow noopener noreferrer">点我查看参数</a> </p><p>  我们在注册事件时传入了Event故这里可以直接<code>sixty.send(message=xxx)</code>,我们也可以：<code>bot.send(event=event,message=xxx)</code></p><p>其中<code>message</code>参数是我们要发送的消息，可以是纯文本 <code>message=&quot;你好&quot;</code> ，这里使用的 <code>MessageSegment</code> 是nb对cq协议的适配，可用于发送CQ码等（个人理解），即:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><p>  等价于（不推荐）</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure><ul><li><p>如果你要发送文本+图片，如下写法皆可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=<span class="string">"今日早报"</span>+MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"text"</span>: <span class="string">"今日早报"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>现在，运行nb，向它发送<code>早报</code>看会发生什么  </p>  <p style="text-align:center;">  <a href="https://cdn.yzyyz.top/nonebot/60.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/60.png"></a> </p> <p>  成了，此时你将在nb日志界面看到</p>   <p style="text-align:center;">   <a href="https://cdn.yzyyz.top/nonebot/lognb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/lognb.png"></a></p>   <p>  其中包含了：</p><ul><li><p>消息id  <code>-765866496</code>,</p></li><li><p>消息来源 <code>1796031384</code></p></li><li><p>消息内容 <code>早报</code></p></li><li><p>事件被那个插件的Matcher处理了</p><p>在gocq的日志界面看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/logcq.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logcq.png"></a></p>  <p>一般情况下，使用小号来登录gocq作为机器人，在发送群聊消息时，可能会出现:</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/fk.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/fk.png"></a></p>  这种情况我们称之为 `喜报`<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb.png"></a></p>  若要解决这个问题，我的建议是：看脸。 你可以使用此账号挂在cq一段时间，挂的时间真得看脸，我的号就风控过一次，几分钟就好了；或者重启cq试试。还有一种情况是：<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb2.png"></a></p>显而易见，你的账号被冻结了，我相信，屏幕前的您能收购鹅厂，您肯定不会让上述情况发生的，对吧（确信）<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb3.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb3.png"></a></p></li></ul></li><li><p>tips:发送本地图片：</p><ul><li><p>利用gocq+nb作为机器人发送本地图片时，若使用相对路径，要记得 路径是相对gocq的 而不是相对nb项目的，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(<span class="string">"file:///路径"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: <span class="string">"file:///路径"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>路径问题本人一般使用<code>Path</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">img_path = Path() / <span class="string">"xxx.png"</span></span><br><span class="line"><span class="comment"># .resolve() 转为绝对路径</span></span><br><span class="line">img_path2 = img_path.resolve()</span><br></pre></td></tr></table></figure><p>上述<code>img_path</code>都是Path对象，需要使用时可<code>str(img_path)</code>, 此为个人见解，若有错误，烦请在评论区指出</p><p>此外：<a href="https://www.cnblogs.com/heniu/p/12872604.html" target="_blank" rel="external nofollow noopener noreferrer">python路径操作新标准：pathlib 模块 - 和牛 - 博客园 (cnblogs.com)</a></p><p><strong>其他</strong></p><p>官方配置文档 ：<a href="https://v2.nonebot.dev/docs/tutorial/configuration" target="_blank" rel="external nofollow noopener noreferrer">配置 | NoneBot</a> 。这里暂时用不到，有需要请阅读之。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p style=&quot;text-align:center;width=200px&quot;&gt;
    &lt;a href=&quot;https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;nonebot&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/nonebot/logo.png&quot; style=&quot;width:200px&quot;&gt;&lt;/a&gt;&lt;br&gt;QQ机器人保姆级平民搭建方法(新)&lt;br&gt; &lt;font color=&quot;red&quot;&gt;本文内容及部分所用图片来自上一篇教程，与文章内容可能有偏差但不影响部署&lt;br&gt;如果在阅读时发现了我的错误 烦请在&lt;a href=&quot;#comments&quot;&gt;评论区&lt;/a&gt;提出&lt;br&gt;本人技术不佳 还希望来访大佬指教&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="机器人" scheme="https://yzyyz.top/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>四季</title>
    <link href="https://yzyyz.top/archives/siji.html"/>
    <id>https://yzyyz.top/archives/siji.html</id>
    <published>2022-01-10T15:30:20.000Z</published>
    <updated>2022-08-17T13:04:08.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><pre><code>对你而言，四季是怎样的？是春暖花开，是骄阳似火，是秋高气爽，亦或是银装素裹。而杰娃却找不到合适的词去形容他的四季。</code></pre><a id="more"></a><p>  2001年冬天，杰娃出生在陕南的一个小村子里，后来的一段时间，少有父母的陪伴，先是在外婆家，到了上学的年龄又到了爷爷家。外婆家比爷爷家更山里一点，那里还没通水泥路，那里的人们好像很擅长走路。  春天，最先来的不是万物复苏，而是对面的山上淡粉色的花，杰娃觉得那大抵是樱花，一棵，两棵，慢慢的越来越多…再后来就是地坝前的樱花，李子花。说起<a href="#z1">地坝[1]</a>前的那棵樱桃树，杰娃真的想抱怨几句：樱桃成熟杰娃从来没吃到过，那光秃秃的树只有高大粗壮的主干，几乎没有分枝，所以根本摘不到。父母在广州打工，杰娃也要跟父母到处跑的，不记得是哪年哪岁，他坐上了火车，绿皮火车。那也是个春天，车厢里阵阵嘈杂，窗外绵绵细雨，很细而急促的雨，静悄悄的，雨水在绿皮车窗上聚集成水滴然后流下。“嘶——啦——”，车走的很慢，窗外的山上也有粉的花，车走的越远，花开的越多。</p><p>&emsp;    夏天，外婆家的夏天倒也不记得多热，地坝左手边有条小路，是一个上坡，大概四五步路，是一片<a href="#z2">丝绵树[2]</a>，丝绵树上的蝉最多，天天吵个不停，杰娃喜欢到丝绵树上去抓蝉，丝绵树干光秃秃的，树叶都在顶上，所以很好抓，要是蝉停的高了杰娃是没办法的，杰娃那时还不会爬直树，只有等到另一座山上的小伙伴来了才能抓到。小伙伴抓到蝉以后，会把蝉处理一下，撒上盐，塞进灶台烤熟了吃，杰娃只分到了一条腿，尝了尝盐味儿。</p><p>&emsp;    爷爷家的夏天，那是个油菜花开在母亲头上的季节。那时杰娃的父母在家，上午要去地里，嘱咐杰娃道：“弟弟醒了哭，你就去前面那里<a href="#z3">喊[3]</a>我们”。弟弟如期传来了哭声，杰娃急忙准备跑到约定好的地方喊父母，慌乱中觉得后脑勺凉凉的，摸了一把，杰娃也开始哭了。原因是慌乱中摔了一跤，头透磕到了有两个大洞的水泥砖上，弟弟在屋里哭，杰娃在外面哭，邻居三爸发现了才将父母喊了回来。母亲回来后眼神中带着一丝慌乱，头发上还带着油菜花，家人拿帕子把杰娃头包起来，母亲背着杰娃一直走到村里卫生院，那是很远的一段距离，给头上缝了几针，没记错的话是6针。在爷爷家的夏天，晚上他们会把椅子搬到地坝<a href="#z4">歇凉[4]</a>，那时爷爷家的地坝还没<a href="#z4">打板[5]</a>，歇凉时萤火虫和蛙声从草丛里浮出来，伴着满天繁星，代表着一天的结束。</p><p>&emsp;    秋天，外婆家地坝右边种的佛手瓜熟了，做菜味道应该不错，旁边两棵梨树，好不容易能结出六七个梨，还总被小伙伴摘走，杰娃记得应该是没吃到过。  冬天，雪会附在<a href="#z7">锅盖[6]</a>上，而杰娃又很喜欢看电视，没办法，外公用很长的竹竿，捆上桶，桶里装上开水，到房子后紧挨的山坡上，把这些水淋到锅盖上，让雪融化流走。杰娃仍认为那是非常难的，冬天地滑，山坡上还有灌木很不方便，那个竹竿也很长，看起来很重。某天晚上，应该是金鹰卡通或者是湖南台在播宫崎骏的《千与千寻》，杰娃很想看完，外公外婆也同意了，外公外婆都睡去了…不知道那是几点，很晚了，杰娃还坐在小板凳上看，外公醒了，拿个<a href="#z7">搪瓷盆[7]</a>，到<a href="#z8">火笼[8]</a>里弄了些炭，端到小板凳前面，怕杰娃冷到。  爷爷家的冬天，是奶奶走的季节，奶奶的葬礼在冬天，应该是葬礼第二天才开始下雪的吧。到爷爷家后奶奶对杰娃非常好，放学回家总是会说：“饿了没有，我去给你弄饭”，记得有一次，奶奶炒了一大碗饭，挺油的，杰娃也没吃完。有一天中午，杰娃在<a href="#z9">房顶上[9]</a>玩，看见远处路上的挖挖机（挖掘机）很是兴奋，因为很少看见这些车，急忙下楼叫奶奶去看，奶奶腿脚不便，杰娃很快就冲上楼，还要催奶奶快点快点，终于等来了奶奶，奶奶眼睛不好，要用手撑开眼皮看，也不知道奶奶看到了没有，小杰娃真是不懂事啊。</p><p>&emsp;    这是杰娃的四季，他只能记起这么多，杰娃是谁，我就是杰娃，家里人喊我杰娃儿，作此文时去掉了儿化音。此文完成于2022-01-10 06:27，4时许被舍友的呼声吵醒，睡不着，突然想到儿时的一些画面，真的是很美好的时光</p><p id="z1">[1] 地坝 在方言里，大人们把房子钱的空地成为地坝，我更想写作地巴，因为在方言中的坝是一声的</p>  <p id="z2">[2] 丝绵树 杰娃清晰的记得是叫丝绵树，因为外婆是这样说的，不知道跟百度里面搜出的是不是同一种树</p>  <p id="z3">[3] 喊，山里人特殊的通话方式，似乎在山里能喊很远。</p>  <p id="z4">[4] 歇凉 纳凉</p>  <p id="z5">[5] 打板 将土地坝修整为水泥地坝</p>  <p id="z6">[6] 锅盖 电视用的卫星锅</p>  <p id="z7">[7] 搪瓷盆 百度可以搜到，就是那种红白色，盆地有花个红双喜字样的铁盆</p>  <p id="z8">[8] 火笼 就是火坑，烧火的地方，冬天经常会用灰烬埋住白天生完火没熄灭的木炭，第二天可以刨开方便点火</p>  <p id="z9">[9] 爷爷家是平房，屋顶是可以直接上去的</p>  ]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;对你而言，四季是怎样的？是春暖花开，是骄阳似火，是秋高气爽，亦或是银装素裹。而杰娃却找不到合适的词去形容他的四季。&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>基于Nonebot2和go-cqhttp的机器人搭建</title>
    <link href="https://yzyyz.top/archives/nb2.html"/>
    <id>https://yzyyz.top/archives/nb2.html</id>
    <published>2021-12-02T03:30:02.000Z</published>
    <updated>2022-08-17T12:57:56.917Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;width=200px">    <a href="https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logo.png" style="width:200px"></a><br>QQ机器人保姆级平民搭建方法<br> <font color="red">如果你仅想使用python实现机器人的功能而不考虑其他的(黑产用途、手搓轮子之类的)，请继续阅读<br>如果不是 那你完全没必要读下去<br>如果在阅读时发现了我的错误 烦请在<a href="#comments">评论区</a>提出<br>本人技术不佳 还希望来访大佬指教</font></p><a id="more"></a><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>本文由于nonebot版本更新，部分内容已不再适用，请转至<a href="https://yzyyz.top/archives/nb2b1.html">基于Nonebot2和go-cqhttp的机器人搭建 新</a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文将叙述如何在windows下使用Nonebot2（下称nb）和go-cqhttp（下称cq）创建QQ机器人<img src="https://api.isoyu.com/uploads/ARU/GIF_S/0540.gif" style="    margin: 0;    display: inline;">，若你想使用nb和cq创建机器人，你需要：</p><ol><li>Python环境（3.7.3以上）</li><li>Python能力</li><li>读文档能力</li><li>Linux能力（部署于linux）</li><li>…</li></ol><p>linux下部署也是一样的，</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><strong>什么是nb？什么是cq？</strong><br>关于这部分内容，你可以从他们的官网找到：  </p><blockquote><p>nb文档: <a href="https://v2.nonebot.dev/" target="_blank" rel="external nofollow noopener noreferrer">https://v2.nonebot.dev</a><br>cq文档: <a href="https://docs.go-cqhttp.org/" target="_blank" rel="external nofollow noopener noreferrer">https://docs.go-cqhttp.org/</a><br>你需要记住他们，因为你需要随时查阅文档</p></blockquote><p><del>简单</del><strong>粗暴</strong>来说，cq就是一个QQ，即你需要用它来登录，接收消息，发送消息；而nb则用来实现机器人的各种功能。<br>如下是他们的项目地址，记得去点个star哦~  </p><blockquote><p>nb：<a href="https://github.com/nonebot/nonebot2" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nonebot/nonebot2</a><br>cq：<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Mrs4s/go-cqhttp</a>  </p></blockquote><p><strong><font color="red">创作本文时，nb最新版本为<code>2.0.0a16</code>，cq最新版本为<code>v1.0.0-beta8-fix1</code>，请注意内容时效！</font></strong></p><p><strong>nb 2.0.0 b1 已发版 其与a16有部分差别，注意查看官方文档</strong></p><hr><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="安装nb"><a href="#安装nb" class="headerlink" title="安装nb"></a>安装nb</h2><ul><li><p><strong>安装脚手架</strong><br> 通过脚手架安装(官方推荐)：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nb-cli</span><br></pre></td></tr></table></figure><p>安装脚手架时会自动安装nb </p><p>安装时出现错误：</p><ul><li>python版本不对</li><li>缺少Microsoft Visual C++ 环境 </li><li>…（请仔细看报错）</li></ul></li><li><p><strong>安装适配器</strong>(使用脚手架安装时已经安装)</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot-adapter-cqhttp</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装cq"><a href="#安装cq" class="headerlink" title="安装cq"></a>安装cq</h2><p>我们打开工作路径（这里我新建一个<code>bot</code>文件夹，<code>bot</code>下新建<code>cq</code>文件夹并打开  </p><p>前往<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer"><i class="fas fa-link fa-fw"></i> Release</a>下载最新版，注意与你的操作系统匹配 </p><p>我这里下载 <code>go-cqhttp_windows_amd64.exe</code>, 更名为<code>go-cqhttp.exe</code>,双击启动。</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqinstall.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqinstall.png"></a></p><br><p>这里按照提示点确定，最后会在当前目录生成一个<code>go-cqhttp.bat</code>的批处理文件</p><br><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqbat.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqbat.png"></a></p><p>双击运行批处理文件，选择 <strong>3</strong> <code>反向Websocket</code> 回车，此时会在当前文件夹生成 <code>config.yml</code>的配置文件</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqws.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqws.png"></a></p><p>使用任何适宜的编辑器对配置文件进行编辑，在<code>行4、5</code>填写要用来做机器人的QQ账号与密码。<code>行96</code> 内容进行修改：</p><blockquote><p>universal: ws://your_websocket_universal.server</p></blockquote><p>修改为</p><blockquote><p>universal: ws://127.0.0.1:8080/cqhttp/ws</p></blockquote><p>8080是端口号，根据实际需求填写，修改完保存即可，再双击<code>go-cqhttp.bat</code>批处理文件，即可登录成功（有的账号需要扫码登录，根据提示即可）</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqlogin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqlogin.png"></a></p><p>如图代表登陆成功，下方黄色提示暂且放下不管。</p><h2 id="创建nb项目"><a href="#创建nb项目" class="headerlink" title="创建nb项目"></a>创建nb项目</h2><p>返回<code>bot</code>，在此处打开cmd并运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb create</span><br></pre></td></tr></table></figure><p>此时按照如下步骤创建项目</p><ul><li>输入<code>项目名称</code> 我这里输入了robot</li><li>使用 <code>↓</code> 选择<code>src</code>文件夹</li><li>输入 <code>y</code> 回车</li><li>按下<font color="red" size="25px">空格</font>键选择<code>cqhttp</code>回车<br>(很多人这里不注意空格，还反过来问我觉得我有问题)</li></ul><p>请使用任何适宜的软件（如记事本）打开<code>env.dev</code>并做出修改，保证你在前面的步骤中对cq配置的端口与此文件中的端口保持一致</p><blockquote><p>PORT=8080</p></blockquote><p>修改为</p><blockquote><p>PORT=你使用的端口</p></blockquote><p>那么现在在robot下打开cmd,输入以下命令运行nonebot2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run</span><br></pre></td></tr></table></figure><p>此外，在pycharm中运行bot.py也是可行的</p><p><strong><font color="#3898fc">注意，需要让cq和nb都运行，linux可使用进程守护一类的工具让他们后台运行，我个人是宝塔面板中的进程守护来解决这个问题</font></strong></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbrun.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbrun.png"></a></p><p>如图表示运行成功，你会发现cq中的黄色提示变成了：</p><blockquote><p>已连接到反向Web…..</p></blockquote><p>也就是说，nb与cq之间可以通信了</p><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>现在，向你的机器人发送 <code>/echo 123</code> 看看会发生什么吧，不出意外地，你的机器人向你回复了<code>123</code></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/echo123.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/echo123.png"></a></p><hr><h1 id="nonebot2机器人的配置"><a href="#nonebot2机器人的配置" class="headerlink" title="nonebot2机器人的配置"></a>nonebot2机器人的配置</h1><h2 id="env-的配置"><a href="#env-的配置" class="headerlink" title=".env.*的配置"></a>.env.*的配置</h2><p>.env.*文件为配置文件，可在任何插件中加载，官方示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HOST&#x3D;0.0.0.0  # 配置 NoneBot 监听的 IP&#x2F;主机名</span><br><span class="line">PORT&#x3D;8080  # 配置 NoneBot 监听的端口</span><br><span class="line">DEBUG&#x3D;true  # 开启 debug 模式 **请勿在生产环境开启**</span><br><span class="line">SUPERUSERS&#x3D;[&quot;123456789&quot;, &quot;987654321&quot;]  # 配置 NoneBot 超级用户</span><br><span class="line">NICKNAME&#x3D;[&quot;awesome&quot;, &quot;bot&quot;]  # 配置机器人的昵称</span><br><span class="line">COMMAND_START&#x3D;[&quot;&#x2F;&quot;, &quot;&quot;]  # 配置命令起始字符</span><br><span class="line">COMMAND_SEP&#x3D;[&quot;.&quot;]  # 配置命令分割字符</span><br><span class="line"></span><br><span class="line"># Custom Configs</span><br><span class="line">CUSTOM_CONFIG1&#x3D;&quot;config in env file&quot;</span><br><span class="line">CUSTOM_CONFIG2&#x3D;  # 留空则从系统环境变量读取，如不存在则为空字符串</span><br></pre></td></tr></table></figure><p>你可以将其复制到<code>.env.dev</code>中</p><ul><li><p>其中<code>COMMAND_START=[&quot;/&quot;, &quot;&quot;]</code>是对命令起始字符进行配置，当你遇到 <code>怎么让命令没有/也能被机器人识别</code>这个问题时，请对它进行配置。</p></li><li><p><code>DEBUG=true</code>表示开启debug模式，当你对在进行如编写插件等的操作时，对文件做出了修改，保存文件后，nb会自动重启</p></li><li><p>形如custom这样的配置，你可以自定义,只要确保为JSON格式即可，且大小写不敏感，<br>你可以配置如：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BAN&#x3D;[&quot;123456&quot;]</span><br></pre></td></tr></table></figure><p>  则在插件中可通过以下方式来调用（后续使用插件会讲）</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line">myconfig = nonebot.get_driver().config.ban</span><br></pre></td></tr></table></figure></li></ul><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><p>就我个人而言，使用.env.*是最常使用的，此外还可通过系统环境变量、bot.py来配置，参见官方：<a href="https://v2.nonebot.dev/guide/basic-configuration.html" target="_blank" rel="external nofollow noopener noreferrer" title="基本配置">基本配置</a></p><hr><h1 id="nonebot2机器人的使用"><a href="#nonebot2机器人的使用" class="headerlink" title="nonebot2机器人的使用"></a>nonebot2机器人的使用</h1><p>相信你再<a href="#env">前面的章节中</a>,已经对 <code>.env.dev</code>做出了修改，这里不再赘述</p><p>bot.py中默认生成的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot <span class="keyword">as</span> CQHTTPBot</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom your logger</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># from nonebot.log import logger, default_format</span></span><br><span class="line"><span class="comment"># logger.add("error.log",</span></span><br><span class="line"><span class="comment">#            rotation="00:00",</span></span><br><span class="line"><span class="comment">#            diagnose=False,</span></span><br><span class="line"><span class="comment">#            level="ERROR",</span></span><br><span class="line"><span class="comment">#            format=default_format)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can pass some keyword args config to init function</span></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(<span class="string">"cqhttp"</span>, CQHTTPBot)</span><br><span class="line"></span><br><span class="line">nonebot.load_builtin_plugins()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please DO NOT modify this file unless you know what you are doing!</span></span><br><span class="line"><span class="comment"># As an alternative, you should use command `nb` or modify `pyproject.toml` to load plugins</span></span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify some config / config depends on loaded configs</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># config = driver.config</span></span><br><span class="line"><span class="comment"># do something...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>我们大可去掉其中的注释，改为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(<span class="string">"cqhttp"</span>, Bot)</span><br><span class="line">nonebot.load_builtin_plugins()</span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>这里的 <code>nonebot.load_builtin_plugins()</code> 是加载本地插件，我们暂时搁置，现在讲讲如何使用别人写好的插件</p><h2 id="使用商店中的插件"><a href="#使用商店中的插件" class="headerlink" title="使用商店中的插件"></a>使用商店中的插件</h2><p>在<a href="https://v2.nonebot.dev/store.html" target="_blank" rel="external nofollow noopener noreferrer">nb的商店</a>中，有很多插件，比如这个工作性价比插件</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore.png"></a></p><ul><li><p>安装方法一</p><p> 点击复制安装命令，你的剪贴板会复制这段命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot_plugin_workscore</span><br></pre></td></tr></table></figure><p> 这段命令你需要在 <code>robot</code> 文件夹下，打开cmd执行，他会安装插件并将配置写进 <code>pyproject.toml</code> 中，这样你无需修改 <code>bot.py</code> 即可在nb运行的时候加载这个插件</p></li><li><p>安装方法二<br>  若你在方法一中遇到了安装问题，一般情况下，你可以将上述命令视作</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot_plugin_workscore</span><br></pre></td></tr></table></figure><p> 在任何打开的cmd中都可以执行这段命令，而值得注意的是：<br> <font color="red">如果你使用了方法二，你需要在 <code>bot.py</code>中的 <code>nonebot.load_from_toml(&quot;pyproject.toml&quot;)</code>前添加一句：</font></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonebot.load_plugin(&quot;nonebot_plugin_workscore&quot;)</span><br></pre></td></tr></table></figure><p> 此时你的<code>bot.py</code>应该是：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(<span class="string">"cqhttp"</span>, Bot)</span><br><span class="line">nonebot.load_builtin_plugins()</span><br><span class="line"></span><br><span class="line">nonebot.load_plugin(<span class="string">"nonebot_plugin_workscore"</span>)</span><br><span class="line"></span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p> 即加载 “nonebot_plugin_workscore” 这一插件</p></li></ul><p>tips: 多数情况下，在插件右上角的图标中进入他的仓库页面，你可以找到插件的详细用法</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore.png"></a></p><p>完成安装后，重启nb，你会看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginsu.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginsu.png"></a></p><p>表示 “nonebot_plugin_workscore” 插件已经成功导入，在<a href="https://github.com/yzyyz1387/nonebot_plugin_workscore" target="_blank" rel="external nofollow noopener noreferrer">插件的仓库页面</a>我们可以看到它的用法：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginuse.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginuse.png"></a></p><p>这里写的不是很详细，意思是需要艾特机器人并说算性价比即可，或者叫机器人昵称并说算性价比，</p><h2 id="编写插件"><a href="#编写插件" class="headerlink" title="编写插件"></a>编写插件</h2><h3 id="须知"><a href="#须知" class="headerlink" title="须知"></a>须知</h3><p>我们回顾一下我们的目录结构</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bot</span><br><span class="line">├── cq</span><br><span class="line">├── robot</span><br><span class="line">│   └── ...</span><br><span class="line">│   └── src</span><br><span class="line">│        └── plugins</span><br><span class="line">│   └── bot.py</span><br><span class="line">│   └── ...</span><br></pre></td></tr></table></figure><p>cq在之前的操作中已经完成了他的使命，不再讨论。</p><p><code>robot</code>下的<code>src</code>文件夹是你你再进行 <code>nb create</code> 的操作时自动生成的，若没有 <code>src</code> 文件夹，那必定会有一个 与项目名相同的文件夹，按照我的教程来说，在 <code>robot</code>下还有一个 <code>robot</code>文件夹。</p><p>继续拿 <code>src</code> 文件夹来说，在它下面有一个 <code>plugins</code> 文件夹，是插件目录，文件夹里的插件会在 nb启动时被加载。</p><p>这是在<code>nb create</code> 时配置好的，你可以在 <code>pyproject.toml</code> 看到：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nonebot.plugins]</span></span><br><span class="line"><span class="attr">plugins</span> = []</span><br><span class="line"><span class="attr">plugin_dirs</span> = [<span class="string">"src/plugins"</span>]</span><br></pre></td></tr></table></figure><p>表示这个nb项目的插件目录是 <code>src/plugins</code> </p><p>接下来我将演示一个简单的插件编写，仅提供入门nb的一个思路，其他操作将写在后面，或另撰新文。</p><h3 id="开始-1"><a href="#开始-1" class="headerlink" title="开始"></a>开始</h3><p>官方推荐使用python包文件形式创建插件，即 ：一个插件为一个文件夹，文件夹名即插件名，下含 <code>__init__.py</code>的文件以及其他文件，为一个合法的python包。我们创建一个名为 <code>first_plugin</code> 的插件，欲用它来调用一个每日早报的接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">│   └── plugins</span><br><span class="line">│        └── first_plugin</span><br><span class="line">│                 └── __init__.py</span><br><span class="line">│                 └── askjson.py</span><br></pre></td></tr></table></figure><p>以pycharm为例，在创建插件时，可选择新建下的 python包，该操作会自动生成 <code>__init__.py</code>：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/createplugin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/createplugin.png"></a></p><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><p><strong>&gt; askjson.py</strong></p><p>我们先对<code>askjson.py</code> 进行编写（其实这种简单地操作没必要独立出来一个askjson文件，这里只是示例）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Optional</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span> -&gt; Optional[str]:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :return: 早报图片链接</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    url=<span class="string">"https://api.iyk0.com/60s"</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">        r = (<span class="keyword">await</span> client.get(url=url)).json()</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure><p>上述代码中使用了异步的httpx而不是requests：数据获取应尽量使用<strong>异步</strong>处理。我们访问 <code>https://api.iyk0.com/60s</code>这个接口，该接口会返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"Success"</span>,</span><br><span class="line">    <span class="attr">"imageUrl"</span>: <span class="string">"https://img01.sogoucdn.com/app/a/200692/621_2416_feedback_f1971058fc5c40eabc885fa7a18dba28.png"</span>,</span><br><span class="line">    <span class="attr">"tips"</span>: <span class="string">"注意:新闻数据是在每天凌晨一点更新，如设定定时任务请在凌晨一点后调用本接口！谢谢配合！"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>故我们在调用 <code>get_url()</code>时，会返回早报的图片链接（接口正常的情况下）</p><p><strong>&gt; __init__.py</strong> </p><p>在该文件中编写各类事件响应及处理逻辑。</p><p>我通常默认阅读本文的宁具有一定python基础，故某些点不做解释</p><p>通常，最常见的开始姿势如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command,logger</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot, Event, MessageSegment</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> askjson</span><br><span class="line"></span><br><span class="line">sixty=on_command(<span class="string">"60s"</span>,aliases=&#123;<span class="string">"早报"</span>,<span class="string">"六十"</span>&#125;,priority=<span class="number">2</span>,block=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">@sixty.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(bot:Bot,event:Event,state:dict)</span>:</span></span><br><span class="line">    img_url=(<span class="keyword">await</span> askjson.get_url())</span><br><span class="line">    <span class="keyword">if</span> img_url:</span><br><span class="line">        <span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url[<span class="string">"imageUrl"</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        logger.info(<span class="string">'获取时出现错误'</span>)</span><br></pre></td></tr></table></figure><ul><li>第2行导入的<code>on_command</code> 注册一个消息类型的命令处理器，也就是说，让机器人识别你的命令需要用到他。<code>logger</code>是nb 日志记录器对象。详见： <a href="https://v2.nonebot.dev/api/log.html#logger" target="_blank" rel="external nofollow noopener noreferrer">NoneBot.log 模块</a></li></ul><ul><li><p>第7行中的写法中：</p><ol><li><code>60s</code>表示命令名</li><li><code>aliases</code> 表示命令别名，即 <code>60s</code>、<code>早报</code>、<code>六十</code> 都会响应这个事件</li><li><code>priority</code>表示优先级，数值越小越优先</li></ol></li><li><p>第8行，紧接着<code>@sixty.handle()</code> sixty被事件响应器的装饰器装饰从而成为事件响应器的事件处理函数,<code>handle()</code>是简单的为事件响应器添加一个事件处理函数，这个函数将会在上一个处理函数正常返回执行完毕后立即执行。</p></li></ul><p><strong>事件处理函数中，除<code>bot</code>外都是可选的</strong></p><ul><li><p>第10行调用我们编写的函数获取到链接，12行中<code>send()</code>函数根据<code>event</code>向触发事件的主体发送消息。<a href="https://v2.nonebot.dev/2.0.0a15/api/adapters/ding.html#async-send-event-message-at-sender-false-webhook-none-secret-none-kwargs" target="_blank" rel="external nofollow noopener noreferrer">点我查看参数</a> </p><p>  我们在注册事件时传入了Event故这里可以直接<code>sixty.send(message=xxx)</code>,我们也可以：<code>bot.send(event=Event,message=xxx)</code></p><p>其中<code>message</code>参数是我们要发送的消息，可以是纯文本 <code>message=&quot;你好&quot;</code> ，这里使用的 <code>MessageSegment</code> 是nb对cq协议的适配，可用于发送CQ码等（个人理解），即:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><p>  等价于</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure><ul><li><p>如果你要发送文本+图片，如下写法皆可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=<span class="string">"今日早报"</span>+MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"text"</span>: <span class="string">"今日早报"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>现在，运行nb，向它发送<code>早报</code>看会发生什么  </p>  <p style="text-align:center;">  <a href="https://cdn.yzyyz.top/nonebot/60.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/60.png"></a> </p> <p>  成了，此时你将在nb日志界面看到</p>   <p style="text-align:center;">   <a href="https://cdn.yzyyz.top/nonebot/lognb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/lognb.png"></a></p>   <p>  其中包含了：</p><ul><li><p>消息id  <code>-765866496</code>,</p></li><li><p>消息来源 <code>1796031384</code></p></li><li><p>消息内容 <code>早报</code></p></li><li><p>事件被那个插件的Matcher处理了</p><p>在cq的日志界面看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/logcq.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logcq.png"></a></p>  <p>一般情况下，使用小号来登录cq作为机器人，在发送群聊消息时，可能会出现:</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/fk.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/fk.png"></a></p>  这种情况我们称之为 `喜报`<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb.png"></a></p>  若要解决这个问题，我的建议是：看脸。 你可以使用此账号挂在cq一段时间，挂的时间真得看脸，我的号就风控过一次，几分钟就好了；或者重启cq试试。还有一种情况是：<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb2.png"></a></p>显而易见，你的账号被冻结了，我相信，屏幕前的您能收购鹅厂，您肯定不会让上述情况发生的，对吧（确信）<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb3.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb3.png"></a></p></li></ul></li><li><p>tips:发送本地图片：</p><ul><li><p>利用cq+nb作为机器人发送本地图片时，若使用相对路径，要记得 路径是相对cq的 而不是相对nb项目的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(<span class="string">"file:///路径"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: <span class="string">"file:///路径"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>其他</strong></p><p>官方在这里使用 <code>pydantic</code> 库对插件进行配置操作 ：<a href="https://v2.nonebot.dev/guide/creating-a-plugin.html#%E6%8E%A8%E8%8D%90%E7%BB%93%E6%9E%84-%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83" target="_blank" rel="external nofollow noopener noreferrer">点击查看</a> 。这里暂时用不到，有需要请阅读官方文档。</p><p><code>2021年12月25日00:40:40</code>待续&amp;考试加油</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;width=200px&quot;&gt;
    &lt;a href=&quot;https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;nonebot&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/nonebot/logo.png&quot; style=&quot;width:200px&quot;&gt;&lt;/a&gt;&lt;br&gt;QQ机器人保姆级平民搭建方法&lt;br&gt; &lt;font color=&quot;red&quot;&gt;如果你仅想使用python实现机器人的功能而不考虑其他的(黑产用途、手搓轮子之类的)，请继续阅读&lt;br&gt;如果不是 那你完全没必要读下去&lt;br&gt;如果在阅读时发现了我的错误 烦请在&lt;a href=&quot;#comments&quot;&gt;评论区&lt;/a&gt;提出&lt;br&gt;本人技术不佳 还希望来访大佬指教&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="机器人" scheme="https://yzyyz.top/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>森林服务器提示forest server does not seem to be set up correctly</title>
    <link href="https://yzyyz.top/archives/47744284.html"/>
    <id>https://yzyyz.top/archives/47744284.html</id>
    <published>2021-11-28T11:38:21.000Z</published>
    <updated>2021-12-20T04:59:32.707Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://cdn.yzyyz.top/fores.webp" alt="头部大图"></p><a id="more"></a><p>  最近steam促销，TheForest（迷失森林）降价于是就入了，其实是益多送的（我买完他又吧钱转给我了，我也没客气/滑稽）<img src="https://api.isoyu.com/uploads/ARU/GIF_S/0180.gif" style="    margin: 0;    display: inline;">入完之后舍友鑫源也入了，联机时出现了掉线的情况，让之前的辛苦“付之一掉线”…<br>  转念我就趁Cloudcone黑五大促买了个2H2G的VPS，结果习惯了镜像又选的Linux，linux无法开Forest的服务器（有大神用wine成功过，我学不会），rebuild只能在不同linux之间切换，鼓捣了一天也没弄成。<br>  最后就在自己电脑上开吧，反正就我俩玩，（有公网ip或内网穿透也可外网访问）。<br><strong>开服教程</strong>：<a href="https://www.bilibili.com/read/cv2135043" target="_blank" rel="external nofollow noopener noreferrer" title="The Forest / 迷失森林 | 服务器搭建参考">https://www.bilibili.com/read/cv2135043</a></p><hr><p><img src="https://cdn.yzyyz.top/forest1.png" alt="出现错误"></p><p>  开完后发现鑫源能进，而我进去显示<code>forest server does not seem to be set up correctly</code>。也是花了很长时间都没解决，最后谷歌了一下，找到了一篇老外的帖子：<br><a href="https://www.reddit.com/r/TheForest/comments/a7757z/returning_to_the_forest_cant_get_my_dedicated/" target="_blank" rel="external nofollow noopener noreferrer" title="Returning to The Forest, can&#39;t get my dedicated server up and running again">https://www.reddit.com/r/TheForest/comments/a7757z/returning_to_the_forest_cant_get_my_dedicated/</a><br>  按照评论区老哥的话去试了一下，关掉了我的<code>virtual</code>网络接口，结果就豁然开朗了！</p><blockquote><p>I had such a message, and I noticed also that the IP displayed when joining the server was not matching the IP I had on my host machine.Turns out, that writing the internal IP on the config file is not enough. It was automatically picking up another IP from a virtual network card (bug that ignores the config?).<br>So, in Windows, I disabled all network interfaces except the physical cabled one. From that point on I was able to connect.<br>TLDR:<br>1 - Double check what internal IP your server currently has.<br>2 - Make sure that the internal IP your server has is matching what is written on the server.cfg file.<br>3 - Make sure you have a manual/fixed IP on your server (otherwise it might change at some point in the future).<br>4 - In Windows (of the server), disable all other network interfaces (virtual or otherwise) apart from the one that has the desired IP.<br>Good luck.</p></blockquote><p>最后附鑫源性感黑丝：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/forestxy.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="forest"><img src="https://cdn.yzyyz.top/forestxy.png"></a></p><p><code>视频经过压缩画质不太清晰</code></p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#3898FC","video":{"url":"https://cdn.yzyyz.top/TheForest.mp4","pic":"https://cdn.yzyyz.top/forestxy.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn.yzyyz.top/fores.webp&quot; alt=&quot;头部大图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="游戏" scheme="https://yzyyz.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取杨村近十年天气数据</title>
    <link href="https://yzyyz.top/archives/4e979541.html"/>
    <id>https://yzyyz.top/archives/4e979541.html</id>
    <published>2021-10-12T06:00:31.000Z</published>
    <updated>2022-08-17T13:23:34.361Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>杨村（杨陵）天气愈发寒冷了，以至于今天已经穿上了保暖裤[捂脸]，凭感觉来说是比去年冷的，于是就想爬一下历史的天气数据，再进行可视化（零上温度）。</p><h1 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">snapshot_selenium&#x3D;&#x3D;0.0.2</span><br><span class="line">requests&#x3D;&#x3D;2.26.0</span><br><span class="line">pyecharts&#x3D;&#x3D;1.9.0</span><br><span class="line">beautifulsoup4&#x3D;&#x3D;4.10.0</span><br></pre></td></tr></table></figure><ul><li>项目地址：<a href="https://github.com/yzyyz1387/tianqi" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/tianqi</a></li></ul><h1 id="多线程-th-py："><a href="#多线程-th-py：" class="headerlink" title="多线程 th.py："></a>多线程 <code>th.py</code>：</h1><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tianqi</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Line,Page</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_th</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> tianqi.urls:</span><br><span class="line">        line=tianqi.draw(url)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multi_th</span><span class="params">()</span>:</span></span><br><span class="line">    ths=[]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> tianqi.urls:</span><br><span class="line">        ths.append(threading.Thread(target=tianqi.draw,args=(url,)))</span><br><span class="line">    <span class="keyword">for</span> th <span class="keyword">in</span> ths:</span><br><span class="line">        th.start()</span><br><span class="line">    <span class="keyword">for</span> th <span class="keyword">in</span> ths:</span><br><span class="line">        th.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># start = time.time()</span></span><br><span class="line">    <span class="comment"># single_th()</span></span><br><span class="line">    <span class="comment"># end = time.time()</span></span><br><span class="line">    <span class="comment"># print('Cost &#123;&#125; seconds'.format((end - start) / 5))</span></span><br><span class="line"></span><br><span class="line">    start = time.time()</span><br><span class="line">    multi_th()</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(<span class="string">'Cost &#123;&#125; seconds'</span>.format((end - start) / <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h1 id="功能实现tianqi-py："><a href="#功能实现tianqi-py：" class="headerlink" title="功能实现tianqi.py："></a>功能实现<code>tianqi.py</code>：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Line,Page</span><br><span class="line"><span class="keyword">import</span> pyecharts.options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.render <span class="keyword">import</span> make_snapshot</span><br><span class="line"><span class="keyword">from</span> snapshot_selenium <span class="keyword">import</span> snapshot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.tianqihoubao.com/lishi/yangling/month/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ask_url</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWe bKit/537.36 (KHTML, like Gecko) Chrome/93.0.4544.0 Safari/537.36 Edg/93.0.933.1"</span>,</span><br><span class="line">        &#125;  <span class="comment"># 头部信息用户代理</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        html = requests.get(url,headers=headers).text</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        print(err)</span><br><span class="line">        html=err</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyze_html</span><span class="params">(url)</span>:</span></span><br><span class="line">    datalist = []</span><br><span class="line">    html =ask_url(url)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">'table'</span>, class_=<span class="string">"b"</span>):</span><br><span class="line">        item  = str(item)</span><br><span class="line">        datalist.append(item.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>))</span><br><span class="line">    weatherlist = datalist[<span class="number">0</span>].split(<span class="string">'&lt;/tr&gt;'</span>)</span><br><span class="line">    weatherlist.pop(<span class="number">0</span>)</span><br><span class="line">    weatherlist.pop(len(weatherlist)<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> weatherlist</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(url)</span>:</span></span><br><span class="line">    list=analyze_html(url)</span><br><span class="line">    temp_dic=&#123;&#125;</span><br><span class="line">    <span class="comment"># 日期</span></span><br><span class="line">    date_list=[]</span><br><span class="line">    <span class="comment"># 白天温度</span></span><br><span class="line">    temp_day=[]</span><br><span class="line">    <span class="comment"># 夜晚温度</span></span><br><span class="line">    temp_night=[]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">        find_temp=re.compile(<span class="string">'[\u4e00-\u9fa5]&lt;/td&gt;&lt;td&gt;(.*?)℃&lt;/td&gt;&lt;td&gt;'</span>)</span><br><span class="line">        find_date=re.compile(<span class="string">'[\u4e00-\u9fa5]"&gt;(.*?)日&lt;/a&gt;'</span>)</span><br><span class="line">        find_year=re.compile(<span class="string">'[\u4e00-\u9fa5]"&gt;(.*?)月'</span>)</span><br><span class="line">        date=re.findall(find_date,item)</span><br><span class="line">        temp=re.findall(find_temp,item)</span><br><span class="line">        year=re.findall(find_year,item)[<span class="number">0</span>]</span><br><span class="line">        temp_dic[date[<span class="number">0</span>]]=temp[<span class="number">0</span>].replace(<span class="string">'℃'</span>,<span class="string">''</span>)</span><br><span class="line">        date_list.append(date[<span class="number">0</span>])</span><br><span class="line">        temp_sum=temp[<span class="number">0</span>].replace(<span class="string">'℃'</span>,<span class="string">''</span>).split(<span class="string">'/'</span>)</span><br><span class="line">        <span class="comment">#有些数据不全，没有白天的温度或者晚上的温度</span></span><br><span class="line">        <span class="keyword">if</span> temp_sum[<span class="number">0</span>]==<span class="string">''</span>:</span><br><span class="line">            print(<span class="string">'0空'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp_day.append(int(temp_sum[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">if</span> temp_sum[<span class="number">1</span>]==<span class="string">''</span>:</span><br><span class="line">            print(<span class="string">'1空'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp_night.append(int(temp_sum[<span class="number">1</span>]))</span><br><span class="line">    <span class="comment">#24H温度列表</span></span><br><span class="line">    all_temp=(temp_day+temp_night)</span><br><span class="line">    print(all_temp)</span><br><span class="line">    <span class="comment">#最高温</span></span><br><span class="line">    max_temp=int(max(all_temp))</span><br><span class="line">    <span class="comment">#最低温</span></span><br><span class="line">    min_temp=int(min(all_temp))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(temp_dic)</span></span><br><span class="line">    <span class="comment"># print(temp_day)</span></span><br><span class="line">    <span class="comment"># print(len(temp_day))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘图</span></span><br><span class="line">    line1=(</span><br><span class="line">        Line(init_opts=opts.InitOpts(bg_color=<span class="string">'#ffffff'</span>)) <span class="comment"># 生成line类型图表</span></span><br><span class="line">        .add_xaxis(date_list)</span><br><span class="line">        .add_yaxis(<span class="string">'白天'</span>,temp_day,is_smooth=<span class="literal">True</span>,</span><br><span class="line">                   markline_opts=opts.MarkLineOpts(</span><br><span class="line">                       data=[</span><br><span class="line"></span><br><span class="line">                           opts.MarkLineItem(symbol=<span class="string">"none"</span>, x=<span class="string">"90%"</span>, y=<span class="string">"max"</span>),</span><br><span class="line">                           opts.MarkLineItem(symbol=<span class="string">"circle"</span>, type_=<span class="string">"max"</span>, name=<span class="string">"最高点"</span>),</span><br><span class="line">                       ]</span><br><span class="line">                   ),</span><br><span class="line">                   )</span><br><span class="line">        .add_yaxis(<span class="string">'夜晚'</span>,temp_night,is_smooth=<span class="literal">True</span>,</span><br><span class="line">                   markline_opts=opts.MarkLineOpts(</span><br><span class="line">                       data=[</span><br><span class="line">                           opts.MarkLineItem(type_=<span class="string">"min"</span>, name=<span class="string">"最低点"</span>),</span><br><span class="line">                           opts.MarkLineItem(symbol=<span class="string">"none"</span>, x=<span class="string">"90%"</span>, y=<span class="string">"max"</span>),</span><br><span class="line">                       ]</span><br><span class="line">                   ),</span><br><span class="line">                   )</span><br><span class="line">        .set_global_opts(</span><br><span class="line">            legend_opts=opts.LegendOpts(pos_right=<span class="number">0</span>),</span><br><span class="line">            title_opts=opts.TitleOpts(title=<span class="string">'%s月温度情况'</span>%year,subtitle=<span class="string">'24H最高温度%s℃,最低温度%s℃\n部分数据存在空值'</span>%(max_temp,min_temp),pos_left=<span class="string">'center'</span>,),</span><br><span class="line">            xaxis_opts=opts.AxisOpts(</span><br><span class="line">                axistick_opts=opts.AxisTickOpts(is_align_with_label=<span class="literal">True</span>),</span><br><span class="line">                is_scale=<span class="literal">False</span>,</span><br><span class="line">                boundary_gap=<span class="literal">False</span>,</span><br><span class="line">                name=<span class="string">"日期"</span>,</span><br><span class="line">            ),</span><br><span class="line">            yaxis_opts=opts.AxisOpts(name=<span class="string">"温度(℃)"</span>),</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">make_snapshot(snapshot, line1.render(), <span class="string">"%s.png"</span>%year)</span><br><span class="line">    <span class="keyword">return</span> line1</span><br><span class="line">    <span class="comment"># line1.render('pyecharts-line.html') # 生成网页文件</span></span><br><span class="line">    <span class="comment"># make_snapshot(snapshot, line1.render(), "%s.png"%year) #渲染图片</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行此文件可将所有图表渲染在一个html文件中</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line">    start = time()</span><br><span class="line">    page = Page()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">        askurl=url+str(<span class="number">2010</span>+i+<span class="number">1</span>)+<span class="string">'10.html'</span></span><br><span class="line">        print(askurl)</span><br><span class="line">        line=draw(askurl)</span><br><span class="line">        page.add(line)</span><br><span class="line">    page.render(<span class="string">"test.html"</span>)</span><br><span class="line">    end = time()</span><br><span class="line">    print(<span class="string">'Cost &#123;&#125; seconds'</span>.format((end - start) / <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h1 id="爬取的部分数据："><a href="#爬取的部分数据：" class="headerlink" title="爬取的部分数据："></a>爬取的部分数据：</h1> <script type="text/javascript" src="https://assets.pyecharts.org/assets/echarts.min.js"></script>                <div id="e87e1fbc35c747ea8f13b7d8de2cba56" class="chart-container" style="width:auto; height:500px;"></div>    <script>var chart_e87e1fbc35c747ea8f13b7d8de2cba56=echarts.init(document.getElementById("e87e1fbc35c747ea8f13b7d8de2cba56"),"white",{renderer:"canvas"});var option_e87e1fbc35c747ea8f13b7d8de2cba56={"backgroundColor":"#ffffff","animation":true,"animationThreshold":2000,"animationDuration":1000,"animationEasing":"cubicOut","animationDelay":0,"animationDurationUpdate":300,"animationEasingUpdate":"cubicOut","animationDelayUpdate":0,"color":["#c23531","#2f4554","#61a0a8","#d48265","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3","#f05b72","#ef5b9c","#f47920","#905a3d","#fab27b","#2a5caa","#444693","#726930","#b2d235","#6d8346","#ac6767","#1d953f","#6950a1","#918597"],"series":[{"type":"line","name":"\u767d\u5929","connectNulls":false,"symbolSize":4,"showSymbol":true,"smooth":true,"clip":true,"step":false,"data":[["2011\u5e7410\u670801",22],["2011\u5e7410\u670802",18],["2011\u5e7410\u670803",16],["2011\u5e7410\u670804",19],["2011\u5e7410\u670805",23],["2011\u5e7410\u670806",24],["2011\u5e7410\u670807",22],["2011\u5e7410\u670808",22],["2011\u5e7410\u670809",21],["2011\u5e7410\u670810",19],["2011\u5e7410\u670811",17],["2011\u5e7410\u670812",17],["2011\u5e7410\u670813",21],["2011\u5e7410\u670814",23],["2011\u5e7410\u670815",22],["2011\u5e7410\u670816",22],["2011\u5e7410\u670817",23],["2011\u5e7410\u670818",22],["2011\u5e7410\u670819",17],["2011\u5e7410\u670820",19],["2011\u5e7410\u670821",19],["2011\u5e7410\u670822",15],["2011\u5e7410\u670823",14],["2011\u5e7410\u670824",15],["2011\u5e7410\u670825",14],["2011\u5e7410\u670826",11],["2011\u5e7410\u670827",14],["2011\u5e7410\u670828",16],["2011\u5e7410\u670829",17],["2011\u5e7410\u670830",15],["2011\u5e7410\u670831",14]],"hoverAnimation":true,"label":{"show":true,"position":"top","margin":8},"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"},"areaStyle":{"opacity":0},"markLine":{"silent":false,"precision":2,"label":{"show":true,"position":"top","margin":8},"data":[{"xAxis":"90%","yAxis":"max","symbol":"none"},{"name":"\u6700\u9ad8\u70b9","type":"max","symbol":"circle"}]},"zlevel":0,"z":0},{"type":"line","name":"\u591c\u665a","connectNulls":false,"symbolSize":4,"showSymbol":true,"smooth":true,"clip":true,"step":false,"data":[["2011\u5e7410\u670801",14],["2011\u5e7410\u670802",13],["2011\u5e7410\u670803",12],["2011\u5e7410\u670804",11],["2011\u5e7410\u670805",10],["2011\u5e7410\u670806",10],["2011\u5e7410\u670807",10],["2011\u5e7410\u670808",13],["2011\u5e7410\u670809",14],["2011\u5e7410\u670810",14],["2011\u5e7410\u670811",13],["2011\u5e7410\u670812",12],["2011\u5e7410\u670813",9],["2011\u5e7410\u670814",7],["2011\u5e7410\u670815",7],["2011\u5e7410\u670816",9],["2011\u5e7410\u670817",8],["2011\u5e7410\u670818",10],["2011\u5e7410\u670819",9],["2011\u5e7410\u670820",11],["2011\u5e7410\u670821",11],["2011\u5e7410\u670822",10],["2011\u5e7410\u670823",10],["2011\u5e7410\u670824",10],["2011\u5e7410\u670825",7],["2011\u5e7410\u670826",9],["2011\u5e7410\u670827",7],["2011\u5e7410\u670828",7],["2011\u5e7410\u670829",7],["2011\u5e7410\u670830",7],["2011\u5e7410\u670831",9]],"hoverAnimation":true,"label":{"show":true,"position":"top","margin":8},"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"},"areaStyle":{"opacity":0},"markLine":{"silent":false,"precision":2,"label":{"show":true,"position":"top","margin":8},"data":[{"name":"\u6700\u4f4e\u70b9","type":"min"},{"xAxis":"90%","yAxis":"max","symbol":"none"}]},"zlevel":0,"z":0}],"legend":[{"data":["\u767d\u5929","\u591c\u665a"],"selected":{"\u767d\u5929":true,"\u591c\u665a":true},"show":true,"right":0,"padding":5,"itemGap":10,"itemWidth":25,"itemHeight":14}],"tooltip":{"show":true,"trigger":"item","triggerOn":"mousemove|click","axisPointer":{"type":"line"},"showContent":true,"alwaysShowContent":false,"showDelay":0,"hideDelay":100,"textStyle":{"fontSize":14},"borderWidth":0,"padding":5},"xAxis":[{"name":"\u65e5\u671f","show":true,"scale":false,"nameLocation":"end","nameGap":15,"gridIndex":0,"axisTick":{"show":true,"alignWithLabel":true,"inside":false},"inverse":false,"offset":0,"splitNumber":5,"boundaryGap":false,"minInterval":0,"splitLine":{"show":false,"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"}},"data":["2011\u5e7410\u670801","2011\u5e7410\u670802","2011\u5e7410\u670803","2011\u5e7410\u670804","2011\u5e7410\u670805","2011\u5e7410\u670806","2011\u5e7410\u670807","2011\u5e7410\u670808","2011\u5e7410\u670809","2011\u5e7410\u670810","2011\u5e7410\u670811","2011\u5e7410\u670812","2011\u5e7410\u670813","2011\u5e7410\u670814","2011\u5e7410\u670815","2011\u5e7410\u670816","2011\u5e7410\u670817","2011\u5e7410\u670818","2011\u5e7410\u670819","2011\u5e7410\u670820","2011\u5e7410\u670821","2011\u5e7410\u670822","2011\u5e7410\u670823","2011\u5e7410\u670824","2011\u5e7410\u670825","2011\u5e7410\u670826","2011\u5e7410\u670827","2011\u5e7410\u670828","2011\u5e7410\u670829","2011\u5e7410\u670830","2011\u5e7410\u670831"]}],"yAxis":[{"name":"\u6e29\u5ea6(\u2103)","show":true,"scale":false,"nameLocation":"end","nameGap":15,"gridIndex":0,"inverse":false,"offset":0,"splitNumber":5,"minInterval":0,"splitLine":{"show":false,"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"}}}],"title":[{"text":"2011\u5e7410\u6708\u6e29\u5ea6\u60c5\u51b5","subtext":"24H\u6700\u9ad8\u6e29\u5ea624\u2103,\u6700\u4f4e\u6e29\u5ea67\u2103\n\u90e8\u5206\u6570\u636e\u5b58\u5728\u7a7a\u503c","left":"center","padding":5,"itemGap":10}]};chart_e87e1fbc35c747ea8f13b7d8de2cba56.setOption(option_e87e1fbc35c747ea8f13b7d8de2cba56);    </script><p>实现比较简单，访问网页获取数据<code>ask_url()</code>，再对数据进行提取分析<code>analyze_html()</code>,最后渲染网页或渲染图片<code>draw</code>。</p><p>值得一提的是，本次使用了<a href="https://pyecharts.org/#/zh-cn/" target="_blank" rel="external nofollow noopener noreferrer">pyecharts</a>，跟此前我在学Flask与数据可视化中的<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="external nofollow noopener noreferrer">ECharts</a>相似，其官方文档写到：<code>当数据分析遇上数据可视化时，pyecharts 诞生了</code>。</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/11-21mo10temp.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="py"><img src="https://cdn.yzyyz.top/11-21mo10temp.png"></a></p><p>从折线堆叠图中可以看到，（我也不知道能看出来啥）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;杨村（杨陵）天气愈发寒冷了，以至于今天已经穿上了保暖裤[捂脸]，凭感觉来说是比去年冷的，于是就想爬一下历史的天气数据，再进行可视化（零上温度）。&lt;/p&gt;
&lt;h1 id=&quot;requirements-txt&quot;&gt;&lt;a href=&quot;#requirements-txt&quot; class=&quot;headerlink&quot; title=&quot;requirements.txt&quot;&gt;&lt;/a&gt;requirements.txt&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;snapshot_selenium&amp;#x3D;&amp;#x3D;0.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;requests&amp;#x3D;&amp;#x3D;2.26.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pyecharts&amp;#x3D;&amp;#x3D;1.9.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;beautifulsoup4&amp;#x3D;&amp;#x3D;4.10.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;项目地址：&lt;a href=&quot;https://github.com/yzyyz1387/tianqi&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://github.com/yzyyz1387/tianqi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;多线程-th-py：&quot;&gt;&lt;a href=&quot;#多线程-th-py：&quot; class=&quot;headerlink&quot; title=&quot;多线程 th.py：&quot;&gt;&lt;/a&gt;多线程 &lt;code&gt;th.py&lt;/code&gt;：&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>基于Flask框架的随机文章网站</title>
    <link href="https://yzyyz.top/archives/278293dc.html"/>
    <id>https://yzyyz.top/archives/278293dc.html</id>
    <published>2021-08-27T07:20:47.000Z</published>
    <updated>2021-08-27T07:34:53.356Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>项目地址：<a href="https://github.com/yzyyz1387/storys/" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/storys/</a></li><li>示例地址：<a href="https://story.nwafu.ac.cn/" target="_blank" rel="external nofollow noopener noreferrer">https://story.nwafu.ac.cn/</a></li></ul><a id="more"></a><ul><li>关于页面：<a href="https://story.nwafu.ac.cn/about" target="_blank" rel="external nofollow noopener noreferrer">https://story.nwafu.ac.cn/about</a></li><li>网站背景图片来自<a href="https://www.bing.com/?mkt=zh-CN" target="_blank" rel="external nofollow noopener noreferrer">Bing每日图片</a></li><li>故事内容所用字体为<a href="http://www.tsanger.cn/" target="_blank" rel="external nofollow noopener noreferrer">苍耳今楷</a></li><li>创建设想本站故事多与感情相关，也会收录其他内容</li><li>若所用内容涉及侵权，请联系我们删除内容</li><li>用户利用简短的琐碎时间即可完成一次阅读，珍惜美好时光，改善阅读习惯</li><li>联系我们： <a href="mailto:youzyyz1384@qq.com" rel="external nofollow noopener noreferrer" target="_blank">youzyyz1384@qq.com</a></li><li>文章投稿：<a href="https://github.com/yzyyz1387/storys/issues" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/storys/issues</a></li></ul><p>每次刷新网页都会随机一个故事，故事储存在根目录<code>story</code>文件下，每个故事格式为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">!story</span><br><span class="line">【标题】</span><br><span class="line">【作者】</span><br><span class="line">【来源链接】</span><br><span class="line">【来源】</span><br><span class="line">【内容】</span><br><span class="line">story!</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;项目地址：&lt;a href=&quot;https://github.com/yzyyz1387/storys/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://github.com/yzyyz1387/storys/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;示例地址：&lt;a href=&quot;https://story.nwafu.ac.cn/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://story.nwafu.ac.cn/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
</feed>
