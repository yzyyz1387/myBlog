<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>稚昂长</title>
  
  <subtitle>幼稚园园长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yzyyz.top/"/>
  <updated>2022-05-28T16:22:10.343Z</updated>
  <id>https://yzyyz.top/</id>
  
  <author>
    <name>幼稚园园长</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>当那一天来临</title>
    <link href="https://yzyyz.top/archives/81192.html"/>
    <id>https://yzyyz.top/archives/81192.html</id>
    <published>2022-05-05T18:58:09.000Z</published>
    <updated>2022-05-28T16:22:10.343Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img%2F81192.jpeg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="81192"><img src="https://cdn.yzyyz.top/img%2F81192.jpeg"></a></p><hr><br><div style="text-"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&id=281979&auto=0&height=66"></iframe><p style="text-align: center;">这是一个晴朗的早晨，鸽哨声伴着起床号音……  </p><a id="more"></a><hr><p>《当那一天来临》，是我比较喜欢的一首军歌，即使词还没记下。</p><p>这是个深夜，又想到了所谓「军人情结」，我确实是有的。提起军人会让你想到什么？强者、帅气、有组织有纪律的感觉。我觉得这可能是刻在某些人DNA里的，不然我真不好解释为什么我在山里的时候砍根小竹子背着齐步走，或者为什么小学毕业初中那会儿拉着朋友玩真人「枪战」，又或者为什么我喜欢玩FPS游戏……大一军训，印象最深的是我们营的汇报项目，反恐演练，我有幸作为乘坐猛虎车的突击队队长2，手持03式突破窗户后中弹牺牲的就是我[捂脸]</p><p>我敢说我在军训中每一个军礼都是带着敬意的，每一个动作我都认真做了，在学校领导讲完话问我们「准备好了吗？」别人说「准备好了」的时候而我喊出「时刻准备着」，因为这些时候是我离部队、离军人最近的时候。</p><p>我大抵是不会再有机会了。</p><p>大一军训结束，我给我们的连长小乔写了封信，用纸折了个信封，再贴上学院的院徽（仪式感还是很强的），内容记不清了，大概是敬佩他感谢他夸夸他、敬畏军人和部队什么的。信当然是以连队的名义干了我想干的，最后让大家都签上名，在他们要走那天早上，我们正准备集合，我双手递过信，并敬一个军礼，那是我见他最后一面了，那天在项目结束后，他们就在主席台上列队，敬礼，然后走了，当时那氛围我都快落泪了，几秒后全场都在鼓掌，我在想他们为什么不回礼，如果是那样的话便更好了。<br>当然除了小乔，我们的营长，一个瘦高个；还有带大方阵训练的「卧槽哥」，还有一个教官忘了名字了，样子还记得:黑黑的，嘴唇比较厚，大概是，隐约记得貌似是女生的教官吧。他们我都记得，现在想想这么久了还有印象也挺不错。</p><p>军人，这个词在大一军训结束后就不仅仅是军人了，小乔思想教育搞得好啊。他问我们愿不愿意为战友挡子弹，第一反应大家都是愿意，而后他让我们闭眼，给我们模拟战场的环境，前面是敌人后面是我们的家人，当子弹飞过来你愿不愿意为战友挡子弹，你还有家人，还有爱的人，你们扛着枪上去，子弹飞过来打人身上，人就没了，不是游戏里挨两下还活蹦乱跳的……很多人犹豫了，我可能比较固执，我愿意。当子弹飞过来，我想我必然会为我的战友挡子弹的。</p><p>除了这次「思想教育」，后来通过影视片，通过一些文章等的内容，对这个词有了更深的见解，这让我愈发的想成为他们的一员了。</p><p>我大抵是不会再有机会了，我说的不是军训。</p><p>2020年在家上网课的那段时间，那是我最想当兵的时候，很多消息我都打听好了，就等着适时报名了。可能去了也不见得能过但是去和不去是不一样的，可惜到现在还没去，也不会再去了，对我而言算是一个缺憾。</p><p>偶尔会想到「去了后悔两年不去后悔一辈子」</p><p>当那一天来临，我会欣喜若狂，我为加入他们而骄傲<br>当那一天来临，我会刻苦训练，我为成为他们而自豪<br>当那一天来临，我会毫不犹豫，我为保护他们而微笑<br>当那一天来临</p><p><code>2022-05-06  02:58</code></p></div>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img%2F81192.jpeg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;81192&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img%2F81192.jpeg&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;hr&gt;&lt;br&gt;

&lt;div style=&quot;text-&quot;&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;100%&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=281979&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;这是一个晴朗的早晨，鸽哨声伴着起床号音……  &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>记一次B站播放过10万</title>
    <link href="https://yzyyz.top/archives/becb15dd.html"/>
    <id>https://yzyyz.top/archives/becb15dd.html</id>
    <published>2022-04-23T01:52:48.000Z</published>
    <updated>2022-04-23T01:55:37.750Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="position: relative; padding: 30% 45%;"><iframe src="//player.bilibili.com/player.html?aid=810534277&bvid=BV1v34y1x7C4&cid=572428354&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="UP" scheme="https://yzyyz.top/tags/UP/"/>
    
      <category term="资源" scheme="https://yzyyz.top/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>资源链接汇总</title>
    <link href="https://yzyyz.top/archives/4ed97ea8.html"/>
    <id>https://yzyyz.top/archives/4ed97ea8.html</id>
    <published>2022-04-23T01:23:28.000Z</published>
    <updated>2022-04-23T02:00:11.770Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="lep"> 解放双腿？校园跑步路线模拟刷圈教程</h3><p>link：<a href="https://www.bilibili.com/video/BV1v34y1x7C4/" target="_blank" rel="external nofollow noopener noreferrer">https://www.bilibili.com/video/BV1v34y1x7C4/</a></p><ul><li>三个软件：<a href="https://wwp.lanzouy.com/i1zoO02xummf" target="_blank" rel="external nofollow noopener noreferrer">蓝奏云</a></li><li>vmos：<a href="https://wwp.lanzouy.com/ia7Ui02xupcd" target="_blank" rel="external nofollow noopener noreferrer">蓝奏云</a><br>密码:yzyyz</li><li>MT管理器：<a href="http://m.itmop.com/downinfo/245823.html" target="_blank" rel="external nofollow noopener noreferrer">在线下载</a>  <br><br></li></ul><hr><h3 id="lep">懒人福音：视频跳过神器</h3><p>link: <a href="https://space.bilibili.com/361119581" target="_blank" rel="external nofollow noopener noreferrer">https://space.bilibili.com/361119581</a></p><ul><li><a href="https://wwp.lanzouy.com/iarzsch" target="_blank" rel="external nofollow noopener noreferrer">Tampermonkey 油猴</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/381682-html5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A2%9E%E5%BC%BA%E8%84%9A%E6%9C%AC" target="_blank" rel="external nofollow noopener noreferrer">HTML5视频播放器增强脚本</a></li><li><a href="http://via-app.cn" target="_blank" rel="external nofollow noopener noreferrer">via-app</a></li><li><a href="http://via-app.cn/#/pluginDetail/26" target="_blank" rel="external nofollow noopener noreferrer">via 播放器增强</a>  <br><br></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="UP" scheme="https://yzyyz.top/tags/UP/"/>
    
      <category term="资源" scheme="https://yzyyz.top/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>保持清醒</title>
    <link href="https://yzyyz.top/archives/447f259f.html"/>
    <id>https://yzyyz.top/archives/447f259f.html</id>
    <published>2022-04-14T16:53:27.000Z</published>
    <updated>2022-05-06T02:26:13.298Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/20220415bcqx.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="bcqx"><img src="https://cdn.yzyyz.top/img/20220415bcqx.jpg"></a></p><hr><br>  &nbsp;&nbsp;最近一些事情闹的满城风雨，学校女寝楼进了个男扮女装的人，暂且称为人<a id="more"></a>，进入寝室翻箱倒柜，被发现后仓皇逃离。女生报警后，警方因未有物品被盗，也没有其他情况，转交给校保卫处处理，该宿舍楼管理员抱怨报警女生未上报就直接报警以及女生晚上睡觉为什么没栓门，女生导员问女生为什么要把事情闹大，并让女生删除各平台发布的相关内容（网传）。<p>  &nbsp;&nbsp;事发不久此事被挂在校园墙上，好友圈低年级的女生基本都在转，高年级的可能比较理性，也可能比较忙。朋友圈里，个别认识的女的几天后也在发。这类人表达的观点是：</p><ul><li>发生这样的事感到很恶心，作为女性应该发声</li><li>学校想吧事情压下去，并默不作声，不处理，不作为  </li></ul><p>&nbsp;&nbsp;而在较短时间后，几个大群里、校园墙上、微博上就都出现了这件事，群内、评论区「百家争鸣」，提及一些无从考证的事，甚至上升到所谓「女权」，刚好近期「极端女权」也沸沸扬扬的。</p><p>  &nbsp;&nbsp;关于此事，我想说的是：</p><ul><li>相信组织</li><li>保持理性</li><li>提升涵养</li><li>小心入侵      </li></ul><p>  &nbsp;&nbsp;首先试想，作为管理者，很大组织的管理者，你的组织发生了这样的事，你会怎么办？把事情压下去，让受害者受委屈；还是彻查此事，声张正义？如果你选择前者，那么很遗憾，你可能是少数的「坏人」，我相信学校会做后者。拿去年放假行程码的问题来说，学校是正常的在学生有需求的情况下，默默地去解决了问题，无声息的在放假前几天将证明材料发到学生手中，并联系运营商解决问题。而不是一些人想的，学校能办就不给办，反映的人多了没办法了才去解决。所以说，学校是值得信赖的，我的举例固然没什么说服力，但信不信由你。我总不能说学校是你在你们自己的转动下转动的，那不是顺其自然的事，而是在管理层的管理下运行的。故，我会选择相信组织。<br>  &nbsp;&nbsp;其次，能极大挑动你情绪的事，让你感到特别气愤、特别爽或者特别解气，都需要等一等，看清虚实、想一想发这条消息的人要达到什么目的，你的这种情绪会不会被人利用，再做判断。不同的情绪混在一起，才造就了平庸，和真实世界，如果什么消息只由一种情绪垄断，那可能是有人故意掩盖了什么。当然用这件事这样说是不到位的，这本是「如何识别假新闻」的观点，我这里断章取义了，单纯的学生还是受害者能掩盖什么。保持理性，把保持理性，还  是保持理性。<br>  &nbsp;&nbsp;再者，可能存在这样的「愣头青」们，我是说可能，并不是指谁，就是那些有点风吹草动就有「舌战群儒」的勇气的人，他们爱钻牛角尖、认为自己认为的、觉得有理声高的、优越感极强的、激进的人，我愿称他们为「愣头青」。他们要么是受过创，心理有问题，要么是压力大，要么是爱显摆，是老一辈人口中的「人来疯」，要么就是无聊。窃以为网络把这类人教坏了，带坏了，所谓人言可畏，0和1是可以杀人的。希望人们都能有自己的知识体系、思维体系、三观，遇事有自己客观的看法，不要做墙头草，被人当枪使。<br>  &nbsp;&nbsp;最后，关于「女权」，这么说吧，我觉得中国女性是好的，网上打拳的，很大部分屏幕后面都不一定是女的，它们发表挑动部分女性网民的言论，带节奏，扰团结，这背后极大可能就是政治，这是入侵。它们看到我们不稳定了，割裂了，就高兴了，达到目的了。认清现实吧<br>  &nbsp;&nbsp;保持清醒</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/20220415bcqx.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;bcqx&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/20220415bcqx.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;hr&gt;&lt;br&gt;
  &amp;nbsp;&amp;nbsp;最近一些事情闹的满城风雨，学校女寝楼进了个男扮女装的人，暂且称为人
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>山</title>
    <link href="https://yzyyz.top/archives/mountain.html"/>
    <id>https://yzyyz.top/archives/mountain.html</id>
    <published>2022-03-05T03:06:18.000Z</published>
    <updated>2022-04-14T17:01:12.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/psb_sxlj.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="mountain"><img src="https://cdn.yzyyz.top/img/psb_sxlj.jpg"></a></p><p>&nbsp;&nbsp;想找一个合适的意象来做标题，选了很多，什么小路、茅草、杏子、李子、水井啊诸如此类的……终究是太多了，干脆用山算了。<br>&nbsp;&nbsp;聊聊最近吧，最近，这是2022年的3月初，我感觉这个月我会很水逆。何出此言呢：</p><a id="more"></a><ul><li>时常感觉头晕</li><li>我们专业一周五天课，别人一周四节</li><li>跟班重修老师由于一些原因让我退课（好在教务处老师帮我选了重修班）</li><li>嘴上长了个痘，抠了几下，肿了一周</li><li>宿舍开始断电了  </li></ul><p>嗯，可以说是很倒霉的，好的方面：</p><ul><li><p>作息上比以前好了</p></li><li><p>确定了考研目标</p></li><li><p>春天来了  </p></li></ul><p>&nbsp;&nbsp;这种情况下的人半夜（12点）躺在床上会想什么？胡思乱想呗，跟平常一样。<br>&nbsp;&nbsp;我是喜欢写作的，小学到中学我的作文在班里经常会被念出来，明白什么意思了吧。大学以后不学语文了，写的就少了，博客算是主阵地，但毕竟是随笔，也有可能写出来没什么手法，没什么逻辑，写到某些地方会有一点小心思罢了。大学以后读的也少了，但其实我是很想读的，刚刚打开之前关注的公众号，点开一篇《来与回》，作者注的是牛大壮。<br>&nbsp;&nbsp;牛大壮，粗犷的名字，文笔倒挺细腻，看到「在大山里，集市是最美好的事了。不论老人还是小孩，更不用说男人和女人了……都充满了向往！」这句，思绪万千，久久不能回神。<br>&nbsp;&nbsp;这句话，不是说对与错，只是激起了我的共鸣。在大山里，集市是最美好的事了。三年级以前我也在大山里，那时可以说是个留守儿童，可能之前的文章里也提过，爸妈在外打工，这期间我在外婆家度过了一段时光，在奶奶家也度过了一段时光。<br>&nbsp;&nbsp;在外婆家那会儿，最喜欢的是用弯刀砍竹子玩，外婆家的小竹林是真绝，砍小竹子当抢，砍大柱子做弓；最怕的是路边各种落叶很多堆起来的地方，因为里面可能有蛇。在外婆家呀，娃哈哈和爽歪歪是少不了的，只记得我喝出来很多瓶子，最印象深刻的吃的有鸡爪、一种木头上长出的白色菌子、朋友家的油饼（方言好像叫油子，朋友们会走很远送到外婆家），小姨带回去的巧克力。  （还有大姨带回去的布鞋，隐约记得，不过不算吃的）<br>&nbsp;&nbsp;差点没收住，说太多了，关于赶集，不算去公社，外婆家赶集就是在「逢场」的时候（也就是赶场，赶集的意思）去镇上，山路很远，我应该只走过一次，记得走了很久，有一段路还特别陡，我那时候小，应该没觉得陡，忘记买了啥了，估计没有好吃的，所以没记住。好像一般都是外公去，背个背篓把要买的东西背回来。背篓我们叫背篼，都是自己编的，这下知道为啥外婆家有竹林了吧，用处大着呢。嗯现在想想，背着一背篓东西走那么远，外公是真的厉害，平时种的土豆，魔芋，玉米，啥不是用背篓背，那会外公还去外地下过煤矿呢。现在外公老了，上次去机场接他，他从出口出来，我见他佝偻着背，也或许是背了个迷彩的大背包的缘故，反正觉得他瘦小了很多，写到这儿鼻子有点酸，不过外公在我心中的形象就依然高大威猛啦。</p><p>(不得不中断了，改天继续写)</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/gm_home.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="mountain"><img src="https://cdn.yzyyz.top/img/gm_home.png"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/psb_sxlj.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;mountain&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/psb_sxlj.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;想找一个合适的意象来做标题，选了很多，什么小路、茅草、杏子、李子、水井啊诸如此类的……终究是太多了，干脆用山算了。&lt;br&gt;&amp;nbsp;&amp;nbsp;聊聊最近吧，最近，这是2022年的3月初，我感觉这个月我会很水逆。何出此言呢：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>新-基于Nonebot2和go-cqhttp的机器人搭建</title>
    <link href="https://yzyyz.top/archives/nb2b1.html"/>
    <id>https://yzyyz.top/archives/nb2b1.html</id>
    <published>2022-01-24T06:57:39.997Z</published>
    <updated>2022-05-06T08:28:54.222Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><p style="text-align:center;width=200px">    <a href="https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logo.png" style="width:200px"></a><br>QQ机器人保姆级平民搭建方法(新)<br> <font color="red">本文内容及部分所用图片来自上一篇教程，与文章内容可能有偏差但不影响部署<br>如果在阅读时发现了我的错误 烦请在<a href="#comments">评论区</a>提出<br>本人技术不佳 还希望来访大佬指教</font></p><a id="more"></a><h3 id="fo"> 写在前面</h3><p>nb2a16文章原址<a href="https://yzyyz.top/archives/nb2.html">基于Nonebot2和go-cqhttp的机器人搭建 | 稚昂长 (yzyyz.top)</a></p><h4 id="sum"> 概述</h4>本文将叙述如何在linux（deepin）下使用Nonebot2（下称nb）和go-cqhttp（下称gocq）创建QQ机器人<img src="https://api.isoyu.com/uploads/ARU/GIF_S/0540.gif" style="    margin: 0;    display: inline;">，若你想使用nb和gocq创建机器人，你需要：<ol><li>Python环境（3.7.3以上）</li><li>Python能力</li><li>读文档能力</li><li>Linux能力（部署于linux）</li><li>…</li></ol><p>windows下部署也是一样的，</p><h4 id="pre"> 准备 </h4> <p><strong>什么是nb？什么是gocq？</strong><br>关于这部分内容，你可以从他们的官网找到：  </p><blockquote><p>nb文档: <a href="https://v2.nonebot.dev/" target="_blank" rel="external nofollow noopener noreferrer">https://v2.nonebot.dev</a><br>gocq文档: <a href="https://docs.go-cqhttp.org/" target="_blank" rel="external nofollow noopener noreferrer">https://docs.go-cqhttp.org/</a><br>你需要记住他们，因为你需要随时查阅文档</p></blockquote><p><del>简单</del><strong>粗暴</strong>来说，gocq就是一个QQ，即你需要用它来登录，接收消息，发送消息；而nb则用来实现机器人的各种功能。<br>如下是他们的项目地址，记得去点个star哦~  </p><blockquote><p>nb：<a href="https://github.com/nonebot/nonebot2" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nonebot/nonebot2</a><br>gocq：<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Mrs4s/go-cqhttp</a>  </p></blockquote><p><strong><font color="red">创作本文时，nb最新版本为<code>2.0.0b1</code>，gocq最新版本为`v1.0.0-beta8-fix2，请注意内容时效！</font></strong></p><hr><h3 id="sta">开始</h3><h4 id"nbin">安装nb</h4><ul><li><p><strong>安装脚手架</strong><br> 通过脚手架安装(官方推荐)：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nb-cli</span><br></pre></td></tr></table></figure><p>安装脚手架时会自动安装nb </p><p>安装时出现错误：</p><ul><li>python版本不对</li><li>缺少Microsoft Visual C++ 环境 </li><li>…（请仔细看报错）</li></ul></li><li><p><strong>安装适配器</strong>(使用脚手架安装时已经安装)</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot-adapter-onebot</span><br></pre></td></tr></table></figure></li></ul><h4 id="cqin"> 安装gocq</h4>  <h5 id="deepin">deepin</h5><p>我们打开工作路径（这里我新建一个<code>bot</code>文件夹，<code>bot</code>下新建<code>cq</code>文件夹并打开  </p><p>前往<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer"><i class="fas fa-link fa-fw"></i> Release</a>下载最新版，注意与你的操作系统匹配 </p><p>我这里下载 <code>go-cqhttp_1.0.0-beta8-fix2_linux_amd64.deb</code>, 并安装。</p><ul><li>在<code>cq</code>目录下执行<code>go-cqhttp</code></li><li>选择<code>反向WebSocket</code>回车</li><li>此时目录下会生成配置文件<code>config.yml</code></li><li>对其进行配置：<ul><li>QQ号及密码</li><li>反向ws地址</li></ul></li></ul><p>使用任何适宜的编辑器对配置文件进行编辑，在<code>行4、5</code>填写要用来做机器人的QQ账号与密码。<code>行96</code> 内容进行修改：</p><blockquote><p>universal: ws://your_websocket_universal.server</p></blockquote><p>修改为</p><blockquote><p>universal: ws://127.0.0.1:8080/onebot/v11/ws</p></blockquote><p>8080是端口号，根据实际需求填写，修改完保存即可，再次执行<code>./go-cqhttp</code>，即可登录成功（有的账号需要扫码登录，根据提示即可）</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqlogin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqlogin.png"></a></p><p>如图代表登陆成功，下方黄色提示暂且放下不管。</p><br><h5 id="deepin">其他Linux发行版</h5><p>下载对应release后：</p><ul><li>使用<code>tar -xzvf [文件名]</code>解压</li><li><code>cd</code>设置工作目录为解压后的文件夹</li><li>再执行 <code>./go-cqhttp</code></li><li>按照提示配置<code>config.yml</code>与上方配置相同</li></ul><h4 id="nbcr">创建nb项目</h4>  <p>返回<code>bot</code>，在此处打开终端并运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb create</span><br></pre></td></tr></table></figure><p>此时按照如下步骤创建项目</p><ul><li>输入<code>项目名称</code> 我这里输入了robot</li><li>使用 <code>↓</code> 选择<code>src</code>文件夹</li><li>选择一款预置插件，我按下<font color="red" size="25px">空格</font>选择echo，回车</li><li>按下<font color="red" size="25px">空格</font>键选择<code>noebot v11</code>回车<br>(很多人这里不注意空格)</li></ul><p>请使用任何适宜的软件（如记事本(不推荐)）打开<code>env.dev</code>并做出修改，保证你在前面的步骤中对gocq配置的端口与此文件中的端口保持一致</p><blockquote><p>PORT=8080</p></blockquote><p>修改为</p><blockquote><p>PORT=你使用的端口</p></blockquote><p>那么现在在robot下打开终端,输入以下命令运行nonebot2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run</span><br></pre></td></tr></table></figure><p>此外，在pycharm中运行bot.py也是可行的</p><p><strong><font color="#3898fc">注意，需要让gocq和nb都运行，linux可使用进程守护一类的工具让他们后台运行，我个人是宝塔面板中的进程守护来解决这个问题</font></strong></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbrun.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbrun.png"></a></p><p>如图表示运行成功，你会发现gocq中的黄色提示变成了：</p><blockquote><p>已连接到反向Web…..</p></blockquote><p>也就是说，nb与gocq之间可以通信了</p><h4 id="done">大功告成</h4><p>现在，向你的机器人发送 <code>/echo 123</code> 看看会发生什么吧，不出意外地，你的机器人向你回复了<code>123</code></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/echo123.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/echo123.png"></a></p><hr><h3 id="plugin3"> nonebot2机器人的配置</h3><h4 id="env"> .env.*的配置</h4><p>.env.*文件为配置文件，可在任何插件中加载，官方示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HOST&#x3D;0.0.0.0  # 配置 NoneBot 监听的 IP&#x2F;主机名</span><br><span class="line">PORT&#x3D;8080  # 配置 NoneBot 监听的端口</span><br><span class="line">SUPERUSERS&#x3D;[&quot;123456789&quot;, &quot;987654321&quot;]  # 配置 NoneBot 超级用户</span><br><span class="line">NICKNAME&#x3D;[&quot;awesome&quot;, &quot;bot&quot;]  # 配置机器人的昵称</span><br><span class="line">COMMAND_START&#x3D;[&quot;&#x2F;&quot;, &quot;&quot;]  # 配置命令起始字符</span><br><span class="line">COMMAND_SEP&#x3D;[&quot;.&quot;]  # 配置命令分割字符</span><br><span class="line"></span><br><span class="line"># Custom Configs</span><br><span class="line">CUSTOM_CONFIG1&#x3D;&quot;config in env file&quot;</span><br><span class="line">CUSTOM_CONFIG2&#x3D;  # 留空则从系统环境变量读取，如不存在则为空字符串</span><br></pre></td></tr></table></figure><p>你可以将其复制到<code>.env.dev</code>中</p><ul><li><p>其中<code>COMMAND_START=[&quot;/&quot;, &quot;&quot;]</code>是对命令起始字符进行配置，当你遇到 <code>怎么让命令没有/也能被机器人识别</code>这个问题时，请对它进行配置。这样，你的命令前就不同加<code>/</code>了</p></li><li><p>形如custom这样的配置，你可以自定义,只要确保为JSON格式即可，且大小写不敏感，<br>你可以配置如：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BAN&#x3D;[&quot;123456&quot;]</span><br></pre></td></tr></table></figure><p>  则在插件中可通过以下方式来调用（后续使用插件会讲）</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line">myconfig = nonebot.get_driver().config.ban</span><br></pre></td></tr></table></figure></li></ul><h4 id="otherconfig"> 其他配置 </h4><p>就我个人而言，使用.env.*是最常使用的，此外还可通过系统环境变量、bot.py来配置，参见官方：[基本配置](<a href="https://v2.nonebot.dev/docs/tutorial/configuration" target="_blank" rel="external nofollow noopener noreferrer">配置 | NoneBot</a> “基本配置”)</p><hr><h3 id="botpy"> nonebot2机器人的使用</h3><p>相信你再<a href="#env">前面的章节中</a>,已经对 <code>.env.dev</code>做出了修改，这里不再赘述</p><p>bot.py中默认生成的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom your logger</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># from nonebot.log import logger, default_format</span></span><br><span class="line"><span class="comment"># logger.add("error.log",</span></span><br><span class="line"><span class="comment">#            rotation="00:00",</span></span><br><span class="line"><span class="comment">#            diagnose=False,</span></span><br><span class="line"><span class="comment">#            level="ERROR",</span></span><br><span class="line"><span class="comment">#            format=default_format)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can pass some keyword args config to init function</span></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter)</span><br><span class="line"></span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">"echo"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please DO NOT modify this file unless you know what you are doing!</span></span><br><span class="line"><span class="comment"># As an alternative, you should use command `nb` or modify `pyproject.toml` to load plugins</span></span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify some config / config depends on loaded configs</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># config = driver.config</span></span><br><span class="line"><span class="comment"># do something...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>阅读注释后（看不懂请使用翻译）我们大可去掉其中的注释，改为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter</span><br><span class="line"></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter)</span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">"echo"</span>)</span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>这里的 <code>nonebot.load_builtin_plugins(&quot;echo&quot;)</code> 是加载此前选择的预置插件，我们暂时搁置，现在讲讲如何使用别人写好的插件</p><h4 id="store">使用商店中的插件</h4><p>(<code>2022年1月24日16:24:05</code>部分插件未适配最新版nb,请参考：<a href="https://github.com/Lancercmd/nonebot2-store-test/issues/1" target="_blank" rel="external nofollow noopener noreferrer">📝 NoneBot2 商店插件兼容性报告 </a>)</p><p>在<a href="https://v2.nonebot.dev/store" target="_blank" rel="external nofollow noopener noreferrer">nb的商店</a>中，有很多插件，比如这个黑丝插件</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore2.png"></a></p><ul><li><p>安装方法一</p><p> 点击复制安装命令，你的剪贴板会复制这段命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot_plugin_heisi</span><br></pre></td></tr></table></figure><p> 这段命令你需要在 <code>robot</code> 文件夹下，打开终端执行，他会安装插件并将配置写进 <code>pyproject.toml</code> 中，这样你无需修改 <code>bot.py</code> 即可在nb运行的时候加载这个插件</p></li><li><p>安装方法二<br>  若你在方法一中遇到了安装问题，一般情况下，你可以将上述命令视作</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot_plugin_heisi</span><br></pre></td></tr></table></figure><p> 在任何打开的终端中都可以执行这段命令，而值得注意的是：<br> <font color="red">如果你使用了方法二，你需要在 <code>bot.py</code>中的 <code>nonebot.load_from_toml(&quot;pyproject.toml&quot;)</code>前添加一句：</font></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonebot.load_plugin(&quot;nonebot_plugin_heisi&quot;)</span><br></pre></td></tr></table></figure><p> 此时你的<code>bot.py</code>应该是：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Adapter <span class="keyword">as</span> ONEBOT_V11Adapter</span><br><span class="line"></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(ONEBOT_V11Adapter)</span><br><span class="line">nonebot.load_builtin_plugins(<span class="string">"echo"</span>)</span><br><span class="line">nonebot.load_plugin(<span class="string">"nonebot_plugin_heisi"</span>)</span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p> 即加载 “nonebot_plugin_heisi” 这一插件</p><p> 注意：这是方法二才需要的，一般情况下你不用这样做</p></li></ul><p>tips: 多数情况下，在插件右上角的图标中进入他的仓库页面，你可以找到插件的详细用法</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore2.png"></a></p><p>完成安装后，重启nb，你会看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginsu2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginsu2.png"></a></p><p>表示 “nonebot_plugin_heisi” 插件已经成功导入，在<a href="https://github.com/yzyyz1387/nonebot_plugin_workscore" target="_blank" rel="external nofollow noopener noreferrer">插件的仓库页面</a>我们可以看到它的用法：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginuse2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginuse2.png"></a></p><p>故我们在.env.dev中做出配置，再重启nb，在群内发送<code>.黑丝</code>即可</p><h4 id="init">编写插件</h4><h5 id="fow">须知</h5><p>我们回顾一下我们的目录结构</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bot</span><br><span class="line">├── cq</span><br><span class="line">├── robot</span><br><span class="line">│   └── ...</span><br><span class="line">│   └── src</span><br><span class="line">│        └── plugins</span><br><span class="line">│   └── bot.py</span><br><span class="line">│   └── ...</span><br></pre></td></tr></table></figure><p>gocq在之前的操作中已经完成了他的使命，不再讨论。</p><p><code>robot</code>下的<code>src</code>文件夹是你你再进行 <code>nb create</code> 的操作时自动生成的，若没有 <code>src</code> 文件夹，那必定会有一个 与项目名相同的文件夹，按照我的教程来说，在 <code>robot</code>下还有一个 <code>robot</code>文件夹。</p><p>继续拿 <code>src</code> 文件夹来说，在它下面有一个 <code>plugins</code> 文件夹，是插件目录，文件夹里的插件会在 nb启动时被加载。</p><p>这是在<code>nb create</code> 时配置好的，你可以在 <code>pyproject.toml</code> 看到：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nonebot.plugins]</span></span><br><span class="line"><span class="attr">plugins</span> = []</span><br><span class="line"><span class="attr">plugin_dirs</span> = [<span class="string">"src/plugins"</span>]</span><br></pre></td></tr></table></figure><p>表示这个nb项目的插件目录是 <code>src/plugins</code> </p><p>接下来我将演示一个简单的插件编写，仅提供入门nb的一个思路，其他操作将写在后面，或另撰新文。</p><h5 id="startinit">开始</h5><p>官方推荐使用python包文件形式创建插件，即 ：一个插件为一个文件夹，文件夹名即插件名，下含 <code>__init__.py</code>的文件以及其他文件，为一个合法的python包。我们创建一个名为 <code>first_plugin</code> 的插件，欲用它来调用一个每日早报的接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">│   └── plugins</span><br><span class="line">│        └── first_plugin</span><br><span class="line">│                 └── __init__.py</span><br><span class="line">│                 └── askjson.py</span><br></pre></td></tr></table></figure><p>以pycharm为例，在创建插件时，可选择新建下的 python包，该操作会自动生成 <code>__init__.py</code>：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/createplugin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/createplugin.png"></a></p><h5 id="editinit">编写</h5><p><strong>&gt; askjson.py</strong></p><p>我们先对<code>askjson.py</code> 进行编写（其实这种简单地操作没必要独立出来一个askjson文件，这里只是示例）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Optional</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span> -&gt; Optional[str]:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :return: 早报图片链接</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    url=<span class="string">"https://api.iyk0.com/60s"</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">        r = (<span class="keyword">await</span> client.get(url=url)).json()</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure><p>上述代码中使用了异步的httpx而不是requests：数据获取应尽量使用<strong>异步</strong>处理。我们访问 <code>https://api.iyk0.com/60s</code>这个接口，该接口会返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"Success"</span>,</span><br><span class="line">    <span class="attr">"imageUrl"</span>: <span class="string">"https://img01.sogoucdn.com/app/a/200692/621_2416_feedback_f1971058fc5c40eabc885fa7a18dba28.png"</span>,</span><br><span class="line">    <span class="attr">"tips"</span>: <span class="string">"注意:新闻数据是在每天凌晨一点更新，如设定定时任务请在凌晨一点后调用本接口！谢谢配合！"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>故我们在调用 <code>get_url()</code>时，会返回早报的图片链接（接口正常的情况下）</p><p><strong>&gt; __init__.py</strong> </p><p>在该文件中编写各类事件响应及处理逻辑。</p><p>我通常默认阅读本文的宁具有一定python基础，故某些点不做解释</p><p>通常，最常见的开始姿势如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command,logger</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.onebot.v11 <span class="keyword">import</span> Bot, MessageEvent, MessageSegment</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> askjson</span><br><span class="line"></span><br><span class="line">sixty=on_command(<span class="string">"60s"</span>,aliases=&#123;<span class="string">"早报"</span>,<span class="string">"六十"</span>&#125;,priority=<span class="number">2</span>,block=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">@sixty.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(bot:Bot,event:MessageEvent)</span>:</span></span><br><span class="line">    img_url=(<span class="keyword">await</span> askjson.get_url())</span><br><span class="line">    <span class="keyword">if</span> img_url:</span><br><span class="line">        <span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url[<span class="string">"imageUrl"</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        logger.info(<span class="string">'获取时出现错误'</span>)</span><br></pre></td></tr></table></figure><ul><li>第2行导入的<code>on_command</code> 注册一个消息类型的命令处理器，也就是说，让机器人识别你的命令需要用到他。<code>logger</code>是nb 日志记录器对象。详见： <a href="https://v2.nonebot.dev/docs/next/api/log" target="_blank" rel="external nofollow noopener noreferrer">NoneBot.log 模块</a></li></ul><ul><li><p>第7行中的写法中：</p><ol><li><code>60s</code>表示命令名</li><li><code>aliases</code> 表示命令别名，即 <code>60s</code>、<code>早报</code>、<code>六十</code> 都会响应这个事件</li><li><code>priority</code>表示优先级，数值越小越优先</li></ol></li><li><p>第8行，紧接着<code>@sixty.handle()</code> sixty被事件响应器的装饰器装饰从而成为事件响应器的事件处理函数,<code>handle()</code>是简单的为事件响应器添加一个事件处理函数，这个函数将会在上一个处理函数正常返回执行完毕后立即执行。</p></li></ul><p><del><strong>事件处理函数中，除<code>bot</code>外都是可选的</strong></del></p><p><strong>b1中,按需传入参数，bot也可以不传，反正这里可以这样写，读者日后慢慢会理解</strong></p><ul><li><p>第10行调用我们编写的函数获取到链接，12行中<code>send()</code>函数根据<code>event</code>向触发事件的主体发送消息。<a href="https://v2.nonebot.dev/docs/next/tutorial/plugin/matcher-operation#send" target="_blank" rel="external nofollow noopener noreferrer">点我查看参数</a> </p><p>  我们在注册事件时传入了Event故这里可以直接<code>sixty.send(message=xxx)</code>,我们也可以：<code>bot.send(event=event,message=xxx)</code></p><p>其中<code>message</code>参数是我们要发送的消息，可以是纯文本 <code>message=&quot;你好&quot;</code> ，这里使用的 <code>MessageSegment</code> 是nb对cq协议的适配，可用于发送CQ码等（个人理解），即:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><p>  等价于（不推荐）</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure><ul><li><p>如果你要发送文本+图片，如下写法皆可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=<span class="string">"今日早报"</span>+MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"text"</span>: <span class="string">"今日早报"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>现在，运行nb，向它发送<code>早报</code>看会发生什么  </p>  <p style="text-align:center;">  <a href="https://cdn.yzyyz.top/nonebot/60.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/60.png"></a> </p> <p>  成了，此时你将在nb日志界面看到</p>   <p style="text-align:center;">   <a href="https://cdn.yzyyz.top/nonebot/lognb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/lognb.png"></a></p>   <p>  其中包含了：</p><ul><li><p>消息id  <code>-765866496</code>,</p></li><li><p>消息来源 <code>1796031384</code></p></li><li><p>消息内容 <code>早报</code></p></li><li><p>事件被那个插件的Matcher处理了</p><p>在gocq的日志界面看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/logcq.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logcq.png"></a></p>  <p>一般情况下，使用小号来登录gocq作为机器人，在发送群聊消息时，可能会出现:</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/fk.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/fk.png"></a></p>  这种情况我们称之为 `喜报`<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb.png"></a></p>  若要解决这个问题，我的建议是：看脸。 你可以使用此账号挂在cq一段时间，挂的时间真得看脸，我的号就风控过一次，几分钟就好了；或者重启cq试试。还有一种情况是：<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb2.png"></a></p>显而易见，你的账号被冻结了，我相信，屏幕前的您能收购鹅厂，您肯定不会让上述情况发生的，对吧（确信）<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb3.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb3.png"></a></p></li></ul></li><li><p>tips:发送本地图片：</p><ul><li><p>利用gocq+nb作为机器人发送本地图片时，若使用相对路径，要记得 路径是相对gocq的 而不是相对nb项目的，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(<span class="string">"file:///路径"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: <span class="string">"file:///路径"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>路径问题本人一般使用<code>Path</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line">img_path = Path() / <span class="string">"xxx.png"</span></span><br><span class="line"><span class="comment"># .resolve() 转为绝对路径</span></span><br><span class="line">img_path2 = img_path.resolve()</span><br></pre></td></tr></table></figure><p>上述<code>img_path</code>都是Path对象，需要使用时可<code>str(img_path)</code>, 此为个人见解，若有错误，烦请在评论区指出</p><p>此外：<a href="https://www.cnblogs.com/heniu/p/12872604.html" target="_blank" rel="external nofollow noopener noreferrer">python路径操作新标准：pathlib 模块 - 和牛 - 博客园 (cnblogs.com)</a></p><p><strong>其他</strong></p><p>官方配置文档 ：<a href="https://v2.nonebot.dev/docs/tutorial/configuration" target="_blank" rel="external nofollow noopener noreferrer">配置 | NoneBot</a> 。这里暂时用不到，有需要请阅读之。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p style=&quot;text-align:center;width=200px&quot;&gt;
    &lt;a href=&quot;https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;nonebot&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/nonebot/logo.png&quot; style=&quot;width:200px&quot;&gt;&lt;/a&gt;&lt;br&gt;QQ机器人保姆级平民搭建方法(新)&lt;br&gt; &lt;font color=&quot;red&quot;&gt;本文内容及部分所用图片来自上一篇教程，与文章内容可能有偏差但不影响部署&lt;br&gt;如果在阅读时发现了我的错误 烦请在&lt;a href=&quot;#comments&quot;&gt;评论区&lt;/a&gt;提出&lt;br&gt;本人技术不佳 还希望来访大佬指教&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="机器人" scheme="https://yzyyz.top/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>四季</title>
    <link href="https://yzyyz.top/archives/siji.html"/>
    <id>https://yzyyz.top/archives/siji.html</id>
    <published>2022-01-10T15:30:20.000Z</published>
    <updated>2022-01-10T15:52:17.561Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    对你而言，四季是怎样的？是春暖花开，是骄阳似火，是秋高气爽，亦或是银装素裹。而杰娃却找不到合适的词去形容他的四季。</p><a id="more"></a><p>  2001年冬天，杰娃出生在陕南的一个小村子里，后来的一段时间，少有父母的陪伴，先是在外婆家，到了上学的年龄又到了爷爷家。外婆家比爷爷家更山里一点，那里还没通水泥路，那里的人们好像很擅长走路。  春天，最先来的不是万物复苏，而是对面的山上淡粉色的花，杰娃觉得那大抵是樱花，一棵，两棵，慢慢的越来越多…再后来就是地坝前的樱花，李子花。说起<a href="#z1">地坝[1]</a>前的那棵樱桃树，杰娃真的想抱怨几句：樱桃成熟杰娃从来没吃到过，那光秃秃的树只有高大粗壮的主干，几乎没有分枝，所以根本摘不到。父母在广州打工，杰娃也要跟父母到处跑的，不记得是哪年哪岁，他坐上了火车，绿皮火车。那也是个春天，车厢里阵阵嘈杂，窗外绵绵细雨，很细而急促的雨，静悄悄的，雨水在绿皮车窗上聚集成水滴然后流下。“嘶——啦——”，车走的很慢，窗外的山上也有粉的花，车走的越远，花开的越多。</p><p>​    夏天，外婆家的夏天倒也不记得多热，地坝左手边有条小路，是一个上坡，大概四五步路，是一片<a href="#z2">丝绵树[2]</a>，丝绵树上的蝉最多，天天吵个不停，杰娃喜欢到丝绵树上去抓蝉，丝绵树干光秃秃的，树叶都在顶上，所以很好抓，要是蝉停的高了杰娃是没办法的，杰娃那时还不会爬直树，只有等到另一座山上的小伙伴来了才能抓到。小伙伴抓到蝉以后，会把蝉处理一下，撒上盐，塞进灶台烤熟了吃，杰娃只分到了一条腿，尝了尝盐味儿。</p><p>​    爷爷家的夏天，那是个油菜花开在母亲头上的季节。那时杰娃的父母在家，上午要去地里，嘱咐杰娃道：“弟弟醒了哭，你就去前面那里<a href="#z3">喊[3]</a>我们”。弟弟如期传来了哭声，杰娃急忙准备跑到约定好的地方喊父母，慌乱中觉得后脑勺凉凉的，摸了一把，杰娃也开始哭了。原因是慌乱中摔了一跤，头透磕到了有两个大洞的水泥砖上，弟弟在屋里哭，杰娃在外面哭，邻居三爸发现了才将父母喊了回来。母亲回来后眼神中带着一丝慌乱，头发上还带着油菜花，家人拿帕子把杰娃头包起来，母亲背着杰娃一直走到村里卫生院，那是很远的一段距离，给头上缝了几针，没记错的话是6针。在爷爷家的夏天，晚上他们会把椅子搬到地坝<a href="#z4">歇凉[4]</a>，那时爷爷家的地坝还没<a href="#z4">打板[5]</a>，歇凉时萤火虫和蛙声从草丛里浮出来，伴着满天繁星，代表着一天的结束。</p><p>​    秋天，外婆家地坝右边种的佛手瓜熟了，做菜味道应该不错，旁边两棵梨树，好不容易能结出六七个梨，还总被小伙伴摘走，杰娃记得应该是没吃到过。  冬天，雪会附在<a href="#z7">锅盖[6]</a>上，而杰娃又很喜欢看电视，没办法，外公用很长的竹竿，捆上桶，桶里装上开水，到房子后紧挨的山坡上，把这些水淋到锅盖上，让雪融化流走。杰娃仍认为那是非常难的，冬天地滑，山坡上还有灌木很不方便，那个竹竿也很长，看起来很重。某天晚上，应该是金鹰卡通或者是湖南台在播宫崎骏的《千与千寻》，杰娃很想看完，外公外婆也同意了，外公外婆都睡去了…不知道那是几点，很晚了，杰娃还坐在小板凳上看，外公醒了，拿个<a href="#z7">搪瓷盆[7]</a>，到<a href="#z8">火笼[8]</a>里弄了些炭，端到小板凳前面，怕杰娃冷到。  爷爷家的冬天，是奶奶走的季节，奶奶的葬礼在冬天，应该是葬礼第二天才开始下雪的吧。到爷爷家后奶奶对杰娃非常好，放学回家总是会说：“饿了没有，我去给你弄饭”，记得有一次，奶奶炒了一大碗饭，挺油的，杰娃也没吃完。有一天中午，杰娃在<a href="#z9">房顶上[9]</a>玩，看见远处路上的挖挖机（挖掘机）很是兴奋，因为很少看见这些车，急忙下楼叫奶奶去看，奶奶腿脚不便，杰娃很快就冲上楼，还要催奶奶快点快点，终于等来了奶奶，奶奶眼睛不好，要用手撑开眼皮看，也不知道奶奶看到了没有，小杰娃真是不懂事啊。</p><p>​    这是杰娃的四季，他只能记起这么多，杰娃是谁，我就是杰娃，家里人喊我杰娃儿，作此文时去掉了儿化音。此文完成于2022-01-10 06:27，4时许被舍友的呼声吵醒，睡不着，突然想到儿时的一些画面，真的是很美好的时光</p><p id="z1">[1] 地坝 在方言里，大人们把房子钱的空地成为地坝，我更想写作地巴，因为在方言中的坝是一声的</p>  <p id="z2">[2] 丝绵树 杰娃清晰的记得是叫丝绵树，因为外婆是这样说的，不知道跟百度里面搜出的是不是同一种树</p>  <p id="z3">[3] 喊，山里人特殊的通话方式，似乎在山里能喊很远。</p>  <p id="z4">[4] 歇凉 纳凉</p>  <p id="z5">[5] 打板 将土地坝修整为水泥地坝</p>  <p id="z6">[6] 锅盖 电视用的卫星锅</p>  <p id="z7">[7] 搪瓷盆 百度可以搜到，就是那种红白色，盆地有花个红双喜字样的铁盆</p>  <p id="z8">[8] 火笼 就是火坑，烧火的地方，冬天经常会用灰烬埋住白天生完火没熄灭的木炭，第二天可以刨开方便点火</p>  <p id="z9">[9] 爷爷家是平房，屋顶是可以直接上去的</p>  ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    对你而言，四季是怎样的？是春暖花开，是骄阳似火，是秋高气爽，亦或是银装素裹。而杰娃却找不到合适的词去形容他的四季。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>基于Nonebot2和go-cqhttp的机器人搭建</title>
    <link href="https://yzyyz.top/archives/nb2.html"/>
    <id>https://yzyyz.top/archives/nb2.html</id>
    <published>2021-12-02T03:30:02.000Z</published>
    <updated>2022-01-24T09:15:58.079Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;width=200px">    <a href="https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logo.png" style="width:200px"></a><br>QQ机器人保姆级平民搭建方法<br> <font color="red">如果你仅想使用python实现机器人的功能而不考虑其他的(黑产用途、手搓轮子之类的)，请继续阅读<br>如果不是 那你完全没必要读下去<br>如果在阅读时发现了我的错误 烦请在<a href="#comments">评论区</a>提出<br>本人技术不佳 还希望来访大佬指教</font></p><a id="more"></a><h3 id="fo"> 写在前面</h3><p>本文由于nonebot版本更新，部分内容已不再适用，请转至<a href="https://yzyyz.top/archives/nb2b1.html">基于Nonebot2和go-cqhttp的机器人搭建 新</a></p><h4 id="sum"> 概述</h4>本文将叙述如何在windows下使用Nonebot2（下称nb）和go-cqhttp（下称cq）创建QQ机器人<img src="https://api.isoyu.com/uploads/ARU/GIF_S/0540.gif" style="    margin: 0;    display: inline;">，若你想使用nb和cq创建机器人，你需要：<ol><li>Python环境（3.7.3以上）</li><li>Python能力</li><li>读文档能力</li><li>Linux能力（部署于linux）</li><li>…</li></ol><p>linux下部署也是一样的，</p><h4 id="pre"> 准备 </h4> <p><strong>什么是nb？什么是cq？</strong><br>关于这部分内容，你可以从他们的官网找到：  </p><blockquote><p>nb文档: <a href="https://v2.nonebot.dev/" target="_blank" rel="external nofollow noopener noreferrer">https://v2.nonebot.dev</a><br>cq文档: <a href="https://docs.go-cqhttp.org/" target="_blank" rel="external nofollow noopener noreferrer">https://docs.go-cqhttp.org/</a><br>你需要记住他们，因为你需要随时查阅文档</p></blockquote><p><del>简单</del><strong>粗暴</strong>来说，cq就是一个QQ，即你需要用它来登录，接收消息，发送消息；而nb则用来实现机器人的各种功能。<br>如下是他们的项目地址，记得去点个star哦~  </p><blockquote><p>nb：<a href="https://github.com/nonebot/nonebot2" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nonebot/nonebot2</a><br>cq：<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/Mrs4s/go-cqhttp</a>  </p></blockquote><p><strong><font color="red">创作本文时，nb最新版本为<code>2.0.0a16</code>，cq最新版本为<code>v1.0.0-beta8-fix1</code>，请注意内容时效！</font></strong></p><p><strong>nb 2.0.0 b1 已发版 其与a16有部分差别，注意查看官方文档</strong></p><hr><h3 id="sta">开始</h3><h4 id"nbin">安装nb</h4><ul><li><p><strong>安装脚手架</strong><br> 通过脚手架安装(官方推荐)：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nb-cli</span><br></pre></td></tr></table></figure><p>安装脚手架时会自动安装nb </p><p>安装时出现错误：</p><ul><li>python版本不对</li><li>缺少Microsoft Visual C++ 环境 </li><li>…（请仔细看报错）</li></ul></li><li><p><strong>安装适配器</strong>(使用脚手架安装时已经安装)</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot-adapter-cqhttp</span><br></pre></td></tr></table></figure></li></ul><h4 id="cqin"> 安装cq</h4>  <p>我们打开工作路径（这里我新建一个<code>bot</code>文件夹，<code>bot</code>下新建<code>cq</code>文件夹并打开  </p><p>前往<a href="https://github.com/Mrs4s/go-cqhttp" target="_blank" rel="external nofollow noopener noreferrer"><i class="fas fa-link fa-fw"></i> Release</a>下载最新版，注意与你的操作系统匹配 </p><p>我这里下载 <code>go-cqhttp_windows_amd64.exe</code>, 更名为<code>go-cqhttp.exe</code>,双击启动。</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqinstall.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqinstall.png"></a></p><br><p>这里按照提示点确定，最后会在当前目录生成一个<code>go-cqhttp.bat</code>的批处理文件</p><br><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqbat.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqbat.png"></a></p><p>双击运行批处理文件，选择 <strong>3</strong> <code>反向Websocket</code> 回车，此时会在当前文件夹生成 <code>config.yml</code>的配置文件</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqws.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqws.png"></a></p><p>使用任何适宜的编辑器对配置文件进行编辑，在<code>行4、5</code>填写要用来做机器人的QQ账号与密码。<code>行96</code> 内容进行修改：</p><blockquote><p>universal: ws://your_websocket_universal.server</p></blockquote><p>修改为</p><blockquote><p>universal: ws://127.0.0.1:8080/cqhttp/ws</p></blockquote><p>8080是端口号，根据实际需求填写，修改完保存即可，再双击<code>go-cqhttp.bat</code>批处理文件，即可登录成功（有的账号需要扫码登录，根据提示即可）</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/cqlogin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/cqlogin.png"></a></p><p>如图代表登陆成功，下方黄色提示暂且放下不管。</p><h4 id="nbcr">创建nb项目</h4>  <p>返回<code>bot</code>，在此处打开cmd并运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb create</span><br></pre></td></tr></table></figure><p>此时按照如下步骤创建项目</p><ul><li>输入<code>项目名称</code> 我这里输入了robot</li><li>使用 <code>↓</code> 选择<code>src</code>文件夹</li><li>输入 <code>y</code> 回车</li><li>按下<font color="red" size="25px">空格</font>键选择<code>cqhttp</code>回车<br>(很多人这里不注意空格，还反过来问我觉得我有问题)</li></ul><p>请使用任何适宜的软件（如记事本）打开<code>env.dev</code>并做出修改，保证你在前面的步骤中对cq配置的端口与此文件中的端口保持一致</p><blockquote><p>PORT=8080</p></blockquote><p>修改为</p><blockquote><p>PORT=你使用的端口</p></blockquote><p>那么现在在robot下打开cmd,输入以下命令运行nonebot2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb run</span><br></pre></td></tr></table></figure><p>此外，在pycharm中运行bot.py也是可行的</p><p><strong><font color="#3898fc">注意，需要让cq和nb都运行，linux可使用进程守护一类的工具让他们后台运行，我个人是宝塔面板中的进程守护来解决这个问题</font></strong></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbrun.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbrun.png"></a></p><p>如图表示运行成功，你会发现cq中的黄色提示变成了：</p><blockquote><p>已连接到反向Web…..</p></blockquote><p>也就是说，nb与cq之间可以通信了</p><h4 id="done">大功告成</h4><p>现在，向你的机器人发送 <code>/echo 123</code> 看看会发生什么吧，不出意外地，你的机器人向你回复了<code>123</code></p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/echo123.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/echo123.png"></a></p><hr><h3 id="plugin3"> nonebot2机器人的配置</h3><h4 id="env"> .env.*的配置</h4><p>.env.*文件为配置文件，可在任何插件中加载，官方示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HOST&#x3D;0.0.0.0  # 配置 NoneBot 监听的 IP&#x2F;主机名</span><br><span class="line">PORT&#x3D;8080  # 配置 NoneBot 监听的端口</span><br><span class="line">DEBUG&#x3D;true  # 开启 debug 模式 **请勿在生产环境开启**</span><br><span class="line">SUPERUSERS&#x3D;[&quot;123456789&quot;, &quot;987654321&quot;]  # 配置 NoneBot 超级用户</span><br><span class="line">NICKNAME&#x3D;[&quot;awesome&quot;, &quot;bot&quot;]  # 配置机器人的昵称</span><br><span class="line">COMMAND_START&#x3D;[&quot;&#x2F;&quot;, &quot;&quot;]  # 配置命令起始字符</span><br><span class="line">COMMAND_SEP&#x3D;[&quot;.&quot;]  # 配置命令分割字符</span><br><span class="line"></span><br><span class="line"># Custom Configs</span><br><span class="line">CUSTOM_CONFIG1&#x3D;&quot;config in env file&quot;</span><br><span class="line">CUSTOM_CONFIG2&#x3D;  # 留空则从系统环境变量读取，如不存在则为空字符串</span><br></pre></td></tr></table></figure><p>你可以将其复制到<code>.env.dev</code>中</p><ul><li><p>其中<code>COMMAND_START=[&quot;/&quot;, &quot;&quot;]</code>是对命令起始字符进行配置，当你遇到 <code>怎么让命令没有/也能被机器人识别</code>这个问题时，请对它进行配置。</p></li><li><p><code>DEBUG=true</code>表示开启debug模式，当你对在进行如编写插件等的操作时，对文件做出了修改，保存文件后，nb会自动重启</p></li><li><p>形如custom这样的配置，你可以自定义,只要确保为JSON格式即可，且大小写不敏感，<br>你可以配置如：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BAN&#x3D;[&quot;123456&quot;]</span><br></pre></td></tr></table></figure><p>  则在插件中可通过以下方式来调用（后续使用插件会讲）</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line">myconfig = nonebot.get_driver().config.ban</span><br></pre></td></tr></table></figure></li></ul><h4 id="otherconfig"> 其他配置 </h4><p>就我个人而言，使用.env.*是最常使用的，此外还可通过系统环境变量、bot.py来配置，参见官方：<a href="https://v2.nonebot.dev/guide/basic-configuration.html" target="_blank" rel="external nofollow noopener noreferrer" title="基本配置">基本配置</a></p><hr><h3 id="botpy"> nonebot2机器人的使用</h3><p>相信你再<a href="#env">前面的章节中</a>,已经对 <code>.env.dev</code>做出了修改，这里不再赘述</p><p>bot.py中默认生成的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot <span class="keyword">as</span> CQHTTPBot</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom your logger</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># from nonebot.log import logger, default_format</span></span><br><span class="line"><span class="comment"># logger.add("error.log",</span></span><br><span class="line"><span class="comment">#            rotation="00:00",</span></span><br><span class="line"><span class="comment">#            diagnose=False,</span></span><br><span class="line"><span class="comment">#            level="ERROR",</span></span><br><span class="line"><span class="comment">#            format=default_format)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can pass some keyword args config to init function</span></span><br><span class="line">nonebot.init()</span><br><span class="line">app = nonebot.get_asgi()</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(<span class="string">"cqhttp"</span>, CQHTTPBot)</span><br><span class="line"></span><br><span class="line">nonebot.load_builtin_plugins()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please DO NOT modify this file unless you know what you are doing!</span></span><br><span class="line"><span class="comment"># As an alternative, you should use command `nb` or modify `pyproject.toml` to load plugins</span></span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify some config / config depends on loaded configs</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># config = driver.config</span></span><br><span class="line"><span class="comment"># do something...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>我们大可去掉其中的注释，改为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(<span class="string">"cqhttp"</span>, Bot)</span><br><span class="line">nonebot.load_builtin_plugins()</span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p>这里的 <code>nonebot.load_builtin_plugins()</code> 是加载本地插件，我们暂时搁置，现在讲讲如何使用别人写好的插件</p><h4 id="store">使用商店中的插件</h4><p>在<a href="https://v2.nonebot.dev/store.html" target="_blank" rel="external nofollow noopener noreferrer">nb的商店</a>中，有很多插件，比如这个工作性价比插件</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore.png"></a></p><ul><li><p>安装方法一</p><p> 点击复制安装命令，你的剪贴板会复制这段命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot_plugin_workscore</span><br></pre></td></tr></table></figure><p> 这段命令你需要在 <code>robot</code> 文件夹下，打开cmd执行，他会安装插件并将配置写进 <code>pyproject.toml</code> 中，这样你无需修改 <code>bot.py</code> 即可在nb运行的时候加载这个插件</p></li><li><p>安装方法二<br>  若你在方法一中遇到了安装问题，一般情况下，你可以将上述命令视作</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install nonebot_plugin_workscore</span><br></pre></td></tr></table></figure><p> 在任何打开的cmd中都可以执行这段命令，而值得注意的是：<br> <font color="red">如果你使用了方法二，你需要在 <code>bot.py</code>中的 <code>nonebot.load_from_toml(&quot;pyproject.toml&quot;)</code>前添加一句：</font></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonebot.load_plugin(&quot;nonebot_plugin_workscore&quot;)</span><br></pre></td></tr></table></figure><p> 此时你的<code>bot.py</code>应该是：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot</span><br><span class="line"></span><br><span class="line">driver = nonebot.get_driver()</span><br><span class="line">driver.register_adapter(<span class="string">"cqhttp"</span>, Bot)</span><br><span class="line">nonebot.load_builtin_plugins()</span><br><span class="line"></span><br><span class="line">nonebot.load_plugin(<span class="string">"nonebot_plugin_workscore"</span>)</span><br><span class="line"></span><br><span class="line">nonebot.load_from_toml(<span class="string">"pyproject.toml"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    nonebot.logger.warning(<span class="string">"Always use `nb run` to start the bot instead of manually running!"</span>)</span><br><span class="line">    nonebot.run(app=<span class="string">"__mp_main__:app"</span>)</span><br></pre></td></tr></table></figure><p> 即加载 “nonebot_plugin_workscore” 这一插件</p></li></ul><p>tips: 多数情况下，在插件右上角的图标中进入他的仓库页面，你可以找到插件的详细用法</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbstore.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbstore.png"></a></p><p>完成安装后，重启nb，你会看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginsu.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginsu.png"></a></p><p>表示 “nonebot_plugin_workscore” 插件已经成功导入，在<a href="https://github.com/yzyyz1387/nonebot_plugin_workscore" target="_blank" rel="external nofollow noopener noreferrer">插件的仓库页面</a>我们可以看到它的用法：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/nbpluginuse.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/nbpluginuse.png"></a></p><p>这里写的不是很详细，意思是需要艾特机器人并说算性价比即可，或者叫机器人昵称并说算性价比，</p><h4 id="init">编写插件</h4><h5 id="fow">须知</h5><p>我们回顾一下我们的目录结构</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bot</span><br><span class="line">├── cq</span><br><span class="line">├── robot</span><br><span class="line">│   └── ...</span><br><span class="line">│   └── src</span><br><span class="line">│        └── plugins</span><br><span class="line">│   └── bot.py</span><br><span class="line">│   └── ...</span><br></pre></td></tr></table></figure><p>cq在之前的操作中已经完成了他的使命，不再讨论。</p><p><code>robot</code>下的<code>src</code>文件夹是你你再进行 <code>nb create</code> 的操作时自动生成的，若没有 <code>src</code> 文件夹，那必定会有一个 与项目名相同的文件夹，按照我的教程来说，在 <code>robot</code>下还有一个 <code>robot</code>文件夹。</p><p>继续拿 <code>src</code> 文件夹来说，在它下面有一个 <code>plugins</code> 文件夹，是插件目录，文件夹里的插件会在 nb启动时被加载。</p><p>这是在<code>nb create</code> 时配置好的，你可以在 <code>pyproject.toml</code> 看到：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[nonebot.plugins]</span></span><br><span class="line"><span class="attr">plugins</span> = []</span><br><span class="line"><span class="attr">plugin_dirs</span> = [<span class="string">"src/plugins"</span>]</span><br></pre></td></tr></table></figure><p>表示这个nb项目的插件目录是 <code>src/plugins</code> </p><p>接下来我将演示一个简单的插件编写，仅提供入门nb的一个思路，其他操作将写在后面，或另撰新文。</p><h5 id="startinit">开始</h5><p>官方推荐使用python包文件形式创建插件，即 ：一个插件为一个文件夹，文件夹名即插件名，下含 <code>__init__.py</code>的文件以及其他文件，为一个合法的python包。我们创建一个名为 <code>first_plugin</code> 的插件，欲用它来调用一个每日早报的接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">│   └── plugins</span><br><span class="line">│        └── first_plugin</span><br><span class="line">│                 └── __init__.py</span><br><span class="line">│                 └── askjson.py</span><br></pre></td></tr></table></figure><p>以pycharm为例，在创建插件时，可选择新建下的 python包，该操作会自动生成 <code>__init__.py</code>：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/createplugin.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/createplugin.png"></a></p><h5 id="editinit">编写</h5><p><strong>&gt; askjson.py</strong></p><p>我们先对<code>askjson.py</code> 进行编写（其实这种简单地操作没必要独立出来一个askjson文件，这里只是示例）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Optional</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span> -&gt; Optional[str]:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :return: 早报图片链接</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    url=<span class="string">"https://api.iyk0.com/60s"</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">        r = (<span class="keyword">await</span> client.get(url=url)).json()</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure><p>上述代码中使用了异步的httpx而不是requests：数据获取应尽量使用<strong>异步</strong>处理。我们访问 <code>https://api.iyk0.com/60s</code>这个接口，该接口会返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"Success"</span>,</span><br><span class="line">    <span class="attr">"imageUrl"</span>: <span class="string">"https://img01.sogoucdn.com/app/a/200692/621_2416_feedback_f1971058fc5c40eabc885fa7a18dba28.png"</span>,</span><br><span class="line">    <span class="attr">"tips"</span>: <span class="string">"注意:新闻数据是在每天凌晨一点更新，如设定定时任务请在凌晨一点后调用本接口！谢谢配合！"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>故我们在调用 <code>get_url()</code>时，会返回早报的图片链接（接口正常的情况下）</p><p><strong>&gt; __init__.py</strong> </p><p>在该文件中编写各类事件响应及处理逻辑。</p><p>我通常默认阅读本文的宁具有一定python基础，故某些点不做解释</p><p>通常，最常见的开始姿势如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nonebot</span><br><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command,logger</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters.cqhttp <span class="keyword">import</span> Bot, Event, MessageSegment</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> askjson</span><br><span class="line"></span><br><span class="line">sixty=on_command(<span class="string">"60s"</span>,aliases=&#123;<span class="string">"早报"</span>,<span class="string">"六十"</span>&#125;,priority=<span class="number">2</span>,block=<span class="literal">True</span>)</span><br><span class="line"><span class="meta">@sixty.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">_</span><span class="params">(bot:Bot,event:Event,state:dict)</span>:</span></span><br><span class="line">    img_url=(<span class="keyword">await</span> askjson.get_url())</span><br><span class="line">    <span class="keyword">if</span> img_url:</span><br><span class="line">        <span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url[<span class="string">"imageUrl"</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        logger.info(<span class="string">'获取时出现错误'</span>)</span><br></pre></td></tr></table></figure><ul><li>第2行导入的<code>on_command</code> 注册一个消息类型的命令处理器，也就是说，让机器人识别你的命令需要用到他。<code>logger</code>是nb 日志记录器对象。详见： <a href="https://v2.nonebot.dev/api/log.html#logger" target="_blank" rel="external nofollow noopener noreferrer">NoneBot.log 模块</a></li></ul><ul><li><p>第7行中的写法中：</p><ol><li><code>60s</code>表示命令名</li><li><code>aliases</code> 表示命令别名，即 <code>60s</code>、<code>早报</code>、<code>六十</code> 都会响应这个事件</li><li><code>priority</code>表示优先级，数值越小越优先</li></ol></li><li><p>第8行，紧接着<code>@sixty.handle()</code> sixty被事件响应器的装饰器装饰从而成为事件响应器的事件处理函数,<code>handle()</code>是简单的为事件响应器添加一个事件处理函数，这个函数将会在上一个处理函数正常返回执行完毕后立即执行。</p></li></ul><p><strong>事件处理函数中，除<code>bot</code>外都是可选的</strong></p><ul><li><p>第10行调用我们编写的函数获取到链接，12行中<code>send()</code>函数根据<code>event</code>向触发事件的主体发送消息。<a href="https://v2.nonebot.dev/2.0.0a15/api/adapters/ding.html#async-send-event-message-at-sender-false-webhook-none-secret-none-kwargs" target="_blank" rel="external nofollow noopener noreferrer">点我查看参数</a> </p><p>  我们在注册事件时传入了Event故这里可以直接<code>sixty.send(message=xxx)</code>,我们也可以：<code>bot.send(event=Event,message=xxx)</code></p><p>其中<code>message</code>参数是我们要发送的消息，可以是纯文本 <code>message=&quot;你好&quot;</code> ，这里使用的 <code>MessageSegment</code> 是nb对cq协议的适配，可用于发送CQ码等（个人理解），即:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><p>  等价于</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure><ul><li><p>如果你要发送文本+图片，如下写法皆可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=<span class="string">"今日早报"</span>+MessageSegment.image(img_url))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"text"</span>: <span class="string">"今日早报"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: img_url</span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>现在，运行nb，向它发送<code>早报</code>看会发生什么  </p>  <p style="text-align:center;">  <a href="https://cdn.yzyyz.top/nonebot/60.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/60.png"></a> </p> <p>  成了，此时你将在nb日志界面看到</p>   <p style="text-align:center;">   <a href="https://cdn.yzyyz.top/nonebot/lognb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/lognb.png"></a></p>   <p>  其中包含了：</p><ul><li><p>消息id  <code>-765866496</code>,</p></li><li><p>消息来源 <code>1796031384</code></p></li><li><p>消息内容 <code>早报</code></p></li><li><p>事件被那个插件的Matcher处理了</p><p>在cq的日志界面看到</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/logcq.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/logcq.png"></a></p>  <p>一般情况下，使用小号来登录cq作为机器人，在发送群聊消息时，可能会出现:</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/fk.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/fk.png"></a></p>  这种情况我们称之为 `喜报`<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb.png"></a></p>  若要解决这个问题，我的建议是：看脸。 你可以使用此账号挂在cq一段时间，挂的时间真得看脸，我的号就风控过一次，几分钟就好了；或者重启cq试试。还有一种情况是：<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb2.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb2.png"></a></p>显而易见，你的账号被冻结了，我相信，屏幕前的您能收购鹅厂，您肯定不会让上述情况发生的，对吧（确信）<p style="text-align:center;"><a href="https://cdn.yzyyz.top/nonebot/xb3.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="nonebot"><img src="https://cdn.yzyyz.top/nonebot/xb3.png"></a></p></li></ul></li><li><p>tips:发送本地图片：</p><ul><li><p>利用cq+nb作为机器人发送本地图片时，若使用相对路径，要记得 路径是相对cq的 而不是相对nb项目的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> sixty.send(message=MessageSegment.image(<span class="string">"file:///路径"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rely=[&#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"image"</span>,</span><br><span class="line">      <span class="string">"data"</span>: &#123;</span><br><span class="line">      <span class="string">"file"</span>: <span class="string">"file:///路径"</span></span><br><span class="line">              &#125;</span><br><span class="line">&#125;]</span><br><span class="line"><span class="keyword">await</span> sixty.send(message=rely)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>其他</strong></p><p>官方在这里使用 <code>pydantic</code> 库对插件进行配置操作 ：<a href="https://v2.nonebot.dev/guide/creating-a-plugin.html#%E6%8E%A8%E8%8D%90%E7%BB%93%E6%9E%84-%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83" target="_blank" rel="external nofollow noopener noreferrer">点击查看</a> 。这里暂时用不到，有需要请阅读官方文档。</p><p><code>2021年12月25日00:40:40</code>待续&amp;考试加油</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;width=200px&quot;&gt;
    &lt;a href=&quot;https://raw.githubusercontent.com/nonebot/nonebot2/master/docs/.vuepress/public/logo.png&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;nonebot&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/nonebot/logo.png&quot; style=&quot;width:200px&quot;&gt;&lt;/a&gt;&lt;br&gt;QQ机器人保姆级平民搭建方法&lt;br&gt; &lt;font color=&quot;red&quot;&gt;如果你仅想使用python实现机器人的功能而不考虑其他的(黑产用途、手搓轮子之类的)，请继续阅读&lt;br&gt;如果不是 那你完全没必要读下去&lt;br&gt;如果在阅读时发现了我的错误 烦请在&lt;a href=&quot;#comments&quot;&gt;评论区&lt;/a&gt;提出&lt;br&gt;本人技术不佳 还希望来访大佬指教&lt;/font&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="机器人" scheme="https://yzyyz.top/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>森林服务器提示forest server does not seem to be set up correctly</title>
    <link href="https://yzyyz.top/archives/47744284.html"/>
    <id>https://yzyyz.top/archives/47744284.html</id>
    <published>2021-11-28T11:38:21.000Z</published>
    <updated>2021-12-20T04:59:32.707Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://cdn.yzyyz.top/fores.webp" alt="头部大图"></p><a id="more"></a><p>  最近steam促销，TheForest（迷失森林）降价于是就入了，其实是益多送的（我买完他又吧钱转给我了，我也没客气/滑稽）<img src="https://api.isoyu.com/uploads/ARU/GIF_S/0180.gif" style="    margin: 0;    display: inline;">入完之后舍友鑫源也入了，联机时出现了掉线的情况，让之前的辛苦“付之一掉线”…<br>  转念我就趁Cloudcone黑五大促买了个2H2G的VPS，结果习惯了镜像又选的Linux，linux无法开Forest的服务器（有大神用wine成功过，我学不会），rebuild只能在不同linux之间切换，鼓捣了一天也没弄成。<br>  最后就在自己电脑上开吧，反正就我俩玩，（有公网ip或内网穿透也可外网访问）。<br><strong>开服教程</strong>：<a href="https://www.bilibili.com/read/cv2135043" target="_blank" rel="external nofollow noopener noreferrer" title="The Forest / 迷失森林 | 服务器搭建参考">https://www.bilibili.com/read/cv2135043</a></p><hr><p><img src="https://cdn.yzyyz.top/forest1.png" alt="出现错误"></p><p>  开完后发现鑫源能进，而我进去显示<code>forest server does not seem to be set up correctly</code>。也是花了很长时间都没解决，最后谷歌了一下，找到了一篇老外的帖子：<br><a href="https://www.reddit.com/r/TheForest/comments/a7757z/returning_to_the_forest_cant_get_my_dedicated/" target="_blank" rel="external nofollow noopener noreferrer" title="Returning to The Forest, can&#39;t get my dedicated server up and running again">https://www.reddit.com/r/TheForest/comments/a7757z/returning_to_the_forest_cant_get_my_dedicated/</a><br>  按照评论区老哥的话去试了一下，关掉了我的<code>virtual</code>网络接口，结果就豁然开朗了！</p><blockquote><p>I had such a message, and I noticed also that the IP displayed when joining the server was not matching the IP I had on my host machine.Turns out, that writing the internal IP on the config file is not enough. It was automatically picking up another IP from a virtual network card (bug that ignores the config?).<br>So, in Windows, I disabled all network interfaces except the physical cabled one. From that point on I was able to connect.<br>TLDR:<br>1 - Double check what internal IP your server currently has.<br>2 - Make sure that the internal IP your server has is matching what is written on the server.cfg file.<br>3 - Make sure you have a manual/fixed IP on your server (otherwise it might change at some point in the future).<br>4 - In Windows (of the server), disable all other network interfaces (virtual or otherwise) apart from the one that has the desired IP.<br>Good luck.</p></blockquote><p>最后附鑫源性感黑丝：</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/forestxy.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="forest"><img src="https://cdn.yzyyz.top/forestxy.png"></a></p><p><code>视频经过压缩画质不太清晰</code></p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#3898FC","video":{"url":"https://cdn.yzyyz.top/TheForest.mp4","pic":"https://cdn.yzyyz.top/forestxy.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn.yzyyz.top/fores.webp&quot; alt=&quot;头部大图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="游戏" scheme="https://yzyyz.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取杨村近十年天气数据</title>
    <link href="https://yzyyz.top/archives/4e979541.html"/>
    <id>https://yzyyz.top/archives/4e979541.html</id>
    <published>2021-10-12T06:00:31.000Z</published>
    <updated>2021-12-20T04:59:32.768Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>杨村（杨陵）天气愈发寒冷了，以至于今天已经穿上了保暖裤[捂脸]，凭感觉来说是比去年冷的，于是就想爬一下历史的天气数据，再进行可视化（零上温度）。</p><h3 id="0"> requirements.txt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">snapshot_selenium&#x3D;&#x3D;0.0.2</span><br><span class="line">requests&#x3D;&#x3D;2.26.0</span><br><span class="line">pyecharts&#x3D;&#x3D;1.9.0</span><br><span class="line">beautifulsoup4&#x3D;&#x3D;4.10.0</span><br></pre></td></tr></table></figure><ul><li>项目地址：<a href="https://github.com/yzyyz1387/tianqi" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/tianqi</a></li></ul><h3 id="1">多线程 `th.py`：</h3><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tianqi</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Line,Page</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_th</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> tianqi.urls:</span><br><span class="line">        line=tianqi.draw(url)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multi_th</span><span class="params">()</span>:</span></span><br><span class="line">    ths=[]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> tianqi.urls:</span><br><span class="line">        ths.append(threading.Thread(target=tianqi.draw,args=(url,)))</span><br><span class="line">    <span class="keyword">for</span> th <span class="keyword">in</span> ths:</span><br><span class="line">        th.start()</span><br><span class="line">    <span class="keyword">for</span> th <span class="keyword">in</span> ths:</span><br><span class="line">        th.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># start = time.time()</span></span><br><span class="line">    <span class="comment"># single_th()</span></span><br><span class="line">    <span class="comment"># end = time.time()</span></span><br><span class="line">    <span class="comment"># print('Cost &#123;&#125; seconds'.format((end - start) / 5))</span></span><br><span class="line"></span><br><span class="line">    start = time.time()</span><br><span class="line">    multi_th()</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(<span class="string">'Cost &#123;&#125; seconds'</span>.format((end - start) / <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h3 id="2">功能实现`tianqi.py`：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Line,Page</span><br><span class="line"><span class="keyword">import</span> pyecharts.options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.render <span class="keyword">import</span> make_snapshot</span><br><span class="line"><span class="keyword">from</span> snapshot_selenium <span class="keyword">import</span> snapshot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.tianqihoubao.com/lishi/yangling/month/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ask_url</span><span class="params">(url)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWe bKit/537.36 (KHTML, like Gecko) Chrome/93.0.4544.0 Safari/537.36 Edg/93.0.933.1"</span>,</span><br><span class="line">        &#125;  <span class="comment"># 头部信息用户代理</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        html = requests.get(url,headers=headers).text</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        print(err)</span><br><span class="line">        html=err</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyze_html</span><span class="params">(url)</span>:</span></span><br><span class="line">    datalist = []</span><br><span class="line">    html =ask_url(url)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">'table'</span>, class_=<span class="string">"b"</span>):</span><br><span class="line">        item  = str(item)</span><br><span class="line">        datalist.append(item.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>))</span><br><span class="line">    weatherlist = datalist[<span class="number">0</span>].split(<span class="string">'&lt;/tr&gt;'</span>)</span><br><span class="line">    weatherlist.pop(<span class="number">0</span>)</span><br><span class="line">    weatherlist.pop(len(weatherlist)<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> weatherlist</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(url)</span>:</span></span><br><span class="line">    list=analyze_html(url)</span><br><span class="line">    temp_dic=&#123;&#125;</span><br><span class="line">    <span class="comment"># 日期</span></span><br><span class="line">    date_list=[]</span><br><span class="line">    <span class="comment"># 白天温度</span></span><br><span class="line">    temp_day=[]</span><br><span class="line">    <span class="comment"># 夜晚温度</span></span><br><span class="line">    temp_night=[]</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">        find_temp=re.compile(<span class="string">'[\u4e00-\u9fa5]&lt;/td&gt;&lt;td&gt;(.*?)℃&lt;/td&gt;&lt;td&gt;'</span>)</span><br><span class="line">        find_date=re.compile(<span class="string">'[\u4e00-\u9fa5]"&gt;(.*?)日&lt;/a&gt;'</span>)</span><br><span class="line">        find_year=re.compile(<span class="string">'[\u4e00-\u9fa5]"&gt;(.*?)月'</span>)</span><br><span class="line">        date=re.findall(find_date,item)</span><br><span class="line">        temp=re.findall(find_temp,item)</span><br><span class="line">        year=re.findall(find_year,item)[<span class="number">0</span>]</span><br><span class="line">        temp_dic[date[<span class="number">0</span>]]=temp[<span class="number">0</span>].replace(<span class="string">'℃'</span>,<span class="string">''</span>)</span><br><span class="line">        date_list.append(date[<span class="number">0</span>])</span><br><span class="line">        temp_sum=temp[<span class="number">0</span>].replace(<span class="string">'℃'</span>,<span class="string">''</span>).split(<span class="string">'/'</span>)</span><br><span class="line">        <span class="comment">#有些数据不全，没有白天的温度或者晚上的温度</span></span><br><span class="line">        <span class="keyword">if</span> temp_sum[<span class="number">0</span>]==<span class="string">''</span>:</span><br><span class="line">            print(<span class="string">'0空'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp_day.append(int(temp_sum[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">if</span> temp_sum[<span class="number">1</span>]==<span class="string">''</span>:</span><br><span class="line">            print(<span class="string">'1空'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp_night.append(int(temp_sum[<span class="number">1</span>]))</span><br><span class="line">    <span class="comment">#24H温度列表</span></span><br><span class="line">    all_temp=(temp_day+temp_night)</span><br><span class="line">    print(all_temp)</span><br><span class="line">    <span class="comment">#最高温</span></span><br><span class="line">    max_temp=int(max(all_temp))</span><br><span class="line">    <span class="comment">#最低温</span></span><br><span class="line">    min_temp=int(min(all_temp))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(temp_dic)</span></span><br><span class="line">    <span class="comment"># print(temp_day)</span></span><br><span class="line">    <span class="comment"># print(len(temp_day))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘图</span></span><br><span class="line">    line1=(</span><br><span class="line">        Line(init_opts=opts.InitOpts(bg_color=<span class="string">'#ffffff'</span>)) <span class="comment"># 生成line类型图表</span></span><br><span class="line">        .add_xaxis(date_list)</span><br><span class="line">        .add_yaxis(<span class="string">'白天'</span>,temp_day,is_smooth=<span class="literal">True</span>,</span><br><span class="line">                   markline_opts=opts.MarkLineOpts(</span><br><span class="line">                       data=[</span><br><span class="line"></span><br><span class="line">                           opts.MarkLineItem(symbol=<span class="string">"none"</span>, x=<span class="string">"90%"</span>, y=<span class="string">"max"</span>),</span><br><span class="line">                           opts.MarkLineItem(symbol=<span class="string">"circle"</span>, type_=<span class="string">"max"</span>, name=<span class="string">"最高点"</span>),</span><br><span class="line">                       ]</span><br><span class="line">                   ),</span><br><span class="line">                   )</span><br><span class="line">        .add_yaxis(<span class="string">'夜晚'</span>,temp_night,is_smooth=<span class="literal">True</span>,</span><br><span class="line">                   markline_opts=opts.MarkLineOpts(</span><br><span class="line">                       data=[</span><br><span class="line">                           opts.MarkLineItem(type_=<span class="string">"min"</span>, name=<span class="string">"最低点"</span>),</span><br><span class="line">                           opts.MarkLineItem(symbol=<span class="string">"none"</span>, x=<span class="string">"90%"</span>, y=<span class="string">"max"</span>),</span><br><span class="line">                       ]</span><br><span class="line">                   ),</span><br><span class="line">                   )</span><br><span class="line">        .set_global_opts(</span><br><span class="line">            legend_opts=opts.LegendOpts(pos_right=<span class="number">0</span>),</span><br><span class="line">            title_opts=opts.TitleOpts(title=<span class="string">'%s月温度情况'</span>%year,subtitle=<span class="string">'24H最高温度%s℃,最低温度%s℃\n部分数据存在空值'</span>%(max_temp,min_temp),pos_left=<span class="string">'center'</span>,),</span><br><span class="line">            xaxis_opts=opts.AxisOpts(</span><br><span class="line">                axistick_opts=opts.AxisTickOpts(is_align_with_label=<span class="literal">True</span>),</span><br><span class="line">                is_scale=<span class="literal">False</span>,</span><br><span class="line">                boundary_gap=<span class="literal">False</span>,</span><br><span class="line">                name=<span class="string">"日期"</span>,</span><br><span class="line">            ),</span><br><span class="line">            yaxis_opts=opts.AxisOpts(name=<span class="string">"温度(℃)"</span>),</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">make_snapshot(snapshot, line1.render(), <span class="string">"%s.png"</span>%year)</span><br><span class="line">    <span class="keyword">return</span> line1</span><br><span class="line">    <span class="comment"># line1.render('pyecharts-line.html') # 生成网页文件</span></span><br><span class="line">    <span class="comment"># make_snapshot(snapshot, line1.render(), "%s.png"%year) #渲染图片</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行此文件可将所有图表渲染在一个html文件中</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line">    start = time()</span><br><span class="line">    page = Page()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">        askurl=url+str(<span class="number">2010</span>+i+<span class="number">1</span>)+<span class="string">'10.html'</span></span><br><span class="line">        print(askurl)</span><br><span class="line">        line=draw(askurl)</span><br><span class="line">        page.add(line)</span><br><span class="line">    page.render(<span class="string">"test.html"</span>)</span><br><span class="line">    end = time()</span><br><span class="line">    print(<span class="string">'Cost &#123;&#125; seconds'</span>.format((end - start) / <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h3 id="3"> 爬取的部分数据：</h3> <script type="text/javascript" src="https://assets.pyecharts.org/assets/echarts.min.js"></script>                <div id="e87e1fbc35c747ea8f13b7d8de2cba56" class="chart-container" style="width:auto; height:500px;"></div>    <script>var chart_e87e1fbc35c747ea8f13b7d8de2cba56=echarts.init(document.getElementById("e87e1fbc35c747ea8f13b7d8de2cba56"),"white",{renderer:"canvas"});var option_e87e1fbc35c747ea8f13b7d8de2cba56={"backgroundColor":"#ffffff","animation":true,"animationThreshold":2000,"animationDuration":1000,"animationEasing":"cubicOut","animationDelay":0,"animationDurationUpdate":300,"animationEasingUpdate":"cubicOut","animationDelayUpdate":0,"color":["#c23531","#2f4554","#61a0a8","#d48265","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3","#f05b72","#ef5b9c","#f47920","#905a3d","#fab27b","#2a5caa","#444693","#726930","#b2d235","#6d8346","#ac6767","#1d953f","#6950a1","#918597"],"series":[{"type":"line","name":"\u767d\u5929","connectNulls":false,"symbolSize":4,"showSymbol":true,"smooth":true,"clip":true,"step":false,"data":[["2011\u5e7410\u670801",22],["2011\u5e7410\u670802",18],["2011\u5e7410\u670803",16],["2011\u5e7410\u670804",19],["2011\u5e7410\u670805",23],["2011\u5e7410\u670806",24],["2011\u5e7410\u670807",22],["2011\u5e7410\u670808",22],["2011\u5e7410\u670809",21],["2011\u5e7410\u670810",19],["2011\u5e7410\u670811",17],["2011\u5e7410\u670812",17],["2011\u5e7410\u670813",21],["2011\u5e7410\u670814",23],["2011\u5e7410\u670815",22],["2011\u5e7410\u670816",22],["2011\u5e7410\u670817",23],["2011\u5e7410\u670818",22],["2011\u5e7410\u670819",17],["2011\u5e7410\u670820",19],["2011\u5e7410\u670821",19],["2011\u5e7410\u670822",15],["2011\u5e7410\u670823",14],["2011\u5e7410\u670824",15],["2011\u5e7410\u670825",14],["2011\u5e7410\u670826",11],["2011\u5e7410\u670827",14],["2011\u5e7410\u670828",16],["2011\u5e7410\u670829",17],["2011\u5e7410\u670830",15],["2011\u5e7410\u670831",14]],"hoverAnimation":true,"label":{"show":true,"position":"top","margin":8},"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"},"areaStyle":{"opacity":0},"markLine":{"silent":false,"precision":2,"label":{"show":true,"position":"top","margin":8},"data":[{"xAxis":"90%","yAxis":"max","symbol":"none"},{"name":"\u6700\u9ad8\u70b9","type":"max","symbol":"circle"}]},"zlevel":0,"z":0},{"type":"line","name":"\u591c\u665a","connectNulls":false,"symbolSize":4,"showSymbol":true,"smooth":true,"clip":true,"step":false,"data":[["2011\u5e7410\u670801",14],["2011\u5e7410\u670802",13],["2011\u5e7410\u670803",12],["2011\u5e7410\u670804",11],["2011\u5e7410\u670805",10],["2011\u5e7410\u670806",10],["2011\u5e7410\u670807",10],["2011\u5e7410\u670808",13],["2011\u5e7410\u670809",14],["2011\u5e7410\u670810",14],["2011\u5e7410\u670811",13],["2011\u5e7410\u670812",12],["2011\u5e7410\u670813",9],["2011\u5e7410\u670814",7],["2011\u5e7410\u670815",7],["2011\u5e7410\u670816",9],["2011\u5e7410\u670817",8],["2011\u5e7410\u670818",10],["2011\u5e7410\u670819",9],["2011\u5e7410\u670820",11],["2011\u5e7410\u670821",11],["2011\u5e7410\u670822",10],["2011\u5e7410\u670823",10],["2011\u5e7410\u670824",10],["2011\u5e7410\u670825",7],["2011\u5e7410\u670826",9],["2011\u5e7410\u670827",7],["2011\u5e7410\u670828",7],["2011\u5e7410\u670829",7],["2011\u5e7410\u670830",7],["2011\u5e7410\u670831",9]],"hoverAnimation":true,"label":{"show":true,"position":"top","margin":8},"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"},"areaStyle":{"opacity":0},"markLine":{"silent":false,"precision":2,"label":{"show":true,"position":"top","margin":8},"data":[{"name":"\u6700\u4f4e\u70b9","type":"min"},{"xAxis":"90%","yAxis":"max","symbol":"none"}]},"zlevel":0,"z":0}],"legend":[{"data":["\u767d\u5929","\u591c\u665a"],"selected":{"\u767d\u5929":true,"\u591c\u665a":true},"show":true,"right":0,"padding":5,"itemGap":10,"itemWidth":25,"itemHeight":14}],"tooltip":{"show":true,"trigger":"item","triggerOn":"mousemove|click","axisPointer":{"type":"line"},"showContent":true,"alwaysShowContent":false,"showDelay":0,"hideDelay":100,"textStyle":{"fontSize":14},"borderWidth":0,"padding":5},"xAxis":[{"name":"\u65e5\u671f","show":true,"scale":false,"nameLocation":"end","nameGap":15,"gridIndex":0,"axisTick":{"show":true,"alignWithLabel":true,"inside":false},"inverse":false,"offset":0,"splitNumber":5,"boundaryGap":false,"minInterval":0,"splitLine":{"show":false,"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"}},"data":["2011\u5e7410\u670801","2011\u5e7410\u670802","2011\u5e7410\u670803","2011\u5e7410\u670804","2011\u5e7410\u670805","2011\u5e7410\u670806","2011\u5e7410\u670807","2011\u5e7410\u670808","2011\u5e7410\u670809","2011\u5e7410\u670810","2011\u5e7410\u670811","2011\u5e7410\u670812","2011\u5e7410\u670813","2011\u5e7410\u670814","2011\u5e7410\u670815","2011\u5e7410\u670816","2011\u5e7410\u670817","2011\u5e7410\u670818","2011\u5e7410\u670819","2011\u5e7410\u670820","2011\u5e7410\u670821","2011\u5e7410\u670822","2011\u5e7410\u670823","2011\u5e7410\u670824","2011\u5e7410\u670825","2011\u5e7410\u670826","2011\u5e7410\u670827","2011\u5e7410\u670828","2011\u5e7410\u670829","2011\u5e7410\u670830","2011\u5e7410\u670831"]}],"yAxis":[{"name":"\u6e29\u5ea6(\u2103)","show":true,"scale":false,"nameLocation":"end","nameGap":15,"gridIndex":0,"inverse":false,"offset":0,"splitNumber":5,"minInterval":0,"splitLine":{"show":false,"lineStyle":{"show":true,"width":1,"opacity":1,"curveness":0,"type":"solid"}}}],"title":[{"text":"2011\u5e7410\u6708\u6e29\u5ea6\u60c5\u51b5","subtext":"24H\u6700\u9ad8\u6e29\u5ea624\u2103,\u6700\u4f4e\u6e29\u5ea67\u2103\n\u90e8\u5206\u6570\u636e\u5b58\u5728\u7a7a\u503c","left":"center","padding":5,"itemGap":10}]};chart_e87e1fbc35c747ea8f13b7d8de2cba56.setOption(option_e87e1fbc35c747ea8f13b7d8de2cba56);    </script><p>实现比较简单，访问网页获取数据<code>ask_url()</code>，再对数据进行提取分析<code>analyze_html()</code>,最后渲染网页或渲染图片<code>draw</code>。</p><p>值得一提的是，本次使用了<a href="https://pyecharts.org/#/zh-cn/" target="_blank" rel="external nofollow noopener noreferrer">pyecharts</a>，跟此前我在学Flask与数据可视化中的<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="external nofollow noopener noreferrer">ECharts</a>相似，其官方文档写到：<code>当数据分析遇上数据可视化时，pyecharts 诞生了</code>。</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/11-21mo10temp.png" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="py"><img src="https://cdn.yzyyz.top/11-21mo10temp.png"></a></p><p>从折线堆叠图中可以看到，（我也不知道能看出来啥）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;杨村（杨陵）天气愈发寒冷了，以至于今天已经穿上了保暖裤[捂脸]，凭感觉来说是比去年冷的，于是就想爬一下历史的天气数据，再进行可视化（零上温度）。&lt;/p&gt;
&lt;h3 id=&quot;0&quot;&gt; requirements.txt&lt;/h3&gt;

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;snapshot_selenium&amp;#x3D;&amp;#x3D;0.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;requests&amp;#x3D;&amp;#x3D;2.26.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pyecharts&amp;#x3D;&amp;#x3D;1.9.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;beautifulsoup4&amp;#x3D;&amp;#x3D;4.10.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;项目地址：&lt;a href=&quot;https://github.com/yzyyz1387/tianqi&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://github.com/yzyyz1387/tianqi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1&quot;&gt;多线程 `th.py`：&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>基于Flask框架的随机文章网站</title>
    <link href="https://yzyyz.top/archives/278293dc.html"/>
    <id>https://yzyyz.top/archives/278293dc.html</id>
    <published>2021-08-27T07:20:47.000Z</published>
    <updated>2021-08-27T07:34:53.356Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>项目地址：<a href="https://github.com/yzyyz1387/storys/" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/storys/</a></li><li>示例地址：<a href="https://story.nwafu.ac.cn/" target="_blank" rel="external nofollow noopener noreferrer">https://story.nwafu.ac.cn/</a></li></ul><a id="more"></a><ul><li>关于页面：<a href="https://story.nwafu.ac.cn/about" target="_blank" rel="external nofollow noopener noreferrer">https://story.nwafu.ac.cn/about</a></li><li>网站背景图片来自<a href="https://www.bing.com/?mkt=zh-CN" target="_blank" rel="external nofollow noopener noreferrer">Bing每日图片</a></li><li>故事内容所用字体为<a href="http://www.tsanger.cn/" target="_blank" rel="external nofollow noopener noreferrer">苍耳今楷</a></li><li>创建设想本站故事多与感情相关，也会收录其他内容</li><li>若所用内容涉及侵权，请联系我们删除内容</li><li>用户利用简短的琐碎时间即可完成一次阅读，珍惜美好时光，改善阅读习惯</li><li>联系我们： <a href="mailto:youzyyz1384@qq.com" rel="external nofollow noopener noreferrer" target="_blank">youzyyz1384@qq.com</a></li><li>文章投稿：<a href="https://github.com/yzyyz1387/storys/issues" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/storys/issues</a></li></ul><p>每次刷新网页都会随机一个故事，故事储存在根目录<code>story</code>文件下，每个故事格式为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">!story</span><br><span class="line">【标题】</span><br><span class="line">【作者】</span><br><span class="line">【来源链接】</span><br><span class="line">【来源】</span><br><span class="line">【内容】</span><br><span class="line">story!</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;项目地址：&lt;a href=&quot;https://github.com/yzyyz1387/storys/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://github.com/yzyyz1387/storys/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;示例地址：&lt;a href=&quot;https://story.nwafu.ac.cn/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://story.nwafu.ac.cn/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>VisualData项目补充</title>
    <link href="https://yzyyz.top/archives/9ce8dfe4.html"/>
    <id>https://yzyyz.top/archives/9ce8dfe4.html</id>
    <published>2021-07-25T09:20:34.000Z</published>
    <updated>2021-07-29T03:46:05.398Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="hljs">一、Highlight.js网页代码高亮</h3><p>项目关于页面使用了<a href="https://highlightjs.org/" target="_blank" rel="external nofollow noopener noreferrer">highlight.js</a>来让代码高亮<br>地址：<a href="http://vd.yzyyz.top/team" target="_blank" rel="external nofollow noopener noreferrer">http://vd.yzyyz.top/team</a></p><h3 id="msg">二、Python实现的简单留言功能</h3><p>地址：<a href="http://vd.yzyyz.top/inmsg" target="_blank" rel="external nofollow noopener noreferrer">http://vd.yzyyz.top/inmsg</a></p><p>项目源码：源码：<a href="https://github.com/yzyyz1387/flask-visualData-practice" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/flask-visualData-practice</a></p><p>在原先基础上增加了留言页面，原理较为简单，也没互斥锁自旋锁等，基于Flask框架，从网页传递表单数据，存入数据库，再显示出来,源码：</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ...</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">#留言页面</span></span><br><span class="line"><span class="meta">@app.route("/msg",methods=['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">msg</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        msg = request.form</span><br><span class="line">        saveMsg(msg,<span class="string">'msg.db'</span>)</span><br><span class="line">        smsg=showmsg()</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"test1.html"</span>,smsg=smsg)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        smsg=showmsg()</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"test1.html"</span>,smsg=smsg)</span><br><span class="line"></span><br><span class="line"><span class="comment">#留言页面</span></span><br><span class="line"><span class="meta">@app.route('/inmsg')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inputmsg</span><span class="params">()</span>:</span></span><br><span class="line">    smsg=showmsg()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'test1.html'</span>,smsg=smsg)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建留言数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createtable</span><span class="params">(path)</span>:</span></span><br><span class="line">    sql = <span class="string">'''</span></span><br><span class="line"><span class="string">       create table msgs</span></span><br><span class="line"><span class="string">       ( id integer primary key autoincrement,</span></span><br><span class="line"><span class="string">       username text,</span></span><br><span class="line"><span class="string">       email text,</span></span><br><span class="line"><span class="string">       msg text,</span></span><br><span class="line"><span class="string">       msgtime text</span></span><br><span class="line"><span class="string">       )</span></span><br><span class="line"><span class="string">       '''</span></span><br><span class="line">    conn = sqlite3.connect(path)</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    cur.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#储存留言，传入表单信息和数据库路径</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveMsg</span><span class="params">(msglist,dbpath)</span>:</span></span><br><span class="line">    now = time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime())</span><br><span class="line">    <span class="comment"># 连接数据库</span></span><br><span class="line">    conn = sqlite3.connect(dbpath)</span><br><span class="line">    cur=conn.cursor()</span><br><span class="line">    <span class="comment">#建个空列表存数据</span></span><br><span class="line">    data=[]</span><br><span class="line">    <span class="keyword">for</span> ii <span class="keyword">in</span> msglist.items():</span><br><span class="line">        data.append(ii[<span class="number">1</span>])</span><br><span class="line">    data.append(now)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">        data[i]=<span class="string">'"'</span>+data[i]+<span class="string">'"'</span></span><br><span class="line">        <span class="comment">#加双引号</span></span><br><span class="line">    sql=<span class="string">'''</span></span><br><span class="line"><span class="string">            insert into msgs (username,email,msg,msgtime)</span></span><br><span class="line"><span class="string">            values(%s)</span></span><br><span class="line"><span class="string">            '''</span>%<span class="string">","</span>.join(data)</span><br><span class="line">    <span class="comment">#上面用英文逗号连接要写入的内容</span></span><br><span class="line">    <span class="comment"># print(sql)</span></span><br><span class="line">    <span class="comment">#打印一手，测试用</span></span><br><span class="line">    cur.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示留言</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showmsg</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">'msg.db'</span>) == <span class="literal">True</span>:</span><br><span class="line">        <span class="comment">#空列表存数据</span></span><br><span class="line">        datalist = []</span><br><span class="line">        <span class="comment">#连接数据库</span></span><br><span class="line">        conn = sqlite3.connect(<span class="string">"msg.db"</span>)</span><br><span class="line">        cur = conn.cursor()</span><br><span class="line">        sql = <span class="string">'''</span></span><br><span class="line"><span class="string">        select * from msgs</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        data = cur.execute(sql)</span><br><span class="line">        <span class="comment">#data出来是sqlite的对象，遍历，加入列表datalist</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">            datalist.append(item)</span><br><span class="line">        conn.commit()</span><br><span class="line">        cur.close()</span><br><span class="line">        conn.commit()</span><br><span class="line">        conn.close()</span><br><span class="line">        smsgdata=datalist</span><br><span class="line">        <span class="comment">#记得用了好几个datalist了，写个smsgdata用一下（ShowMsgData）</span></span><br><span class="line">        <span class="keyword">return</span> smsgdata</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        createtable(<span class="string">'msg.db'</span>)</span><br><span class="line">        datalist = []</span><br><span class="line">        conn = sqlite3.connect(<span class="string">"msg.db"</span>)</span><br><span class="line">        cur = conn.cursor()</span><br><span class="line">        sql = <span class="string">'''</span></span><br><span class="line"><span class="string">                select * from msgs</span></span><br><span class="line"><span class="string">                '''</span></span><br><span class="line">        data = cur.execute(sql)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">            datalist.append(item)</span><br><span class="line">        conn.commit()</span><br><span class="line">        cur.close()</span><br><span class="line">        conn.commit()</span><br><span class="line">        conn.close()</span><br><span class="line">        smsgdata = datalist</span><br><span class="line">        <span class="keyword">return</span> smsgdata</span><br></pre></td></tr></table></figure><p>html显示留言部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> &#123;% for v in smsg %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6 mb-4"</span> <span class="attr">data-aos</span>=<span class="string">"fade-up"</span> <span class="attr">data-aos-delay</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"service d-flex h-100"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"svg-icon"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 楼层 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; v[0] &#125;&#125;楼<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"service-about"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 用户名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; v[1] &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--留言内容 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; v[3] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--留言时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size: 10px"</span>&gt;</span>留言于：&#123;&#123; v[4] &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>html表单部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#表单任意内容不能为空</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">myCheck</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">document</span>.msgform.elements.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">document</span>.msgform.elements[i].value == <span class="string">""</span>) &#123;</span><br><span class="line">              alert(<span class="string">"留言信息不能有空项哦~~"</span>);</span><br><span class="line">              <span class="built_in">document</span>.msgform.elements[i].focus();</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">`</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;&#123; url_for('msg') &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"msgform"</span> <span class="attr">name</span>=<span class="string">"msgform"</span> <span class="attr">onSubmit</span>=<span class="string">"return myCheck()"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin: 25px"</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"输入昵称"</span> <span class="attr">minlength</span>=<span class="string">"2"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"margin: 10px;"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"输入邮箱"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">style</span>=<span class="string">"margin: 10px;"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"messg"</span> <span class="attr">placeholder</span>=<span class="string">"说点什么吧~~"</span> <span class="attr">minlength</span>=<span class="string">"5"</span> <span class="attr">maxlength</span>=<span class="string">"100"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"messg"</span> <span class="attr">style</span>=<span class="string">"margin: 10px;height: 50px"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">onclick</span>=<span class="string">"isEmpty()"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hljs&quot;&gt;一、Highlight.js网页代码高亮&lt;/h3&gt;

&lt;p&gt;项目关于页面使用了&lt;a href=&quot;https://highlightjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;highlight.js&lt;/a&gt;来让代码高亮&lt;br&gt;地址：&lt;a href=&quot;http://vd.yzyyz.top/team&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;http://vd.yzyyz.top/team&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;msg&quot;&gt;二、Python实现的简单留言功能&lt;/h3&gt;

&lt;p&gt;地址：&lt;a href=&quot;http://vd.yzyyz.top/inmsg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;http://vd.yzyyz.top/inmsg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目源码：源码：&lt;a href=&quot;https://github.com/yzyyz1387/flask-visualData-practice&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://github.com/yzyyz1387/flask-visualData-practice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在原先基础上增加了留言页面，原理较为简单，也没互斥锁自旋锁等，基于Flask框架，从网页传递表单数据，存入数据库，再显示出来,源码：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫（四）- 小项目完结</title>
    <link href="https://yzyyz.top/archives/65627bf1.html"/>
    <id>https://yzyyz.top/archives/65627bf1.html</id>
    <published>2021-07-23T00:50:31.000Z</published>
    <updated>2021-07-29T03:46:30.459Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>2021年7月24日</code></p><p>项目涵盖：</p><ul><li>Python中urllib、sqlite3、bs4、re等</li><li>Flask库</li><li>EChart</li><li>wordcloud</li><li>highlight.js</li><li>…..</li></ul><p>项目地址:<a href="https://github.com/yzyyz1387/flask-visualData-practice" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/flask-visualData-practice</a> （网页来源于网络源码，做了部分修改）</p><p>访问地址(或因博客更新不及时导致无法访问)：<a href="http://vd.yzyyz.top/" target="_blank" rel="external nofollow noopener noreferrer">http://vd.yzyyz.top/</a></p><a id="more"></a><h3 id="echarts">ECHARTS</h3><p>运用<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="external nofollow noopener noreferrer">ECharts</a>可对手中的数据进行可视化，详见其官网：<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="external nofollow noopener noreferrer">https://echarts.apache.org/zh/index.html</a>，可根据文档进行使用。以下是一个例子：</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script><div id="main" style="width: auto;height:250px;"></div><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('main'));        // 指定图表的配置项和数据        var option = {            title: {                text: 'ECharts 入门示例'            },grid: {right:'3%',left:'3%',},                tooltip:{        show:true,    },            legend: {                data:['销量']            },            xAxis: {                data: ["衬衫","羊毛衫","雪纺衫","裤子","高跟鞋","袜子"]            },            yAxis: {},            series: [{                name: '销量',                type: 'bar',                data: [5, 20, 36, 10, 10, 20]            }]        };        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><h3 id="wordcloud">WordCloud</h3><p>我的需求较为简单，这里不做赘述，WordCloud:<a href="http://amueller.github.io/word_cloud/" target="_blank" rel="external nofollow noopener noreferrer">http://amueller.github.io/word_cloud/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud  <span class="comment">#词云</span></span><br><span class="line"><span class="keyword">import</span> jieba  <span class="comment">#分词</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt  <span class="comment">#绘图 数据可视化</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image <span class="comment">#图像处理</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#连接数据库获取数据</span></span><br><span class="line">conn = sqlite3.connect(<span class="string">'movie.db'</span>)</span><br><span class="line">cur= conn.cursor()</span><br><span class="line">sql =<span class="string">'''</span></span><br><span class="line"><span class="string">select dec from movie250</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">data=cur.execute(sql)</span><br><span class="line">text=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">    text = text+item[<span class="number">0</span>]</span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分词</span></span><br><span class="line">cut = jieba.cut(text)</span><br><span class="line">string=<span class="string">" "</span>.join(cut)</span><br><span class="line">print(len(string))</span><br><span class="line"></span><br><span class="line"><span class="comment">#绘图遮罩配置等</span></span><br><span class="line">img=Image.open(<span class="string">r'.\static\asstes\test.jpg'</span>)</span><br><span class="line">imgarray=np.array(img)</span><br><span class="line">wc=WordCloud(</span><br><span class="line">    background_color=<span class="string">'#ffffff'</span>,</span><br><span class="line">    mask=imgarray,</span><br><span class="line">    font_path=<span class="string">"msyh.ttc"</span>,</span><br><span class="line">)</span><br><span class="line">wc.generate_from_text(string)</span><br><span class="line"></span><br><span class="line"><span class="comment">#绘制</span></span><br><span class="line">fig=plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.imshow(wc)</span><br><span class="line">plt.axis(<span class="string">'off'</span>)   <span class="comment">#是否显示坐标轴</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line">wc.to_file(<span class="string">'static/asstes/word.jpg'</span>)  <span class="comment">#保存图片</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;2021年7月24日&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;项目涵盖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python中urllib、sqlite3、bs4、re等&lt;/li&gt;
&lt;li&gt;Flask库&lt;/li&gt;
&lt;li&gt;EChart&lt;/li&gt;
&lt;li&gt;wordcloud&lt;/li&gt;
&lt;li&gt;highlight.js&lt;/li&gt;
&lt;li&gt;…..&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/yzyyz1387/flask-visualData-practice&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://github.com/yzyyz1387/flask-visualData-practice&lt;/a&gt; （网页来源于网络源码，做了部分修改）&lt;/p&gt;
&lt;p&gt;访问地址(或因博客更新不及时导致无法访问)：&lt;a href=&quot;http://vd.yzyyz.top/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;http://vd.yzyyz.top/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫（三）</title>
    <link href="https://yzyyz.top/archives/8b16a951.html"/>
    <id>https://yzyyz.top/archives/8b16a951.html</id>
    <published>2021-07-22T07:04:24.000Z</published>
    <updated>2021-12-20T04:59:32.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="sql">Flask框架基础</h3><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/flask.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="py"><img src="https://cdn.yzyyz.top/img/flask.jpg"></a></p><p>这篇文章给我写的很难受，以为文中提到的代码例子跟博客的渲染器有冲突，改了半天……</p><a id="more"></a><h4 id="base">开始</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flaskProject</span><br><span class="line">  ├─static</span><br><span class="line">  ├─templates</span><br><span class="line">  ├─app.py</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;用 <strong>Pycharm</strong>  新建一个Flask项目，在生成的文件中，会自动生成如上目录和app.py文件，该文件内容默认为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"></span><br><span class="line"><span class="comment">#Flask接受一个__name__参数</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment">#@装饰器进行路由映射</span></span><br><span class="line"><span class="meta">@app.route('/')  #路由</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;该文件就是最简单的Flask项目了，运行，默认在127.0.0.1:5000<br>/可进行访问</p><p>&nbsp;&nbsp;&nbsp;&nbsp;目录中templates用于存放需要渲染的网页，渲染网页需要导入 <code>render_template</code>，static用于存放css、js等资源文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#导入，render_template用于渲染网页，request用于请求</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"></span><br><span class="line"><span class="comment">#Flask接受一个__name__参数</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment">#@装饰器进行路由映射</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#run()方法启动WEB服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h4 id="postget">传入参数</h4><h5 id="str">传入字符串</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;当我们有 用户访问127.0.0.1/user/xxx，服务器进行响应时：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@app.route('/user/&lt;text&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcome</span><span class="params">(name)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'welcome%d'</span>%name</span><br></pre></td></tr></table></figure><h5 id="int">传入整型</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;当我们有 用户访问127.0.0.1/id/00001，服务器进行响应时：(当然也有浮点型：<code>&lt;float:xxx&gt;</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@app.route('/user/&lt;int:userid&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">welcome2</span><span class="params">(userid)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'welcome%s'</span>%userid</span><br></pre></td></tr></table></figure><h5 id="bianliang">传入变量：普通变量、列表、字典</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;通过flask向网页传递参数例子如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    title=<span class="string">'我是网页标题'</span></span><br><span class="line">    list=[<span class="string">'赵'</span>,<span class="string">'钱'</span>,<span class="string">'孙'</span>,<span class="string">'李'</span>]</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>,list=list,title=title)</span><br><span class="line">    <span class="comment">#上一行中render_template就是对index.html进行渲染</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;这里我们传入了 <code>字符串 title</code> 和 <code>列表list</code>,那么在网页中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh_CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Flask学习<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    成员：<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    &#123;% for name in list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">可以看出，传入的内容在html中用&#123;&#123;  &#125;&#125; 包裹,flask就会对其进行渲染</span></span><br><span class="line"><span class="comment">for循环则用  &#123;% for xxxx in xxx%&#125;, 以&#123;% endfor %&#125;结束。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;还可传入字典<code>dic={&#39;username&#39;:&#39;admin&#39;,&#39;password&#39;:&#39;123456&#39;}</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;在html中调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">&#123; % for key,values in result.items() %&#125;</span><br><span class="line">&#123;&#123; user &#125;&#125;</span><br><span class="line">&#123;&#123; pass &#125;&#125;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&#123;%endfor%&#125;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h5 id="form">表单提交</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;POST或GET<br>假设访问登录：<br>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@app.route("/login")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"/login.html"</span>)</span><br></pre></td></tr></table></figure><p>login.html:action中的<code>url_for(&#39;loginre&#39;)</code>是自动获取路径下的<strong>/loginre</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;&#123; url_for('loginre') &#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><hr><p>loginre : 注意其中的 ** methods=[‘POST’,’GET’] <strong>， 并使用</strong>request**</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@app.route("/loginre" ,methods=['POST','GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loginre</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method==<span class="string">'POST'</span>:</span><br><span class="line">        result=request.form</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"/loginre.html"</span>,result=result)</span><br></pre></td></tr></table></figure><p> loginre.html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for un,pw in result.items() %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; un &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; pw &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">&#123;% endfor%&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;sql&quot;&gt;Flask框架基础&lt;/h3&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/flask.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;py&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/flask.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这篇文章给我写的很难受，以为文中提到的代码例子跟博客的渲染器有冲突，改了半天……&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫（二）</title>
    <link href="https://yzyyz.top/archives/c6080a03.html"/>
    <id>https://yzyyz.top/archives/c6080a03.html</id>
    <published>2021-07-20T16:21:35.000Z</published>
    <updated>2021-12-20T04:59:32.808Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="sql">SQL基础语法</h3><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/python.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="py"><img src="https://cdn.yzyyz.top/img/python.jpg"></a></p><a id="more"></a><p>以下是简单的建表操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import sqlite3  <span class="comment">#导入库</span></span><br><span class="line">conn=sqlite3.connect('test1.db') <span class="comment">#连接数据库</span></span><br><span class="line">print('连接数据库成功')</span><br><span class="line">c=conn.cursor() <span class="comment">#获取游标</span></span><br><span class="line">sql='''</span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> compny</span><br><span class="line">        (<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">        <span class="keyword">name</span> <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">        age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">        address <span class="built_in">char</span>(<span class="number">50</span>),</span><br><span class="line">        salary <span class="built_in">real</span></span><br><span class="line">        );</span><br><span class="line">'''   <span class="comment">#sql语句</span></span><br><span class="line">c.execute(<span class="keyword">sql</span>)   <span class="comment">#获取游标</span></span><br><span class="line">conn.commit()   <span class="comment">#提交数据库操作</span></span><br><span class="line">conn.close()   <span class="comment">#关闭连接</span></span><br><span class="line">print(<span class="string">'成功建表'</span>)</span><br></pre></td></tr></table></figure><p>以下则是查询操作，返回info为python数组对象</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">sql="<span class="keyword">select</span> * <span class="keyword">from</span> compy<span class="string">"</span></span><br><span class="line"><span class="string">data=c.execyte(sql)</span></span><br><span class="line"><span class="string">for info in data:</span></span><br><span class="line"><span class="string">    print(info)</span></span><br><span class="line"><span class="string">....</span></span><br></pre></td></tr></table></figure><p>执行结果</p><blockquote><p>(0, ‘2’, 18, ‘zjjjjj’, 0.0)<br>(3, ‘2’, 210, ‘新疆’, 1.0)<br>(4, ‘2’, 20, ‘陕西’, 1.0)<br>(5, ‘2’, 20, ‘安徽’, 1.0)<br>(6, ‘2’, 20, ‘河南’, 1.0)</p></blockquote><hr><p><strong>sql语句大小写不敏感</strong></p><h3 id="add">insert插入（增）</h3><h4 id="insert">insert  into  表名  values(值1，值...)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span>  compny  <span class="keyword">values</span>(<span class="number">1</span>，<span class="string">'陕西省'</span>，<span class="number">400123123</span>)</span><br></pre></td></tr></table></figure><h3 id="del">delete删除（删）</h3><h4 id="del">delete  from  表名  where  字段名 = 值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span>  <span class="keyword">from</span>  compny <span class="keyword">where</span>  <span class="keyword">id</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="update">update更新（改）</h3><h4 id="update">update  表名  set  字段名  =  新值  where  字段名  =   旧值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span>  compny  <span class="keyword">set</span>  address  =  <span class="string">"新疆"</span>  <span class="keyword">where</span>  address  =   <span class="string">"陕西"</span></span><br></pre></td></tr></table></figure><h3 id="find">select查询（查）</h3><h4 id="select1">select  字段名  from  表名</h4><p>此种查询只列出你所需要查询的字段,查询多个以 <strong>,</strong>隔开</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span>  <span class="keyword">id</span>  <span class="keyword">from</span>  compny</span><br></pre></td></tr></table></figure><h4 id="select2">select  *  from  表名</h4>查询出此表的所有字段<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span>  *  <span class="keyword">from</span>  compny</span><br></pre></td></tr></table></figure><h4 id="select3">distinct关键字</h4><p>select  distinct  字段名  from  表名</p><p><strong>给查询的结果去重</strong></p><h3 id="where">where条件语句</h3><p>在末尾加 <code>where</code> 表示条件，例如：</p><p>select  *  from  表名  where  字段名 = 值</p><p>=, &gt;, &lt;, &gt;=, &lt;=, &lt;&gt;(不等于)都适用于where</p><h3 id="andor">and  or运算符</h3><p>and 和 or 可在 where 子语句中把两个或多个条件结合起来3</p><p>and:</p><h4 id="and">select  *  from  表名  where  条件1  and  条件2</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> compny</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">0</span> <span class="keyword">and</span> address = <span class="string">"新疆"</span></span><br></pre></td></tr></table></figure><h4 id="or">select  *  from  表名  where  条件1  and  条件2</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> compny</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">0</span> <span class="keyword">or</span> address = <span class="string">"新疆"</span></span><br></pre></td></tr></table></figure><h3 id="in">in</h3><p>where  字段名 in 值<br>where  字段名 in (值1,值2,值3….)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> compny</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="between">between</h3><p>select  *  from  表名  where  字段名  between  左范围  and  右范围</p><p><code>左右都为闭</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> compny</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="limit">limit规定返回数目</h3><p>select  *  from  表名  limit  2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  *  <span class="keyword">from</span>  compny  <span class="keyword">limit</span>  <span class="number">1</span></span><br></pre></td></tr></table></figure><p>将只返回一条记录</p><h3 id="orderby">orderby排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> compny</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span></span><br></pre></td></tr></table></figure><p>将按照id排序</p><h3 id="like">like与通配符排序</h3><table><thead><tr><th>通配符</th><th>描述</th></tr></thead><tbody><tr><td>%</td><td>代表零个或多个字符</td></tr><tr><td>_</td><td>仅替代一个字符</td></tr><tr><td>[charlist]</td><td>字符列中的任何单一字符</td></tr><tr><td>[^charlist] 或者 [!charlist]</td><td>不在字符列中的任何单一字符</td></tr></tbody></table><p><strong><h4 id="bfz">%</h4></strong></p><p>adderss有<strong>“新”</strong>开始的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> compny</span><br><span class="line"><span class="keyword">WHERE</span> address <span class="keyword">LIKE</span> <span class="string">'新%'</span></span><br></pre></td></tr></table></figure><p>id包含<strong>“1”</strong>的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> compny</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">LIKE</span> <span class="string">'%1%'</span></span><br></pre></td></tr></table></figure><p><strong><h4 id="xhx">_</h4></strong></p><p><strong>_</strong>  代表一个字符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> compny</span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">number</span> <span class="keyword">LIKE</span> <span class="string">'400_1_1'</span></span><br></pre></td></tr></table></figure><p><strong><h4 id="charlist">sqlite3中[charlist]不能获取结果</h4></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;sql&quot;&gt;SQL基础语法&lt;/h3&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/python.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;py&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/python.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫（一）</title>
    <link href="https://yzyyz.top/archives/f61ee6db.html"/>
    <id>https://yzyyz.top/archives/f61ee6db.html</id>
    <published>2021-07-19T04:21:26.000Z</published>
    <updated>2021-12-20T04:59:32.837Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/python.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="py"><img src="https://cdn.yzyyz.top/img/python.jpg"></a></p><a id="more"></a><p>&nbsp;&nbsp;&nbsp;&nbsp;以豆瓣TOP250为例 <a href="https://movie.douban.com/top250" target="_blank" rel="external nofollow noopener noreferrer">https://movie.douban.com/top250</a> ，该网页包含250条电影内容，25条为一页，每页链接为 <code>https://movie.douban.com/top250?start=</code> 传入参数可为包含的任何数，按照25条一页，传入参数为 <code>0 25 50 ... 225</code> </p><hr><h3 id="start">调用库</h3><p>需要用到以下库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup       <span class="comment">#网页解析，获取数据</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> xlwt         <span class="comment">#excel操作</span></span><br><span class="line"><span class="keyword">import</span> re           <span class="comment">#正则，匹配文字</span></span><br><span class="line"><span class="keyword">import</span> sqlite3      <span class="comment">#数据库操作</span></span><br></pre></td></tr></table></figure><h3 id="askurl">请求网页</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">askUrl</span><span class="params">(url)</span>:</span>  <span class="comment">#请求网页 返回html</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWe bKit/537.36 (KHTML, like Gecko) Chrome/93.0.4544.0 Safari/537.36 Edg/93.0.933.1"</span>,</span><br><span class="line">    &#125;<span class="comment">#头部信息用户代理</span></span><br><span class="line">    request = urllib.request.Request(url,headers=headers)  <span class="comment">#对象</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = urllib.request.urlopen(request)  <span class="comment">#获取</span></span><br><span class="line">        html = response.read().decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">"出现错误"</span>,err)</span><br><span class="line">    <span class="keyword">return</span> html</span><br></pre></td></tr></table></figure><h3 id="getdata">获取数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用re库匹配的对象</span></span><br><span class="line"></span><br><span class="line">findLink=re.compile(<span class="string">r'&lt;a href="(.*?)"&gt;'</span>)</span><br><span class="line">findImg=re.compile(<span class="string">r'&lt;img.*src="(.*?)"'</span>,re.S) <span class="comment">#re.S忽略换行符</span></span><br><span class="line">fingTitle=re.compile(<span class="string">r'&lt;span class="title"&gt;(.*?)&lt;/span&gt;'</span>)</span><br><span class="line">fingRating=re.compile(<span class="string">r'&lt;span class="rating_num" property="v:average"&gt;(.*?)&lt;/span&gt;'</span>)</span><br><span class="line">findCNumber=re.compile(<span class="string">r'&lt;span&gt;(\d*)人评价&lt;/span&gt;'</span>)</span><br><span class="line">findDics=re.compile(<span class="string">r'&lt;span class="inq"&gt;(.*?)&lt;/span&gt;'</span>,re.S)</span><br><span class="line">findInfo=re.compile(<span class="string">r'&lt;p class=""&gt;(.*?)&lt;/p&gt;'</span>,re.S)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getData</span><span class="params">(baseurl)</span>:</span>  <span class="comment">#获取数据</span></span><br><span class="line">    datalist=[]   <span class="comment">#总数据列表</span></span><br><span class="line">    c=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):  <span class="comment">#10次获取，一页25条</span></span><br><span class="line">        url=baseurl+str(i*<span class="number">25</span>)</span><br><span class="line">        html=askUrl(url)</span><br><span class="line">        soup = BeautifulSoup(html,<span class="string">"lxml"</span>) <span class="comment">#BeautifulSoup解析</span></span><br><span class="line">        data = []    <span class="comment">#用于保存一部的信息</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">'div'</span> , class_=<span class="string">"item"</span>):</span><br><span class="line">            <span class="comment">#print(item)   #测试</span></span><br><span class="line">            item=str(item)</span><br><span class="line">            link=re.findall(findLink, item)[<span class="number">0</span>]</span><br><span class="line">            img=re.findall(findImg,item)[<span class="number">0</span>]</span><br><span class="line">            title=re.findall(fingTitle,item)</span><br><span class="line">            ranting=re.findall(fingRating,item)[<span class="number">0</span>]</span><br><span class="line">            cnumber=re.findall(findCNumber,item)[<span class="number">0</span>]</span><br><span class="line">            dic = re.findall(findDics, item)</span><br><span class="line">            info = re.findall(findInfo,item)[<span class="number">0</span>]</span><br><span class="line">            info=re.sub(<span class="string">'&lt;br(\s+)?/&gt;(/s+)?'</span>,<span class="string">""</span>,info)</span><br><span class="line">            info=re.sub(<span class="string">'/'</span>,<span class="string">""</span>,info)</span><br><span class="line"></span><br><span class="line">            data.append(link)</span><br><span class="line">            data.append(img)</span><br><span class="line">            <span class="keyword">if</span> len(title) == <span class="number">2</span>:   <span class="comment">#有些电影没有外文名</span></span><br><span class="line">                ctitle = title[<span class="number">0</span>]</span><br><span class="line">                etitle = title[<span class="number">1</span>]</span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                data.append(etitle)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ctitle = title[<span class="number">0</span>]</span><br><span class="line">                etitle = <span class="string">''</span></span><br><span class="line">                data.append(ctitle)</span><br><span class="line">                data.append(etitle)</span><br><span class="line">            data.append(ranting)</span><br><span class="line">            data.append(cnumber)</span><br><span class="line">            <span class="keyword">if</span> len(dic) == <span class="number">0</span>:   <span class="comment">#有些电影没有一句话描述</span></span><br><span class="line">                data.append(<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dic=dic[<span class="number">0</span>].replace(<span class="string">"。"</span>,<span class="string">""</span>)</span><br><span class="line">                data.append(dic)</span><br><span class="line">            data.append(info.strip())</span><br><span class="line">            c+=<span class="number">1</span></span><br><span class="line">            datalist.append(data)</span><br><span class="line">            data=[]</span><br><span class="line">    <span class="keyword">for</span> items <span class="keyword">in</span> datalist:</span><br><span class="line">        print(items)</span><br><span class="line">    <span class="keyword">return</span> datalist</span><br></pre></td></tr></table></figure><h3 id="savedata">储存数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveDate</span><span class="params">(datalist,path)</span>:</span>  <span class="comment">#储存数据</span></span><br><span class="line">    book = xlwt.Workbook(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    sheet = book.add_sheet(<span class="string">'豆瓣电影Top250'</span>,cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">    print(<span class="string">"test"</span>)</span><br><span class="line">    col=(<span class="string">'链接'</span>,<span class="string">'图片链接'</span>,<span class="string">'中文名'</span>,<span class="string">'外文名'</span>,<span class="string">'评分'</span>,<span class="string">'评价人数'</span>,<span class="string">'描述'</span>,<span class="string">'信息'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">        sheet.write(<span class="number">0</span>,i,col[i]) <span class="comment">#列名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">250</span>):</span><br><span class="line">        print(<span class="string">"%d条"</span>%i)</span><br><span class="line">        data=datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            sheet.write(i+<span class="number">1</span>,j,data[j])</span><br><span class="line">    book.save(<span class="string">'豆瓣Top250.xls'</span>)</span><br></pre></td></tr></table></figure><h3 id="main">主方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def main():</span><br><span class="line">    baseurl&#x3D;&quot;https:&#x2F;&#x2F;movie.douban.com&#x2F;top250?start&#x3D;&quot;</span><br><span class="line">    datalist&#x3D;getData(baseurl) #获取数据</span><br><span class="line">    path &#x3D; &quot;.\\&quot; #存储路径 (暂时直接储存在豆瓣Top250.xls中了，这里没用到）</span><br><span class="line">    saveDate(datalist,path) #存储数据</span><br></pre></td></tr></table></figure><p>至此，初步爬取数据完毕，并储存到 <code>豆瓣Top250.xls</code> 中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br><span class="line">    print(<span class="string">'爬取完毕'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/python.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;py&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/python.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://yzyyz.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>中化现代农业实习记</title>
    <link href="https://yzyyz.top/archives/e4acfac9.html"/>
    <id>https://yzyyz.top/archives/e4acfac9.html</id>
    <published>2021-07-07T03:30:02.000Z</published>
    <updated>2021-12-20T04:59:32.781Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph0.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph0.jpg"></a></p><a id="more"></a><h3 id="bg">背景</h3><hr><h4 id="bg1">专业</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;西农是大类招生，农学在大二结束后分流，我选择了<strong>种子科学与工程</strong>专业，本专业的学生在大二暑假会被安排到不同的相关的公司实习，我被安排到了中化现代农业(陕西)有限公司  渭南经开技术服务中心。</p><h4 id="bg2">集团 公司</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;1950年3月10日，为统一全国国营贸易，完成国家进出口计划，领导国内市场，调节全国和地方的物资供求，促进国家生产事业的迅速恢复与发展，中央人民政府政务院决定在中央人民政府贸易部领导下，设立全国范围的对外贸易专业总公司。<a href="https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E4%B8%AD%E5%8C%96%E9%9B%86%E5%9B%A2%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8/22359980?fromtitle=%E4%B8%AD%E5%8C%96%E9%9B%86%E5%9B%A2&fromid=2680625&fr=aladdin" target="_blank" rel="external nofollow noopener noreferrer" title="中国中化集团有限公司-百科">中化集团</a>的前身——中国进口公司正式成立。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;目前，<a href="https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E4%B8%AD%E5%8C%96%E9%9B%86%E5%9B%A2%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8/22359980?fromtitle=%E4%B8%AD%E5%8C%96%E9%9B%86%E5%9B%A2&fromid=2680625&fr=aladdin" target="_blank" rel="external nofollow noopener noreferrer" title="中国中化集团有限公司-百科">中化集团</a>现有的五大业务板块分别为能源、化工、<strong>农业</strong>、地产和金融，这也是中化集团的主营业务。</p><p>我们去的就属于农业板块（简单总结一下：中化是央企，是我们所去公司的爸爸），MAP(Modern Agriculture Platform)现代农业技术服务平台，是中化农业业务的一个战略，主要是在当前我国农业进入高质量发展新阶段的各项条件正在加速集聚的背景下进行的智慧农业、数字化农业。从种子到种植到销售，为农户<strong>提供服务</strong>，让农户增收，帮农户<strong>“种出好品质，卖出好价钱”</strong>。</p><br><h3 id="day1">Day 1</h3><hr><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph01.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph01.jpg"></a></p><p><code>2021年7月6日中午</code><br> &nbsp;&nbsp;&nbsp;&nbsp;一行四人到了渭南北站，鑫哥(公司负责我们的人)驱车将我们接到实习地点，将行李安放到Mapper之家(宿舍)，我们简单收拾后，鑫哥和小马哥(同事)带我们到附近随便吃了点面。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>干拌面</strong>！wit小马哥&amp;鑫哥</p><p>下午在公司会议室鑫哥和卢哥(同事)带我们了解了中化集团、中化农业以及MAP。最近一段时间公司不是很忙，所以下午我们又去了超市购置了部分生活用品，傍晚与鑫哥小马哥一起打球，第一天就这样过去了。小马哥球打的挺好，看得出他也很喜欢篮球。</p><h3 id="day2">Day 2</h3><hr><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph1.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph1.jpg"></a></p><p><code>2021年7月7日</code><br>&nbsp;&nbsp;&nbsp;&nbsp;今天吃饭都是小马哥带我们去的，伙食很好哈哈哈，都是问我们想吃什么。图是早上在办公室拍的集体照（别找了照片里没我）。由于现在不是很忙，所以今天一直坐在办公室，只有干了什么，在这里我想省略掉。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>水盆羊肉</strong>！with小马哥</p><p><font style="color:#cecece">There’s something hidden here</font></p><!--&nbsp;&nbsp;&nbsp;&nbsp;下午出去吃完晚饭，鑫哥让我们把办公室实验室卫生打扫一下，我们几个私底下还暗自觉得自己愚钝，没有主动去干卫生。打扫完卫生，我才反应过来，这似乎是种惩罚：&nbsp;&nbsp;&nbsp;&nbsp;我在我们9人小组（4人在渭南5人在西安）的群里开玩笑说我们很闲，因为第一天确实没安排什么活，然后出于某种（某人）原因，这件事被负责我们实习的老师知道了，而后就被何姐（应该是鑫哥领导)知道了，再就被鑫哥知道了，所以我认为这应该是种惩罚。<p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph2.3.jpg" target="_blank" rel="noopener external nofollow noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph2.3.jpg" /></a></p>--><p>&nbsp;&nbsp;&nbsp;&nbsp;我也明白了，话 真的不可以乱讲，今后的实习生活会积极找活做，多长点眼色，严格要求自己</p><p>&nbsp;&nbsp;&nbsp;&nbsp;麻了麻了，本来也确实是我的错，怪不得那某种原因，今天就这样吧</p><h3 id="day3">Day 3</h3><hr><p><code>2021年7月8日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;今早在办公室完成了实习小组新闻稿的撰写，向学院那边投稿了，进程比较慢，在大学生网报也进行了投稿：<a href="http://www.dxswb.com/shijian/356609.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.dxswb.com/shijian/356609.html</a><br>不过这小网站上传图片有点问题，就发了纯文字。<br>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>臊子面</strong>！with卢哥</p><h3 id="day4">Day 4</h3><hr><p><code>2021年7月9日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;前一日晚小马哥在群里派活，需要一个人今早7点来办公室，田钊接了，我就8点多到的办公室。<br>&nbsp;&nbsp;&nbsp;&nbsp;办公室来了两个人，看样子是跟鑫哥他们很熟，我也没问，办公室就我们四个，他们坐下后我便给二位接了两杯水。后来开了把游戏，结果半道鑫哥回来了，我甚至还想打完这局，但是鑫哥说：<code>办公室不能打游戏，无论是手游还是电脑</code> 其实就是在说我，但是没叫我名字，我就直接退了。然后就感觉，我是来实习的阿，我是来学东西的，打游戏可以在宿舍打，办公室打太不应该了。而后我就在网上看一些关于中国农业的文章。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>蒸饺</strong>！with鑫哥<br>&nbsp;&nbsp;&nbsp;&nbsp;和鑫哥吃饭的时候我们聊了关于过两天巡田的工作，</p><p>&nbsp;&nbsp;&nbsp;&nbsp;下午继续看了部分文章，鑫哥让我从一张签到表的照片里抄15条签到信息，看不懂的字再问他。22个里面抄12个（他抄了3个），其实没啥大问题，我抄到了14个，剩下都是名字看不懂，看得懂名字的合作社名字可能看不懂，但是合作社名字大概百度一下就百度到了，EZ,最后一个随便找了个看不懂的问了鑫哥。算是完成了<br>鑫哥说：</p><blockquote><p>你们从学校走到社会单位做事，其实工作就是做事，老板让你们做一件事，你在做的时候可能会遇到一些问题，然后你们通过自己，或者同事，把困难解决了，再把结果给老板，老板他只要个结果，就是这样。（大概是这样说的）</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;其实这个道理我也明白，自己也有体会，算是今天的小收获。</p><h3 id="day5">Day 5</h3><hr><p><code>2021年7月10日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;今早没什么活儿，在办公室学爬虫</p><p>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>水盆羊肉</strong>！with王鼎</p><p>&nbsp;&nbsp;&nbsp;&nbsp;下午在办公室做了些表格(可以说是文职工作），18点左右，下班的点（其实公司并没有这么明确，是我们自己觉得如此）做完了，我们四人和鑫哥还有小马哥去打球，完事儿小马哥带我们吃了李想大虾。<br>&nbsp;&nbsp;&nbsp;&nbsp;晚上去吃虾，我们喝了点酒，边喝边聊，聊了许多，总结为以下几方面</p><ul><li>中化的历史和未来</li><li>中化农业怎么赚钱</li><li>农业的未来</li><li>农学人的情怀</li><li>中国部分地区高考优惠政策</li><li>不同专业要走的路和要挣的钱</li><li>学生时代恋爱</li><li>大学生（我们）的前途</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;19年毕业的小马哥也是个有情怀的人，（昨天跟鑫哥吃饭也聊了些相关农业之类的，鑫哥对这些事也非常明白，也很有情怀！）今晚我们聊了许多真的也收获了许多，前一段时间我对自己未来要走的路确实非常迷茫，有一定目标但还属于迷茫的范畴。今天又说起这事大家都在开导我, 有些点确实是我没想到的，突然也就想明白了许多。</p><h3 id="day6">Day 6</h3><hr><p><code>2021年7月11日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;早上到办公室，王鼎、奕涵跟小马哥一起去华洲了，我在办公室改互联网+大赛的PPT,效率很低，没什么思路。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>大盘鸡</strong>！with师姐（师姐姓师）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;下午跟着师姐去了三户农户家里，主要就是巡田，推保险（最近是推保险的时间，我们不了解，全是师姐在做，我们跟着）。在官道镇那边的时候，看见了一些老房子，让我想起了从前在跟外婆，跟爷爷生活的日子 —— 一段与山，与水，与萤火虫为伴的日子……</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph6.1.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph6.1.jpg"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;跑了一下午，师姐对农户家里情况都比较了解，（今天下午师姐专门带我们去的比较好说话的农户家里），去了都是巡巡田，拉拉家常,谈的比较融洽，突然不甘于出来就是个销售…不过做农业真的需要情怀，干啥不是干呢。</p><h3 id="day7">Day 7</h3><hr><p><code>2021年7月12日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;今天没外出，除了早上跟小马哥一起去拉了点种子回来，下午在办公室做表格，做完了我的那部分又继续改PPT，这一天过的很快阿。<br>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>驴蹄子面</strong>with小马哥</p><h3 id="day8">Day 8</h3><hr><p><code>2021年7月13日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;今天是改PPT的一天！ </p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph8.1.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph8.1.jpg"></a></p><font style="color:#cecece;">今天的云很好看</font><p>&nbsp;&nbsp;&nbsp;&nbsp;小马哥休假了，今天师姐出去了一趟，我由于在改PPT就没跟着去，田钊和奕涵跟着去了。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;午餐<strong>拉条~</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;下午回宿舍后麻了，就睡着了，第二天听鑫哥说他在楼下喊我俩打球来着，我没听，听师姐说我们来之前鑫哥跟小马哥就投投球，没人打。</p><h3 id="day9">Day 9</h3><hr><p><code>2021年7月14日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;早上加改完ppt发给学姐，跟着鑫哥出去了，巡了巡田，去农户家里送了点农药，收获挺多的：</p><p style="text-align:center;position:relative;width:40%;float:left;padding-bottom:25px"><a href="https://cdn.yzyyz.top/img/mapph9.1.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph9.1.jpg"></a></p><p style="text-align:center;position:relative;width:50%;padding:15px;margin-bottom: 50px"><a href="https://cdn.yzyyz.top/img/mapph9.2.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph9.2.jpg"></a></p><br><p style="width=100%;margin:0 auto">图1：<font style="color:#cecece;">玉米黏虫危害(上) 玉米螟危害(下) </font>  &nbsp; &nbsp; &nbsp; &nbsp;图2：<font style="color:#cecece;">化控适当(左 较晚(中) 过早(右) </font></p><blockquote><p>玉米叶面有排孔是<font style="color:#ff7f50">玉米螟</font>造成的，其在心叶期潜入心叶驻食，故造成排列整齐的孔洞。而<font style="color:#ff7f50">玉米黏虫</font>则造成叶面不规则的孔洞，大面积缺刻，严重时会将叶片吃光，只留叶脉。</p></blockquote><blockquote><p>玉米化控（控旺）是在玉米6-10叶期对其施用调节剂，控制生长，以达到降低穗位的效果，可有效防止倒伏，又可促进营养物质向穗部运转，减少空杆、秃尖。图中适当时期化控时，最下面的节间（1-3节）距是比较小的，而过晚时间距比较大，可以看到其气生根也抬起很高，过早则会引起不正确缩节，导致发育不良。故化控的时机是很重要的。</p></blockquote><blockquote><p>玉米叶有<strong>五光六毛</strong>的特点，即玉米叶片从基部开始数，一直到第5片叶子是光滑的，是没有绒毛的，而从第6片叶开始有绒毛，摸上去有拉手的感觉。</p></blockquote><blockquote><p>在农药标签的下方，有一条与 底边平行的、不褪色的颜色标志带，不同的颜色代表此农药所属 的类别：<font style="color:#2ed573">绿色标志</font>带代表除草剂，<font style="color:#ff4757">红色</font>为杀虫剂，<font style="color:#2f3542">黑色</font>为杀菌剂，<font style="color:#ffa502">深黄色</font>代表植物生长调节剂，杀鼠剂使用<font style="color:#1e90ff">蓝色</font>（卫生杀虫剂 除外)。</p></blockquote><h3 id="day10">Day 10</h3><hr><p><code>2021年7月15日</code></p><h3 id="day11">Day 11</h3><hr><p><code>2021年7月16日</code></p><h3 id="day12">Day 12</h3><hr><p><code>2021年7月17日</code></p><h3 id="day13">Day 13</h3><hr><p><code>2021年7月18日</code></p><h3 id="day14">Day 14</h3><hr><p><code>2021年7月19日</code></p><h3 id="day15">Day 15</h3><hr><p><code>2021年7月20日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;很明显，以上数天没有实质性的太多工作，今天小马哥带我和王鼎去华州了，一整天，跑了很远，主要就是在MAP智农上划地，完事儿又在几个农户家去了一趟，累趴了……</p><h3 id="day16">Day 16--21</h3><hr><p><code>2021年7月21-26日</code></p><p>写了一周代码<br>项目地址：：<a href="http://nwafu.ac.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://nwafu.ac.cn/</a><br>源码：<a href="https://github.com/yzyyz1387/flask-visualData-practice" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/yzyyz1387/flask-visualData-practice</a></p><p>文章：</p><ul><li><a href="https://yzyyz.top/archives/f61ee6db.html">Python爬虫（一）</a></li><li><a href="https://yzyyz.top/archives/c6080a03.html">Python爬虫（二）</a></li><li><a href="https://yzyyz.top/archives/8b16a951.html">Python爬虫（三）</a></li><li><a href="https://yzyyz.top/archives/65627bf1.html">Python爬虫（四）-小项目完结</a></li><li><a href="https://yzyyz.top/archives/9ce8dfe4.html">VisualData项目补充</a></li></ul><h3 id="day22">Day 22</h3><hr><p><code>2021年7月27日</code></p><h3 id="day23">Day 23</h3><hr><p><code>2021年7月28日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;今天跟高老师去了华阴的示范农场（离服务中心大概60-70公里），原本是要调查些数据，去了之后老师说时间不合适；干了些杂活，后又分辨了下地里随机两个品种玉米的区别……</p><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/mapph23.1.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="MAP"><img src="https://cdn.yzyyz.top/img/mapph23.1.jpg"></a></p><h3 id="day24">Day 24-27</h3><hr><p><code>2021年7月29-8月1日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;没什么印象特别深的事，在办公室坐着，有时会帮着干点杂活</p><h3 id="day28">Day 28</h3><hr><p><code>2021年8月2日</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;要走了，我想着给鑫哥他们送点东西留作纪念，这件事我也早就跟同行的人提过，今天却得到了回复：<code>成年人的世界不要搞那么复杂</code>。我不知道该说什么，我觉得成年人的世界才是人情世故，再者，其一，卢哥当时给我呢吧拿公司的帽子时说：<code>给你们一人那个帽子，留作纪念</code>，其二，刚来这儿的时候出去吃饭都是他们付钱，我之前也提过。所以我搞不懂为什么走的时候送点东西就成了复杂，我还是自己买吧[微笑]</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/mapph0.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;MAP&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/mapph0.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="在西农" scheme="https://yzyyz.top/tags/%E5%9C%A8%E8%A5%BF%E5%86%9C/"/>
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>接水自由--方便同学的小项目</title>
    <link href="https://yzyyz.top/archives/eae69302.html"/>
    <id>https://yzyyz.top/archives/eae69302.html</id>
    <published>2021-06-09T09:07:56.000Z</published>
    <updated>2021-12-20T04:59:32.676Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/freewater/freewt.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="freewater"><img src="https://cdn.yzyyz.top/img/freewater/freewt.jpg"></a></p><p><code>更新：2021年6月18日</code></p><hr><a id="more"></a><br>原题：FreeWater--方便同学的小项目2021年6月18日做出更改<h3 id="f">相关文章</h3><ul><li><a href="http://water.yzyyz.top" target="_blank" rel="external nofollow noopener noreferrer">项目地址</a></li><li><a href="https://www.coolapk.com/feed/27304566?shareKey=ZTIzYTllNDU3MmZlNjBjMDg1YTE~&shareUid=775290&shareFrom=com.coolapk.market_11.2.3" target="_blank" rel="external nofollow noopener noreferrer">酷友文章</a></li></ul><h3 id="s">项目概述</h3><hr><p>西农学生宿舍里的直饮水机，以前接水刷卡即可，现在学校跟支付宝合作，使用企鹅共享，接水时需要扫码，再点击解锁，再按下机器上的按钮，才能出水，十分繁琐。本项目将扫码并点击手机中”解锁”按钮这一步进行简化，在app中点击一个按钮便可完成。</p><h3 id="t">项目内容</h3><hr><p>于是我对扫码解锁进行了抓包，发现解锁机器只用提交两个数据，<code>machineFunctionId</code> 和 <code>token</code>,请求地址为 <code>https://userapi.qiekj.com/machine/water/unlock</code></p><p>machineFunctionId是机器的id，token是每个支付宝用户登录企鹅共享生成的token，下一次登录时token会更新，抓到token后不再去登录企鹅共享则该token可一直使用。</p><p>该项目后台主要是php提交post，此处感谢<strong>π</strong>的技术支持。起初只是为了自己方便，而现在<code>2021年6月9日17:19:52</code>该项目已经覆盖29*2台机器（冷热）</p><p>该项目核心php文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$Data_Base_Path=<span class="string">"http://water.yzyyz.top/xxxxxx/xxxx/xxx/xxx.txt"</span>;</span><br><span class="line">$Url=<span class="string">"https://userapi.qiekj.com/machine/water/unlock"</span>;</span><br><span class="line">$string=$_GET[<span class="string">'machine'</span>];</span><br><span class="line">$ID=Get_Id($Data_Base_Path,$string);</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>安卓用户通过app向water.php传入参数，传入的参数代表一台机器，后端通过检索机器找到机器id，再提交post请求，达到一键解锁效果</p><p>ios用户可手动配置快捷指令，以达到语音解锁(Siri)，或一键解锁</p><p>如传入<code>machine=4n1e-ice</code>（4北校1楼东侧冷水），php则在<code>xxx.txt</code>中找到对应id为<code>202009041308369270000010955664458</code>,再将id和token一起向<code>https://userapi.qiekj.com/machine/water/unlock</code>提交post请求，返回值为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>, </span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"成功"</span>, </span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"msgId"</span>: <span class="string">"xxxxxx"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">"t"</span>: xxxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>表示解锁成功，值得注意的是，该token代表我的支付宝账户(实现每个人都使用自己的token我不会。。。。)，故用户接水<strong>花的是我的钱</strong>，目前稳定在平均每天10元左右，项目得以继续并不是因为我是土豪，而是因为有各位用户的捐赠，但还是有白嫖用户，故预计后期将上线用户系统，限制白嫖用户的使用。</p><h3 id="fo">项目新内容</h3><hr><p>飞鱼发现了企鹅共享的网页版： <a href="http://h5.qiekj.com" target="_blank" rel="external nofollow noopener noreferrer">https://h5.qiekj.com</a> 在该网页中可以使用手机号及验证码登录，随后我进行抓包内容如下：</p><h4 id="sendcode">发送验证码</h4><p>请求地址：<code>https://useraoi.qiekj.com/common/sms/sendCode</code><br>post参数：<code>phone=手机号&amp;template=reg</code><br>返回值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"t"</span>: xxxxxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>表示验证码发送成功</p><h4 id="login">登录</h4><p>请求地址：<code>https://useraoi.qiekj.com/user/reg</code><br>post参数：<code>channel=h5&amp;phone=手机号&amp;verify=验证码</code><br>返回值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"token"</span>: <span class="string">"xxxxxxxxxxxx"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"t"</span>: xxxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>表示登录成功，在这里我们就获取到了token，故重构了前面提到的php,新加传入参数<code>token</code><br>则用户可使用自己的账户接水</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$Token=$_GET[<span class="string">'token'</span>];</span><br></pre></td></tr></table></figure><h4 id="infom">获取用户信息</h4><p>请求地址：<code>https://useraoi.qiekj.com/user/info</code><br>post参数：<code>token=xxxxxxxxxxxx</code><br>返回值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"id"</span>: xxxxxxxxxx,</span><br><span class="line">        <span class="attr">"userName"</span>: 用户企鹅共享昵称,</span><br><span class="line">        <span class="attr">"sex"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"birthday"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">"phone"</span>: 手机号,</span><br><span class="line">        <span class="attr">"headImageId"</span>: 头像链接（直链）,</span><br><span class="line">        <span class="attr">"balance"</span>: <span class="string">"0.00"</span>,</span><br><span class="line">        <span class="attr">"unCompleteOrders"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">"hasVip"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"t"</span>: xxxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标识获取成功，并返回相应信息</p><h3 id="upload">更新</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(2021-06-18 00:44)        2.1 beta 1.0.1修复上版冷水按钮的问题</span><br><span class="line">(2021-06-18 00:00)        2.1 beta 1.0支持自己的账户登录</span><br><span class="line">                          2.0.2-1 解决软件报毒的问题（采取自愿更新，可在官网下载，软件不提示更新）</span><br><span class="line">                          2.0.2 更新后端运行策略，（特别感谢π的技术支持)暂时修复侧滑中捐赠存在的问题，选择机器页增加加群按钮，预计同期更新官网部分UI</span><br><span class="line">                          2.0.1 修复按钮隐藏后不恢复可见性的问题</span><br><span class="line">(2021-05-24 21:34)        2.0 全新版本，支持多楼层使用，增加侧滑页面</span><br><span class="line">(2021-05-20 00:38)        1.0 首次发布，支持四号楼1楼东侧饮水机的使用</span><br></pre></td></tr></table></figure><p><code>2021年6月18日</code>的更新实现了使用自己的账户登录，并新增了用户协议，协议地址：<a href="http://water.yzyyz.top/yhxy.html" target="_blank" rel="external nofollow noopener noreferrer">用户服务协议和隐私政策</a></p><ul><li><a href="http://water.yzyyz.top" target="_blank" rel="external nofollow noopener noreferrer">项目地址 http://water.yzyyz.top/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/freewater/freewt.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;freewater&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/freewater/freewt.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;更新：2021年6月18日&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="开发" scheme="https://yzyyz.top/tags/%E5%BC%80%E5%8F%91/"/>
    
      <category term="在西农" scheme="https://yzyyz.top/tags/%E5%9C%A8%E8%A5%BF%E5%86%9C/"/>
    
  </entry>
  
  <entry>
    <title>农学--关于我的专业</title>
    <link href="https://yzyyz.top/archives/717612ba.html"/>
    <id>https://yzyyz.top/archives/717612ba.html</id>
    <published>2021-05-23T07:22:03.000Z</published>
    <updated>2021-12-20T04:59:32.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="text-align:center;"><a href="https://cdn.yzyyz.top/img/cna/cna.jpg" target="_blank" rel="external nofollow noopener noreferrer" data-fancybox="images" data-caption="CNA"><img src="https://cdn.yzyyz.top/img/cna/cna.jpg"></a></p><hr><br><a id="more"></a><h3 id="f">背景因素</h3><p><strong><code>2021年5月22日13:07</code></strong>  袁隆平先生在长沙逝世，11时许 <strong>CGTN</strong>  在官方之前发布了袁老逝世的消息，当时看到这条消息时，我心头一震，发自肺腑的那种，就好像大家平时说的：我DNA动了。心里确实有一种震惊和缺憾，后来在网上看见一些视频，更是心情久久不能平复，热泪盈眶。<a href="https://cdn.yzyyz.top/img/cna/yl.mp4" target="_blank" rel="external nofollow noopener noreferrer" title="点击查看视频之一">点击查看视频之一</a></p><br><p>2019年我考入 <a href="https://baike.baidu.com/item/%E8%A5%BF%E5%8C%97%E5%86%9C%E6%9E%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6" target="_blank" rel="external nofollow noopener noreferrer" title="点击查看详情">西北农林科技大学</a> 报名专业为计算机，接受调剂到了<a href="https://baike.baidu.com/item/%E8%A5%BF%E5%8C%97%E5%86%9C%E6%9E%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%86%9C%E5%AD%A6%E9%99%A2" target="_blank" rel="external nofollow noopener noreferrer" title="点击了解西农农学院">农学</a>，逐渐对农学也有了感情，（好友飞鱼曾说 <strong><code>托起中国农业明天的太阳</code></strong>，结果转头转到了信工学院）。</p><blockquote><p>你觉得咱们国家现在农业发展情景咋样？<br>是比较危机，还是比较良好？<br>中国会出现饿死人的情况吗？</p></blockquote><p><strong><code>2021年5月22日晚</code></strong>  好友小邢对我提出以上问题，那会儿我在外面吃火锅。没有做出回答，我觉得这个问题要好好说道说道，不能马马虎虎就回答了。</p><h3 id="s">对中国农业的看法</h3><p>次日，对于她的问题，我做出了如下回答，也是我对中国农业的看法(忽略标点)</p><br><blockquote><p> 中国农业算是良好吧<br>最近的是疫情以来，农业就很受关注，疫情对整个农业的生产流通销售都产生了影响。中国的第一产业，也就是农业（泛指，包括各种农林渔牧），是服务于第二三产业的，农业受到冲击也会影响到其他方方面面。中国是个农业大国，而不是农业强国，相比起来，一些农业大国可以用很少的人养活很多的人，而中国十四亿多人，很少的人根本养不活全国。当然了，我国目前农民还是很多的，但是从农业现代化来说，确实有所不足，现代化发展很慢;<br><br> 机械化方面，比如:<br>地理因素，地形什么的导致机械化很难广泛运用；<br>种植习惯、作物种类因素，中国农作物种植多种多样，每种作物的种植模式、对机械的需求程度等等方面都有所不同；<br><br> 农民本身，中国农民其实赚不了多少钱，但是又由于农村的各种制度，他们的土地或是分布不均的，而且地也少，就是一户的地可能分布在不同的地方，零零散散的，那他们自己一是承受不起购置机械的经济压力，就算购置了由于土地问题运用机械也很麻烦**<br>反正现代化很不全面，我这里只说了机械化，现代化还有水利之类的<br><br>拿我的专业来说，那就是科学化，这个也不太容易，“将论文写在大地上”，听起来还是很厉害的，但是一种或一类科研成果在农村推广也不是容易的事情，农民普遍知识水平不高，知识分子相对农民而言算是比较少吧，反正我觉得国内知识到科技到运用到农业就很鸡肋，我说不清这里了…每年国内什么水稻，小麦各种新品种特别多，多到离谱，但是种水稻的地方就种那么一两种品种，小麦也是<br> 中国人多，农业比重应该不是很会降低，目前搞乡村振兴，靠什么，也许是其他旅游等，但是农业也是必不可少的<br> 跟其他国家比也不太合适，国外有过人之处确实，但中国也要考虑自身，因地制宜<br>饿死人不会吧，精准扶贫也不是做做样子。现在很多的人都不想吃饱了，而是在想食品安全，怎样吃安全健康营养，可能单纯的高产作物种植比例会下降，而去种一些类似于有营养的，口感好的东西<br><br> 当然中国农业是一直在进步的，我也相信会越来越好<br>还有很长一段路要走</p></blockquote><br>她回复道：<blockquote><p> 谢谢你的郑重回复，我问你这个问题也是昨天和朋友闲聊，他觉得中国农业发展很不乐观，农民的比例也越来越少，有很多农业问题还没有暴露出来，但是情况也很严重。比如农民比例少，未来可能会因为国际关系，导致中国进口粮食受到制约，从而导致我们国家之后供应不上粮食，同时国家对于农业的各种政策也不太乐观。很多土地都变成了吃补助的存在，而不是产量</p></blockquote><h4 id="ss">文章推荐</h4><ul><li><p><a href="https://baijiahao.baidu.com/s?id=1686136544084312273&wfr=spider&for=pc" target="_blank" rel="external nofollow noopener noreferrer">农业农村部：2020年全国农作物耕种收机械化率高达71%</a></p></li><li><p><a href="http://www.cas.cn/zjs/202009/t20200929_4761757.shtml?ivk_sa=1024320u" target="_blank" rel="external nofollow noopener noreferrer" title="许智宏：中国农业的发展现状与未来趋势">许智宏：中国农业的发展现状与未来趋势</a></p></li></ul><h3 id="t">我的专业</h3><ul><li><a href="https://epaper.gmw.cn/gmrb/html/2021-06/08/nw.D110000gmrb_20210608_7-13.htm" target="_blank" rel="external nofollow noopener noreferrer" title="农学：新农业科技革命的先锋专业">农学：新农业科技革命的先锋专业</a></li></ul><p>  西农是大类招生，大二专业分流，我选择了<strong>种子科学与工程</strong>，这个倒是区别也不大，都还是农学，我认为近年来至不久后是农业发展的特殊时期，当下的农业事业，可以说是一种探索。我们知道像计算机等行业是需要不断创新的，农业又何尝不是，一批批科研人员在不断进行着相关创新。当下农业事业的探索也可理解为在为我们这代农学人铺路，说不定等到我走出来的时候，农业发展势头已经大好，乐观的说我就可以更好地投入农业事业了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;https://cdn.yzyyz.top/img/cna/cna.jpg&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; data-fancybox=&quot;images&quot; data-caption=&quot;CNA&quot;&gt;&lt;img src=&quot;https://cdn.yzyyz.top/img/cna/cna.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="在西农" scheme="https://yzyyz.top/tags/%E5%9C%A8%E8%A5%BF%E5%86%9C/"/>
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>处世小悟</title>
    <link href="https://yzyyz.top/archives/cc667093.html"/>
    <id>https://yzyyz.top/archives/cc667093.html</id>
    <published>2021-05-04T16:00:00.000Z</published>
    <updated>2021-06-08T13:57:40.183Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一些近期在生活中领会到的感悟，算是处世的一些指导。</p><a id="more"></a><p>&nbsp; &nbsp; &nbsp; &nbsp; 一个就是行知合一，好像是王阳明提出的「知行合一」。也就是字面意思，不能眼高手低，做了说话的巨人，行动的矮子。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 其次是多走弯路，我现在这个年龄阶段，试错的机会还算是很多吧，多走路，多走些弯路，能增加EXP。遇到事先不去怀疑自己能不能行，先说自己行，干了再说。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 然后是如何证明自己有足够的能力，我想就是去成就别人，就好像学习，你把你会的知识教给别人一样。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些近期在生活中领会到的感悟，算是处世的一些指导。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://yzyyz.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
